<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="Mocha Tests" time="3.5640" tests="927" failures="0">
  <testsuite name="Root Suite" timestamp="2020-03-31T18:26:42" tests="0" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="AwsExplorer" timestamp="2020-03-31T18:26:42" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/awsExplorer/awsExplorer.test.js" time="0.0030" failures="0">
    <testcase name="AwsExplorer displays region nodes with user-friendly region names" time="0.0020" classname="displays region nodes with user-friendly region names">
    </testcase>
    <testcase name="AwsExplorer refreshes when the Region Provider is updated" time="0.0010" classname="refreshes when the Region Provider is updated">
    </testcase>
  </testsuite>
  <testsuite name="RegionNode" timestamp="2020-03-31T18:26:42" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/awsExplorer/regionNode.test.js" time="0.0000" failures="0">
    <testcase name="RegionNode initializes name and tooltip" time="0.0000" classname="initializes name and tooltip">
    </testcase>
    <testcase name="RegionNode contains children" time="0.0000" classname="contains children">
    </testcase>
    <testcase name="RegionNode does not have child nodes for services not available in a region" time="0.0000" classname="does not have child nodes for services not available in a region">
    </testcase>
  </testsuite>
  <testsuite name="detectCdkProjects" timestamp="2020-03-31T18:26:42" tests="5" file="/codebuild/output/src956146630/src/dist/src/test/cdk/detectCdkProjects.test.js" time="0.0040" failures="0">
    <testcase name="detectCdkProjects detects no projects when workspaceFolders is undefined" time="0.0010" classname="detects no projects when workspaceFolders is undefined">
    </testcase>
    <testcase name="detectCdkProjects detects no projects when workspaceFolders is empty" time="0.0000" classname="detects no projects when workspaceFolders is empty">
    </testcase>
    <testcase name="detectCdkProjects detects no projects when cdk.json does not exist" time="0.0010" classname="detects no projects when cdk.json does not exist">
    </testcase>
    <testcase name="detectCdkProjects detects CDK project when cdk.json exists" time="0.0010" classname="detects CDK project when cdk.json exists">
    </testcase>
    <testcase name="detectCdkProjects detects CDK projects in multi-folder workspace" time="0.0010" classname="detects CDK projects in multi-folder workspace">
    </testcase>
  </testsuite>
  <testsuite name="AppNode" timestamp="2020-03-31T18:26:42" tests="5" file="/codebuild/output/src956146630/src/dist/src/test/cdk/explorer/appNode.test.js" time="0.0040" failures="0">
    <testcase name="AppNode initializes label and tooltip" time="0.0010" classname="initializes label and tooltip">
    </testcase>
    <testcase name="AppNode initializes icon paths" time="0.0000" classname="initializes icon paths">
    </testcase>
    <testcase name="AppNode returns placeholder node when app contains no stacks" time="0.0010" classname="returns placeholder node when app contains no stacks">
    </testcase>
    <testcase name="AppNode returns construct node when app has stacks" time="0.0010" classname="returns construct node when app has stacks">
    </testcase>
    <testcase name="AppNode returns placeholder node when tree.json cannot be loaded" time="0.0010" classname="returns placeholder node when tree.json cannot be loaded">
    </testcase>
  </testsuite>
  <testsuite name="AwsCdkExplorer" timestamp="2020-03-31T18:26:42" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/cdk/explorer/awsCdkExplorer.test.js" time="0.0010" failures="0">
    <testcase name="AwsCdkExplorer Displays Error node indicating that no CDK projects were found in empty workspace" time="0.0000" classname="Displays Error node indicating that no CDK projects were found in empty workspace">
    </testcase>
    <testcase name="AwsCdkExplorer Displays a project node when workspaces are detected" time="0.0010" classname="Displays a project node when workspaces are detected">
    </testcase>
  </testsuite>
  <testsuite name="ConstructNode" timestamp="2020-03-31T18:26:42" tests="10" file="/codebuild/output/src956146630/src/dist/src/test/cdk/explorer/constructNode.test.js" time="0.0030" failures="0">
    <testcase name="ConstructNode initializes label and tooltip" time="0.0000" classname="initializes label and tooltip">
    </testcase>
    <testcase name="ConstructNode returns id that includes parent&apos;s id and it&apos;s own label" time="0.0000" classname="returns id that includes parent&apos;s id and it&apos;s own label">
    </testcase>
    <testcase name="ConstructNode initializes icon paths for CloudFormation resources" time="0.0000" classname="initializes icon paths for CloudFormation resources">
    </testcase>
    <testcase name="ConstructNode initializes icon paths for CDK constructs" time="0.0000" classname="initializes icon paths for CDK constructs">
    </testcase>
    <testcase name="ConstructNode returns no child nodes if construct does not have any" time="0.0000" classname="returns no child nodes if construct does not have any">
    </testcase>
    <testcase name="ConstructNode child node has no collapsible state if it has no children or attributes" time="0.0000" classname="child node has no collapsible state if it has no children or attributes">
    </testcase>
    <testcase name="ConstructNode child node is collapsed if construct has child with attributes" time="0.0010" classname="child node is collapsed if construct has child with attributes">
    </testcase>
    <testcase name="ConstructNode returns child node of PropertyNode when construct has props" time="0.0010" classname="returns child node of PropertyNode when construct has props">
    </testcase>
    <testcase name="ConstructNode returns child nodes of PropertyNode and ConstructNode when construct has props and children" time="0.0010" classname="returns child nodes of PropertyNode and ConstructNode when construct has props and children">
    </testcase>
    <testcase name="ConstructNode returns child node if a construct has grandchildren" time="0.0000" classname="returns child node if a construct has grandchildren">
    </testcase>
  </testsuite>
  <testsuite name="CdkErrorNode" timestamp="2020-03-31T18:26:42" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/cdk/explorer/errorNode.test.js" time="0.0000" failures="0">
    <testcase name="CdkErrorNode initializes label and tooltip" time="0.0000" classname="initializes label and tooltip">
    </testcase>
    <testcase name="CdkErrorNode has no children" time="0.0000" classname="has no children">
    </testcase>
  </testsuite>
  <testsuite name="PropertyNode" timestamp="2020-03-31T18:26:42" tests="8" file="/codebuild/output/src956146630/src/dist/src/test/cdk/explorer/propertyNode.test.js" time="0.0010" failures="0">
    <testcase name="PropertyNode initializes label" time="0.0000" classname="initializes label">
    </testcase>
    <testcase name="PropertyNode initializes icon paths for properties" time="0.0000" classname="initializes icon paths for properties">
    </testcase>
    <testcase name="PropertyNode returns no children when property does not have nested values" time="0.0000" classname="returns no children when property does not have nested values">
    </testcase>
    <testcase name="PropertyNode returns single child when property has a string value" time="0.0000" classname="returns single child when property has a string value">
    </testcase>
    <testcase name="PropertyNode returns single child when property has a boolean value" time="0.0000" classname="returns single child when property has a boolean value">
    </testcase>
    <testcase name="PropertyNode returns single child when property has an int value" time="0.0000" classname="returns single child when property has an int value">
    </testcase>
    <testcase name="PropertyNode returns a nested property node with a property node for each value in the array" time="0.0010" classname="returns a nested property node with a property node for each value in the array">
    </testcase>
    <testcase name="PropertyNode returns a nested property node with nested object as child property nodes" time="0.0000" classname="returns a nested property node with nested object as child property nodes">
    </testcase>
  </testsuite>
  <testsuite name="TreeInspector" timestamp="2020-03-31T18:26:42" tests="10" file="/codebuild/output/src956146630/src/dist/src/test/cdk/tree/treeInspector.test.js" time="0.0020" failures="0">
    <testcase name="TreeInspector returns label when construct is not named Resource" time="0.0010" classname="returns label when construct is not named Resource">
    </testcase>
    <testcase name="TreeInspector includes type when construct is named Resource and type exists" time="0.0000" classname="includes type when construct is named Resource and type exists">
    </testcase>
    <testcase name="TreeInspector returns unchanged label when construct is named Resource and no type information exists" time="0.0000" classname="returns unchanged label when construct is named Resource and no type information exists">
    </testcase>
    <testcase name="TreeInspector returns default if no type information exists" time="0.0000" classname="returns default if no type information exists">
    </testcase>
    <testcase name="TreeInspector returns type when type information exists" time="0.0000" classname="returns type when type information exists">
    </testcase>
    <testcase name="TreeInspector includes construct in tree" time="0.0000" classname="includes construct in tree">
    </testcase>
    <testcase name="TreeInspector excludes the `Tree` construct that the CDK adds by default" time="0.0000" classname="excludes the `Tree` construct that the CDK adds by default">
    </testcase>
    <testcase name="TreeInspector returns properties when a construct has attributes" time="0.0010" classname="returns properties when a construct has attributes">
    </testcase>
    <testcase name="TreeInspector returns undefined when construct does not have attributes" time="0.0000" classname="returns undefined when construct does not have attributes">
    </testcase>
    <testcase name="TreeInspector returns undefined when construct does not have CloudFormation properties" time="0.0000" classname="returns undefined when construct does not have CloudFormation properties">
    </testcase>
  </testsuite>
  <testsuite name="updateCredentialsStatusBarItem" timestamp="2020-03-31T18:26:42" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/credentials/awsCredentialsStatusBarItem.test.js" time="0.0000" failures="0">
    <testcase name="updateCredentialsStatusBarItem updates text with credentials id" time="0.0000" classname="updates text with credentials id">
    </testcase>
    <testcase name="updateCredentialsStatusBarItem updates text with placeholder when there is no credentials id" time="0.0000" classname="updates text with placeholder when there is no credentials id">
    </testcase>
  </testsuite>
  <testsuite name="BaseCredentialsProviderFactory" timestamp="2020-03-31T18:26:42" tests="6" file="/codebuild/output/src956146630/src/dist/src/test/credentials/provider/credentialsProviderFactory.test.js" time="0.0000" failures="0">
    <testcase name="BaseCredentialsProviderFactory can add a provider" time="0.0000" classname="can add a provider">
    </testcase>
    <testcase name="BaseCredentialsProviderFactory can remove a provider" time="0.0000" classname="can remove a provider">
    </testcase>
    <testcase name="BaseCredentialsProviderFactory can reset providers" time="0.0000" classname="can reset providers">
    </testcase>
    <testcase name="BaseCredentialsProviderFactory can list providers" time="0.0000" classname="can list providers">
    </testcase>
    <testcase name="BaseCredentialsProviderFactory returns a requested provider" time="0.0000" classname="returns a requested provider">
    </testcase>
    <testcase name="BaseCredentialsProviderFactory returns undefined when requesting a provider it does not have" time="0.0000" classname="returns undefined when requesting a provider it does not have">
    </testcase>
  </testsuite>
  <testsuite name="CredentialsProviderId" timestamp="2020-03-31T18:26:42" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/credentials/provider/credentialsProviderId.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="fromString" timestamp="2020-03-31T18:26:42" tests="4" file="/codebuild/output/src956146630/src/dist/src/test/credentials/provider/credentialsProviderId.test.js" time="0.0000" failures="0">
    <testcase name="CredentialsProviderId fromString produces CredentialsProviderId from a string" time="0.0000" classname="produces CredentialsProviderId from a string">
    </testcase>
    <testcase name="CredentialsProviderId fromString supports cases where the separator is in the credentialTypeId" time="0.0000" classname="supports cases where the separator is in the credentialTypeId">
    </testcase>
    <testcase name="CredentialsProviderId fromString errs on unexpected format - not enough separators" time="0.0000" classname="errs on unexpected format - not enough separators">
    </testcase>
    <testcase name="CredentialsProviderId fromString errs on unexpected format - different separator" time="0.0000" classname="errs on unexpected format - different separator">
    </testcase>
  </testsuite>
  <testsuite name="asString" timestamp="2020-03-31T18:26:42" tests="1" file="/codebuild/output/src956146630/src/dist/src/test/credentials/provider/credentialsProviderId.test.js" time="0.0000" failures="0">
    <testcase name="CredentialsProviderId asString converts a CredentialsProviderId to a string" time="0.0000" classname="converts a CredentialsProviderId to a string">
    </testcase>
  </testsuite>
  <testsuite name="isEqual" timestamp="2020-03-31T18:26:42" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/credentials/provider/credentialsProviderId.test.js" time="0.0010" failures="0">
    <testcase name="CredentialsProviderId isEqual detects matches" time="0.0000" classname="detects matches">
    </testcase>
    <testcase name="CredentialsProviderId isEqual detects non-matches in credentialType" time="0.0000" classname="detects non-matches in credentialType">
    </testcase>
    <testcase name="CredentialsProviderId isEqual detects non-matches in credentialTypeId" time="0.0010" classname="detects non-matches in credentialTypeId">
    </testcase>
  </testsuite>
  <testsuite name="CredentialsProviderManager" timestamp="2020-03-31T18:26:42" tests="1" file="/codebuild/output/src956146630/src/dist/src/test/credentials/provider/credentialsProviderManager.test.js" time="0.0000" failures="0">
    <testcase name="CredentialsProviderManager getCredentialProviderNames()" time="0.0000" classname="getCredentialProviderNames()">
    </testcase>
  </testsuite>
  <testsuite name="getAllCredentialsProviders" timestamp="2020-03-31T18:26:42" tests="1" file="/codebuild/output/src956146630/src/dist/src/test/credentials/provider/credentialsProviderManager.test.js" time="0.0000" failures="0">
    <testcase name="CredentialsProviderManager getAllCredentialsProviders returns all providers" time="0.0000" classname="returns all providers">
    </testcase>
  </testsuite>
  <testsuite name="getCredentialsProvider" timestamp="2020-03-31T18:26:42" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/credentials/provider/credentialsProviderManager.test.js" time="0.0010" failures="0">
    <testcase name="CredentialsProviderManager getCredentialsProvider returns a provider" time="0.0010" classname="returns a provider">
    </testcase>
    <testcase name="CredentialsProviderManager getCredentialsProvider returns undefined when there is a factory but the factory does not contain a provider" time="0.0000" classname="returns undefined when there is a factory but the factory does not contain a provider">
    </testcase>
    <testcase name="CredentialsProviderManager getCredentialsProvider returns undefined when there is not a factory for the given credentialsType" time="0.0000" classname="returns undefined when there is not a factory for the given credentialsType">
    </testcase>
  </testsuite>
  <testsuite name="SharedCredentialsProvider" timestamp="2020-03-31T18:26:42" tests="16" file="/codebuild/output/src956146630/src/dist/src/test/credentials/provider/sharedCredentialsProvider.test.js" time="0.0030" failures="0">
    <testcase name="SharedCredentialsProvider constructor fails if profile does not exist" time="0.0000" classname="constructor fails if profile does not exist">
    </testcase>
    <testcase name="SharedCredentialsProvider produces a CredentialsProviderId" time="0.0000" classname="produces a CredentialsProviderId">
    </testcase>
    <testcase name="SharedCredentialsProvider gets profile properties" time="0.0010" classname="gets profile properties">
    </testcase>
    <testcase name="SharedCredentialsProvider profile properties may be undefined" time="0.0000" classname="profile properties may be undefined">
    </testcase>
    <testcase name="SharedCredentialsProvider validation identifies a source_profile reference that does not exist" time="0.0000" classname="validation identifies a source_profile reference that does not exist">
    </testcase>
    <testcase name="SharedCredentialsProvider validation identifies a source_profile reference cycle" time="0.0000" classname="validation identifies a source_profile reference cycle">
    </testcase>
    <testcase name="SharedCredentialsProvider validation identifies when access key id is missing a corresponding secret key" time="0.0000" classname="validation identifies when access key id is missing a corresponding secret key">
    </testcase>
    <testcase name="SharedCredentialsProvider validation identifies when session_token is missing a corresponding access key id" time="0.0000" classname="validation identifies when session_token is missing a corresponding access key id">
    </testcase>
    <testcase name="SharedCredentialsProvider validation identifies when session_token is missing a corresponding secret key" time="0.0000" classname="validation identifies when session_token is missing a corresponding secret key">
    </testcase>
    <testcase name="SharedCredentialsProvider validation identifies when the profile contains no supported properties" time="0.0000" classname="validation identifies when the profile contains no supported properties">
    </testcase>
    <testcase name="SharedCredentialsProvider validates a valid profile with an access key" time="0.0000" classname="validates a valid profile with an access key">
    </testcase>
    <testcase name="SharedCredentialsProvider validates a valid profile with a session token" time="0.0000" classname="validates a valid profile with a session token">
    </testcase>
    <testcase name="SharedCredentialsProvider validates a valid profile with credential_process" time="0.0000" classname="validates a valid profile with credential_process">
    </testcase>
    <testcase name="SharedCredentialsProvider validates a valid profile with role_arn" time="0.0000" classname="validates a valid profile with role_arn">
    </testcase>
    <testcase name="SharedCredentialsProvider validates a valid profile with role_arn and source_profile" time="0.0010" classname="validates a valid profile with role_arn and source_profile">
    </testcase>
    <testcase name="SharedCredentialsProvider getCredentials throws when the profile is not valid" time="0.0010" classname="getCredentials throws when the profile is not valid">
    </testcase>
  </testsuite>
  <testsuite name="SharedCredentialsProviderFactory" timestamp="2020-03-31T18:26:42" tests="4" file="/codebuild/output/src956146630/src/dist/src/test/credentials/provider/sharedCredentialsProviderFactory.test.js" time="0.0030" failures="0">
    <testcase name="SharedCredentialsProviderFactory produces credential providers from shared credentials profiles" time="0.0020" classname="produces credential providers from shared credentials profiles">
    </testcase>
    <testcase name="SharedCredentialsProviderFactory does not load providers for invalid profiles" time="0.0010" classname="does not load providers for invalid profiles">
    </testcase>
    <testcase name="SharedCredentialsProviderFactory refresh does not reload from file if the file has not changed" time="0.0000" classname="refresh does not reload from file if the file has not changed">
    </testcase>
    <testcase name="SharedCredentialsProviderFactory refresh reloads from file if the file has changed" time="0.0000" classname="refresh reloads from file if the file has changed">
    </testcase>
  </testsuite>
  <testsuite name="sharedCredentials" timestamp="2020-03-31T18:26:42" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/credentials/sharedCredentials.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="getCredentialsFilename" timestamp="2020-03-31T18:26:42" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/credentials/sharedCredentials.test.js" time="0.0000" failures="0">
    <testcase name="sharedCredentials getCredentialsFilename uses the default credentials path if AWS_SHARED_CREDENTIALS_FILE is not set" time="0.0000" classname="uses the default credentials path if AWS_SHARED_CREDENTIALS_FILE is not set">
    </testcase>
    <testcase name="sharedCredentials getCredentialsFilename gets AWS_SHARED_CREDENTIALS_FILE if set" time="0.0000" classname="gets AWS_SHARED_CREDENTIALS_FILE if set">
    </testcase>
  </testsuite>
  <testsuite name="getConfigFilename" timestamp="2020-03-31T18:26:42" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/credentials/sharedCredentials.test.js" time="0.0010" failures="0">
    <testcase name="sharedCredentials getConfigFilename uses the default config path if AWS_CONFIG_FILE is not set" time="0.0010" classname="uses the default config path if AWS_CONFIG_FILE is not set">
    </testcase>
    <testcase name="sharedCredentials getConfigFilename gets AWS_CONFIG_FILE if set" time="0.0000" classname="gets AWS_CONFIG_FILE if set">
    </testcase>
  </testsuite>
  <testsuite name="CodeDownloader" timestamp="2020-03-31T18:26:42" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/eventSchemas/commands/downloadSchemaItemCode.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="codeDownloader" timestamp="2020-03-31T18:26:42" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/eventSchemas/commands/downloadSchemaItemCode.test.js" time="0.0010" failures="0">
    <testcase name="CodeDownloader codeDownloader should return an error if the response body is not Buffer" time="0.0010" classname="should return an error if the response body is not Buffer">
    </testcase>
    <testcase name="CodeDownloader codeDownloader should return arrayBuffer for valid Body type" time="0.0000" classname="should return arrayBuffer for valid Body type">
    </testcase>
  </testsuite>
  <testsuite name="CodeGenerator" timestamp="2020-03-31T18:26:42" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/eventSchemas/commands/downloadSchemaItemCode.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="codeGenerator" timestamp="2020-03-31T18:26:42" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/eventSchemas/commands/downloadSchemaItemCode.test.js" time="0.0140" failures="0">
    <testcase name="CodeGenerator codeGenerator should return the current status of code generation" time="0.0010" classname="should return the current status of code generation">
    </testcase>
    <testcase name="CodeGenerator codeGenerator should return valid code generation status if it gets ConflictException" time="0.0130" classname="should return valid code generation status if it gets ConflictException">
    </testcase>
  </testsuite>
  <testsuite name="CodeGeneratorStatusPoller" timestamp="2020-03-31T18:26:42" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/eventSchemas/commands/downloadSchemaItemCode.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="getCurrentStatus" timestamp="2020-03-31T18:26:42" tests="1" file="/codebuild/output/src956146630/src/dist/src/test/eventSchemas/commands/downloadSchemaItemCode.test.js" time="0.0010" failures="0">
    <testcase name="CodeGeneratorStatusPoller getCurrentStatus should return the current status of code generation" time="0.0010" classname="should return the current status of code generation">
    </testcase>
  </testsuite>
  <testsuite name="codeGeneratorStatusPoller" timestamp="2020-03-31T18:26:42" tests="4" file="/codebuild/output/src956146630/src/dist/src/test/eventSchemas/commands/downloadSchemaItemCode.test.js" time="0.8140" failures="0">
    <testcase name="CodeGeneratorStatusPoller codeGeneratorStatusPoller fails if code generation status is invalid without retry" time="0.0010" classname="fails if code generation status is invalid without retry">
    </testcase>
    <testcase name="CodeGeneratorStatusPoller codeGeneratorStatusPoller times out after max attempts if status is still in progress" time="0.8110" classname="times out after max attempts if status is still in progress">
    </testcase>
    <testcase name="CodeGeneratorStatusPoller codeGeneratorStatusPoller succeeds when code is previously generated without retry" time="0.0000" classname="succeeds when code is previously generated without retry">
    </testcase>
    <testcase name="CodeGeneratorStatusPoller codeGeneratorStatusPoller succeeds once the code generation status is complete within maxRetry attempts" time="0.0020" classname="succeeds once the code generation status is complete within maxRetry attempts">
    </testcase>
  </testsuite>
  <testsuite name="SchemaCodeDownload" timestamp="2020-03-31T18:26:43" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/eventSchemas/commands/downloadSchemaItemCode.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="downloadCode" timestamp="2020-03-31T18:26:43" tests="4" file="/codebuild/output/src956146630/src/dist/src/test/eventSchemas/commands/downloadSchemaItemCode.test.js" time="0.0060" failures="0">
    <testcase name="SchemaCodeDownload downloadCode should download pre-generated code and place it into requested directory " time="0.0030" classname="should download pre-generated code and place it into requested directory ">
    </testcase>
    <testcase name="SchemaCodeDownload downloadCode should return error if downloading code fails with anything other than NotFoundException" time="0.0000" classname="should return error if downloading code fails with anything other than NotFoundException">
    </testcase>
    <testcase name="SchemaCodeDownload downloadCode should generate code if download fails with NotFoundException and place it into requested directory" time="0.0020" classname="should generate code if download fails with NotFoundException and place it into requested directory">
    </testcase>
    <testcase name="SchemaCodeDownload downloadCode should return coreCodeFilePath" time="0.0010" classname="should return coreCodeFilePath">
    </testcase>
  </testsuite>
  <testsuite name="CodeExtractor" timestamp="2020-03-31T18:26:43" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/eventSchemas/commands/downloadSchemaItemCode.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="validateNoFileCollisions" timestamp="2020-03-31T18:26:43" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/eventSchemas/commands/downloadSchemaItemCode.test.js" time="0.0020" failures="0">
    <testcase name="CodeExtractor validateNoFileCollisions can validate zipFile directoryFile contents clash " time="0.0010" classname="can validate zipFile directoryFile contents clash ">
    </testcase>
    <testcase name="CodeExtractor validateNoFileCollisions should return true if no collision present" time="0.0010" classname="should return true if no collision present">
    </testcase>
  </testsuite>
  <testsuite name="extractAndPlace" timestamp="2020-03-31T18:26:43" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/eventSchemas/commands/downloadSchemaItemCode.test.js" time="0.0070" failures="0">
    <testcase name="CodeExtractor extractAndPlace should extract files if no collision present" time="0.0020" classname="should extract files if no collision present">
    </testcase>
    <testcase name="CodeExtractor extractAndPlace should not override file content if collision occurs" time="0.0010" classname="should not override file content if collision occurs">
    </testcase>
    <testcase name="CodeExtractor extractAndPlace should return coreCodeFilePath if it exists inside zip content" time="0.0040" classname="should return coreCodeFilePath if it exists inside zip content">
    </testcase>
  </testsuite>
  <testsuite name="getCoreCodeFilePath" timestamp="2020-03-31T18:26:43" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/eventSchemas/commands/downloadSchemaItemCode.test.js" time="0.0010" failures="0">
    <testcase name="CodeExtractor getCoreCodeFilePath shoul return file path if it exists in zipFile" time="0.0010" classname="shoul return file path if it exists in zipFile">
    </testcase>
    <testcase name="CodeExtractor getCoreCodeFilePath should return undefined if file does not exist in zipFile" time="0.0000" classname="should return undefined if file does not exist in zipFile">
    </testcase>
  </testsuite>
  <testsuite name="Search Schemas" timestamp="2020-03-31T18:26:43" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/eventSchemas/commands/searchSchemas.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="getSearchListForSingleRegistry" timestamp="2020-03-31T18:26:43" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/eventSchemas/commands/searchSchemas.test.js" time="0.0030" failures="0">
    <testcase name="Search Schemas getSearchListForSingleRegistry should return summaries" time="0.0020" classname="should return summaries">
    </testcase>
    <testcase name="Search Schemas getSearchListForSingleRegistry should display an error message when search api call fails" time="0.0010" classname="should display an error message when search api call fails">
    </testcase>
  </testsuite>
  <testsuite name="getSearchResults" timestamp="2020-03-31T18:26:43" tests="1" file="/codebuild/output/src956146630/src/dist/src/test/eventSchemas/commands/searchSchemas.test.js" time="0.0020" failures="0">
    <testcase name="Search Schemas getSearchResults should display error message for failed registries and return summaries for successful ones" time="0.0020" classname="should display error message for failed registries and return summaries for successful ones">
    </testcase>
  </testsuite>
  <testsuite name="createMessageReceivedFunc" timestamp="2020-03-31T18:26:43" tests="4" file="/codebuild/output/src956146630/src/dist/src/test/eventSchemas/commands/searchSchemas.test.js" time="0.0050" failures="0">
    <testcase name="Search Schemas createMessageReceivedFunc shows schema content for latest matching schema version by default" time="0.0020" classname="shows schema content for latest matching schema version by default">
    </testcase>
    <testcase name="Search Schemas createMessageReceivedFunc shows schema content for user selected version" time="0.0010" classname="shows schema content for user selected version">
    </testcase>
    <testcase name="Search Schemas createMessageReceivedFunc shows schema list when user makes a search" time="0.0020" classname="shows schema list when user makes a search">
    </testcase>
    <testcase name="Search Schemas createMessageReceivedFunc throws an error for an invalid command message" time="0.0000" classname="throws an error for an invalid command message">
    </testcase>
  </testsuite>
  <testsuite name="getRegistryNameList" timestamp="2020-03-31T18:26:43" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/eventSchemas/commands/searchSchemas.test.js" time="0.0010" failures="0">
    <testcase name="Search Schemas getRegistryNameList should return list with single registry name for registryItemNode" time="0.0000" classname="should return list with single registry name for registryItemNode">
    </testcase>
    <testcase name="Search Schemas getRegistryNameList should return list with multiple registry names for schemasNode" time="0.0000" classname="should return list with multiple registry names for schemasNode">
    </testcase>
    <testcase name="Search Schemas getRegistryNameList should return an empty list and display error message if schemas service not available in the region" time="0.0010" classname="should return an empty list and display error message if schemas service not available in the region">
    </testcase>
  </testsuite>
  <testsuite name="viewSchemaItem" timestamp="2020-03-31T18:26:43" tests="1" file="/codebuild/output/src956146630/src/dist/src/test/eventSchemas/commands/viewSchemaItem.test.js" time="0.0880" failures="0">
    <testcase name="viewSchemaItem prettifies schema content and inserts into the editor " time="0.0880" classname="prettifies schema content and inserts into the editor ">
    </testcase>
  </testsuite>
  <testsuite name="schemaFormatter" timestamp="2020-03-31T18:26:43" tests="1" file="/codebuild/output/src956146630/src/dist/src/test/eventSchemas/commands/viewSchemaItem.test.js" time="0.0000" failures="0">
    <testcase name="viewSchemaItem schemaFormatter can pretty print schema content" time="0.0000" classname="can pretty print schema content">
    </testcase>
  </testsuite>
  <testsuite name="showSchemaContent" timestamp="2020-03-31T18:26:43" tests="1" file="/codebuild/output/src956146630/src/dist/src/test/eventSchemas/commands/viewSchemaItem.test.js" time="0.0030" failures="0">
    <testcase name="viewSchemaItem showSchemaContent inserts pretty schema content into an editor" time="0.0030" classname="inserts pretty schema content into an editor">
    </testcase>
  </testsuite>
  <testsuite name="RegistryItemNode" timestamp="2020-03-31T18:26:43" tests="4" file="/codebuild/output/src956146630/src/dist/src/test/eventSchemas/explorer/registryItemNode.test.js" time="0.0020" failures="0">
    <testcase name="RegistryItemNode initializes name and tooltip" time="0.0000" classname="initializes name and tooltip">
    </testcase>
    <testcase name="RegistryItemNode initializes icon" time="0.0000" classname="initializes icon">
    </testcase>
    <testcase name="RegistryItemNode returns placeholder node if no children are present" time="0.0010" classname="returns placeholder node if no children are present">
    </testcase>
    <testcase name="RegistryItemNode returns schemas that belong to Registry" time="0.0010" classname="returns schemas that belong to Registry">
    </testcase>
  </testsuite>
  <testsuite name="DefaultRegistryNode" timestamp="2020-03-31T18:26:43" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/eventSchemas/explorer/registryItemNode.test.js" time="0.0010" failures="0">
    <testcase name="DefaultRegistryNode Sorts Registries" time="0.0010" classname="Sorts Registries">
    </testcase>
    <testcase name="DefaultRegistryNode returns placeholder node if no children are present" time="0.0000" classname="returns placeholder node if no children are present">
    </testcase>
    <testcase name="DefaultRegistryNode handles error" time="0.0000" classname="handles error">
    </testcase>
  </testsuite>
  <testsuite name="SchemaItemNode" timestamp="2020-03-31T18:26:43" tests="4" file="/codebuild/output/src956146630/src/dist/src/test/eventSchemas/explorer/schemaItemNode.test.js" time="0.0010" failures="0">
    <testcase name="SchemaItemNode initializes name and tooltip" time="0.0000" classname="initializes name and tooltip">
    </testcase>
    <testcase name="SchemaItemNode initializes icon" time="0.0010" classname="initializes icon">
    </testcase>
    <testcase name="SchemaItemNode returns expected context value" time="0.0000" classname="returns expected context value">
    </testcase>
    <testcase name="SchemaItemNode has no children" time="0.0000" classname="has no children">
    </testcase>
  </testsuite>
  <testsuite name="RegistryItemNode" timestamp="2020-03-31T18:26:43" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/eventSchemas/explorer/schemaItemNode.test.js" time="0.0020" failures="0">
    <testcase name="RegistryItemNode Sorts Schema Items By Name" time="0.0010" classname="Sorts Schema Items By Name">
    </testcase>
    <testcase name="RegistryItemNode handles error" time="0.0010" classname="handles error">
    </testcase>
  </testsuite>
  <testsuite name="SchemasNode" timestamp="2020-03-31T18:26:43" tests="4" file="/codebuild/output/src956146630/src/dist/src/test/eventSchemas/explorer/schemasNode.test.js" time="0.0020" failures="0">
    <testcase name="SchemasNode returns placeholder node if no children are present" time="0.0000" classname="returns placeholder node if no children are present">
    </testcase>
    <testcase name="SchemasNode has RegistryItemNode child nodes" time="0.0010" classname="has RegistryItemNode child nodes">
    </testcase>
    <testcase name="SchemasNode sorts child nodes" time="0.0010" classname="sorts child nodes">
    </testcase>
    <testcase name="SchemasNode has an error node for a child if an error happens during loading" time="0.0000" classname="has an error node for a child if an error happens during loading">
    </testcase>
  </testsuite>
  <testsuite name="SchemaCodeGenUtils" timestamp="2020-03-31T18:26:43" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/eventSchemas/model/schemaCodeGenUtils.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="buildSchemaPackageName" timestamp="2020-03-31T18:26:43" tests="9" file="/codebuild/output/src956146630/src/dist/src/test/eventSchemas/model/schemaCodeGenUtils.test.js" time="0.0000" failures="0">
    <testcase name="SchemaCodeGenUtils buildSchemaPackageName builds the &quot;aws event&quot; package name" time="0.0000" classname="builds the &quot;aws event&quot; package name">
    </testcase>
    <testcase name="SchemaCodeGenUtils buildSchemaPackageName builds the &quot;aws event&quot; package name containing package seperator @" time="0.0000" classname="builds the &quot;aws event&quot; package name containing package seperator @">
    </testcase>
    <testcase name="SchemaCodeGenUtils buildSchemaPackageName builds the &quot;partner event&quot; package name containing slash,numbers,dash and package seperator @" time="0.0000" classname="builds the &quot;partner event&quot; package name containing slash,numbers,dash and package seperator @">
    </testcase>
    <testcase name="SchemaCodeGenUtils buildSchemaPackageName builds the &quot;partner event&quot; package name containing other special characters" time="0.0000" classname="builds the &quot;partner event&quot; package name containing other special characters">
    </testcase>
    <testcase name="SchemaCodeGenUtils buildSchemaPackageName builds the &quot;partner event&quot; package name containing package seperator @ only" time="0.0000" classname="builds the &quot;partner event&quot; package name containing package seperator @ only">
    </testcase>
    <testcase name="SchemaCodeGenUtils buildSchemaPackageName builds the &quot;custom event&quot; package name containing no special characters" time="0.0000" classname="builds the &quot;custom event&quot; package name containing no special characters">
    </testcase>
    <testcase name="SchemaCodeGenUtils buildSchemaPackageName builds the &quot;custom event&quot; package name containing special characters" time="0.0000" classname="builds the &quot;custom event&quot; package name containing special characters">
    </testcase>
    <testcase name="SchemaCodeGenUtils buildSchemaPackageName builds the &quot;custom event&quot; package name containing package seperator" time="0.0000" classname="builds the &quot;custom event&quot; package name containing package seperator">
    </testcase>
    <testcase name="SchemaCodeGenUtils buildSchemaPackageName builds the &quot;custom event&quot; package name containing multiple package seperators" time="0.0000" classname="builds the &quot;custom event&quot; package name containing multiple package seperators">
    </testcase>
  </testsuite>
  <testsuite name="IdentifierFormatter" timestamp="2020-03-31T18:26:43" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/eventSchemas/model/schemaCodeGenUtils.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="toValidIdentifier" timestamp="2020-03-31T18:26:43" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/eventSchemas/model/schemaCodeGenUtils.test.js" time="0.0000" failures="0">
    <testcase name="IdentifierFormatter toValidIdentifier replaces invalid identifier characters with underscore" time="0.0000" classname="replaces invalid identifier characters with underscore">
    </testcase>
    <testcase name="IdentifierFormatter toValidIdentifier replaces package seperator @ with dot" time="0.0000" classname="replaces package seperator @ with dot">
    </testcase>
  </testsuite>
  <testsuite name="getLanguageDetails" timestamp="2020-03-31T18:26:43" tests="1" file="/codebuild/output/src956146630/src/dist/src/test/eventSchemas/model/schemaCodeLangs.test.js" time="0.0000" failures="0">
    <testcase name="getLanguageDetails should successfully return details for supported languages" time="0.0000" classname="should successfully return details for supported languages">
    </testcase>
  </testsuite>
  <testsuite name="getApiValueForSchemasDownload" timestamp="2020-03-31T18:26:43" tests="1" file="/codebuild/output/src956146630/src/dist/src/test/eventSchemas/model/schemaCodeLangs.test.js" time="0.0010" failures="0">
    <testcase name="getApiValueForSchemasDownload should return api value for runtimes supported by eventBridge application" time="0.0010" classname="should return api value for runtimes supported by eventBridge application">
    </testcase>
  </testsuite>
  <testsuite name="schemasDataProvider" timestamp="2020-03-31T18:26:43" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/eventSchemas/providers/schemasDataProvider.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="getRegistries" timestamp="2020-03-31T18:26:43" tests="4" file="/codebuild/output/src956146630/src/dist/src/test/eventSchemas/providers/schemasDataProvider.test.js" time="0.0020" failures="0">
    <testcase name="schemasDataProvider getRegistries should return registries for given region" time="0.0010" classname="should return registries for given region">
    </testcase>
    <testcase name="schemasDataProvider getRegistries should retain results when it is queried with same credentials " time="0.0000" classname="should retain results when it is queried with same credentials ">
    </testcase>
    <testcase name="schemasDataProvider getRegistries should retain results when it is queried with different credentials " time="0.0010" classname="should retain results when it is queried with different credentials ">
    </testcase>
    <testcase name="schemasDataProvider getRegistries should return undefined when error occurs" time="0.0000" classname="should return undefined when error occurs">
    </testcase>
  </testsuite>
  <testsuite name="getSchemas" timestamp="2020-03-31T18:26:43" tests="4" file="/codebuild/output/src956146630/src/dist/src/test/eventSchemas/providers/schemasDataProvider.test.js" time="0.0010" failures="0">
    <testcase name="schemasDataProvider getSchemas should return schemas for given region" time="0.0000" classname="should return schemas for given region">
    </testcase>
    <testcase name="schemasDataProvider getSchemas should retain results when it is queried with same credentials " time="0.0010" classname="should retain results when it is queried with same credentials ">
    </testcase>
    <testcase name="schemasDataProvider getSchemas should retain results when it is queried with different credentials " time="0.0000" classname="should retain results when it is queried with different credentials ">
    </testcase>
    <testcase name="schemasDataProvider getSchemas should return undefined when error occurs " time="0.0000" classname="should return undefined when error occurs ">
    </testcase>
  </testsuite>
  <testsuite name="Build template parameters for AwsEventSchema" timestamp="2020-03-31T18:26:43" tests="1" file="/codebuild/output/src956146630/src/dist/src/test/eventSchemas/templates/schemasAppTemplateUtils.test.js" time="0.0010" failures="0">
    <testcase name="Build template parameters for AwsEventSchema should build correct template parameters for aws event schema" time="0.0010" classname="should build correct template parameters for aws event schema">
    </testcase>
  </testsuite>
  <testsuite name="Build template parameters for PartnerSchema" timestamp="2020-03-31T18:26:43" tests="1" file="/codebuild/output/src956146630/src/dist/src/test/eventSchemas/templates/schemasAppTemplateUtils.test.js" time="0.0000" failures="0">
    <testcase name="Build template parameters for PartnerSchema should build correct template parameters for partner schema" time="0.0000" classname="should build correct template parameters for partner schema">
    </testcase>
  </testsuite>
  <testsuite name="Build template parameters for CustomerUploadedSchema" timestamp="2020-03-31T18:26:43" tests="1" file="/codebuild/output/src956146630/src/dist/src/test/eventSchemas/templates/schemasAppTemplateUtils.test.js" time="0.0010" failures="0">
    <testcase name="Build template parameters for CustomerUploadedSchema should build correct template parameters for customer uploaded schema with single type" time="0.0010" classname="should build correct template parameters for customer uploaded schema with single type">
    </testcase>
  </testsuite>
  <testsuite name="Build template parameters for CustomerUploadedSchemaMultipleTypes" timestamp="2020-03-31T18:26:43" tests="1" file="/codebuild/output/src956146630/src/dist/src/test/eventSchemas/templates/schemasAppTemplateUtils.test.js" time="0.0000" failures="0">
    <testcase name="Build template parameters for CustomerUploadedSchemaMultipleTypes should  build correct template parameters for customer uploaded schema with multiple types" time="0.0000" classname="should  build correct template parameters for customer uploaded schema with multiple types">
    </testcase>
  </testsuite>
  <testsuite name="SchemaCodeDownloadWizard" timestamp="2020-03-31T18:26:43" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/eventSchemas/wizards/schemaCodeDownloadWizard.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="version" timestamp="2020-03-31T18:26:43" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/eventSchemas/wizards/schemaCodeDownloadWizard.test.js" time="0.0020" failures="0">
    <testcase name="SchemaCodeDownloadWizard version uses user response as schemaVersion" time="0.0010" classname="uses user response as schemaVersion">
    </testcase>
    <testcase name="SchemaCodeDownloadWizard version exits when cancelled" time="0.0010" classname="exits when cancelled">
    </testcase>
  </testsuite>
  <testsuite name="language" timestamp="2020-03-31T18:26:43" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/eventSchemas/wizards/schemaCodeDownloadWizard.test.js" time="0.0000" failures="0">
    <testcase name="SchemaCodeDownloadWizard language uses user response as language" time="0.0000" classname="uses user response as language">
    </testcase>
    <testcase name="SchemaCodeDownloadWizard language backtracks when cancelled" time="0.0000" classname="backtracks when cancelled">
    </testcase>
  </testsuite>
  <testsuite name="location" timestamp="2020-03-31T18:26:43" tests="4" file="/codebuild/output/src956146630/src/dist/src/test/eventSchemas/wizards/schemaCodeDownloadWizard.test.js" time="0.0000" failures="0">
    <testcase name="SchemaCodeDownloadWizard location uses user response as location" time="0.0000" classname="uses user response as location">
    </testcase>
    <testcase name="SchemaCodeDownloadWizard location backtracks when cancelled" time="0.0000" classname="backtracks when cancelled">
    </testcase>
    <testcase name="SchemaCodeDownloadWizard location contains a &apos;browse&apos; option" time="0.0000" classname="contains a &apos;browse&apos; option">
    </testcase>
    <testcase name="SchemaCodeDownloadWizard location contains an option for each workspace folder" time="0.0000" classname="contains an option for each workspace folder">
    </testcase>
  </testsuite>
  <testsuite name="submitFeedbackListener" timestamp="2020-03-31T18:26:43" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/feedback/commands/submitFeedbackListener.test.js" time="0.0030" failures="0">
    <testcase name="submitFeedbackListener submits feedback, disposes, and shows message on success" time="0.0020" classname="submits feedback, disposes, and shows message on success">
    </testcase>
    <testcase name="submitFeedbackListener submits feedback and posts failure message on failure" time="0.0010" classname="submits feedback and posts failure message on failure">
    </testcase>
  </testsuite>
  <testsuite name="deleteLambda" timestamp="2020-03-31T18:26:43" tests="4" file="/codebuild/output/src956146630/src/dist/src/test/lambda/commands/deleteLambda.test.js" time="0.0000" failures="0">
    <testcase name="deleteLambda should do nothing if function name is not provided" time="0.0000" classname="should do nothing if function name is not provided">
    </testcase>
    <testcase name="deleteLambda should delete lambda when confirmed" time="0.0000" classname="should delete lambda when confirmed">
    </testcase>
    <testcase name="deleteLambda should not delete lambda when cancelled" time="0.0000" classname="should not delete lambda when cancelled">
    </testcase>
    <testcase name="deleteLambda should handles errors gracefully" time="0.0000" classname="should handles errors gracefully">
    </testcase>
  </testsuite>
  <testsuite name="deploySamApplication" timestamp="2020-03-31T18:26:43" tests="7" file="/codebuild/output/src956146630/src/dist/src/test/lambda/commands/deploySamApplication.test.js" time="0.0480" failures="0">
    <testcase name="deploySamApplication deploys with the happy path" time="0.0130" classname="deploys with the happy path">
    </testcase>
    <testcase name="deploySamApplication informs user of error when user is not logged in" time="0.0000" classname="informs user of error when user is not logged in">
    </testcase>
    <testcase name="deploySamApplication informs user of error when sam cli is invalid" time="0.0060" classname="informs user of error when sam cli is invalid">
    </testcase>
    <testcase name="deploySamApplication exits if the wizard is cancelled" time="0.0000" classname="exits if the wizard is cancelled">
    </testcase>
    <testcase name="deploySamApplication informs user of error if invoking sam build fails" time="0.0100" classname="informs user of error if invoking sam build fails">
    </testcase>
    <testcase name="deploySamApplication informs user of error if invoking sam package fails" time="0.0100" classname="informs user of error if invoking sam package fails">
    </testcase>
    <testcase name="deploySamApplication informs user of error if invoking sam deploy fails" time="0.0090" classname="informs user of error if invoking sam deploy fails">
    </testcase>
  </testsuite>
  <testsuite name="SamParameterCompletionItemProvider" timestamp="2020-03-31T18:26:43" tests="10" file="/codebuild/output/src956146630/src/dist/src/test/lambda/config/samParameterCompletionItemProvider.test.js" time="0.0010" failures="0">
    <testcase name="SamParameterCompletionItemProvider recovers gracefully if document is not in a workspace" time="0.0000" classname="recovers gracefully if document is not in a workspace">
    </testcase>
    <testcase name="SamParameterCompletionItemProvider does not provide suggestions if document symbols could not be loaded" time="0.0000" classname="does not provide suggestions if document symbols could not be loaded">
    </testcase>
    <testcase name="SamParameterCompletionItemProvider does not provide suggestions if no matching template is found" time="0.0000" classname="does not provide suggestions if no matching template is found">
    </testcase>
    <testcase name="SamParameterCompletionItemProvider suggests all parameter names if user has not started typing the parameter name" time="0.0010" classname="suggests all parameter names if user has not started typing the parameter name">
    </testcase>
    <testcase name="SamParameterCompletionItemProvider suggests only matching parameter names if user has started typing the parameter name" time="0.0000" classname="suggests only matching parameter names if user has started typing the parameter name">
    </testcase>
    <testcase name="SamParameterCompletionItemProvider recovers gracefully if templates.json is empty or invalid" time="0.0000" classname="recovers gracefully if templates.json is empty or invalid">
    </testcase>
    <testcase name="SamParameterCompletionItemProvider recovers gracefully if cursor is not within the `templates` property" time="0.0000" classname="recovers gracefully if cursor is not within the `templates` property">
    </testcase>
    <testcase name="SamParameterCompletionItemProvider recovers gracefully if `parameterOverrides` is not defined for this template" time="0.0000" classname="recovers gracefully if `parameterOverrides` is not defined for this template">
    </testcase>
    <testcase name="SamParameterCompletionItemProvider recovers gracefully if cursor is not within the `parameterOverrides` property" time="0.0000" classname="recovers gracefully if cursor is not within the `parameterOverrides` property">
    </testcase>
    <testcase name="SamParameterCompletionItemProvider recovers gracefully if cursor is not within a property name within `parameterOverrides`" time="0.0000" classname="recovers gracefully if cursor is not within a property name within `parameterOverrides`">
    </testcase>
  </testsuite>
  <testsuite name="templates" timestamp="2020-03-31T18:26:43" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/lambda/config/templates.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="load" timestamp="2020-03-31T18:26:43" tests="8" file="/codebuild/output/src956146630/src/dist/src/test/lambda/config/templates.test.js" time="0.0030" failures="0">
    <testcase name="templates load loads a valid file without parameter overrides" time="0.0010" classname="loads a valid file without parameter overrides">
    </testcase>
    <testcase name="templates load loads a valid file with parameter overrides" time="0.0000" classname="loads a valid file with parameter overrides">
    </testcase>
    <testcase name="templates load returns minimal config on missing file" time="0.0000" classname="returns minimal config on missing file">
    </testcase>
    <testcase name="templates load throws on error loading file" time="0.0000" classname="throws on error loading file">
    </testcase>
    <testcase name="templates load gracefully handles invalid JSON" time="0.0010" classname="gracefully handles invalid JSON">
    </testcase>
    <testcase name="templates load supports JSON comments" time="0.0010" classname="supports JSON comments">
    </testcase>
    <testcase name="templates load reads the correct path" time="0.0000" classname="reads the correct path">
    </testcase>
    <testcase name="templates load saves dirty documents before loading" time="0.0000" classname="saves dirty documents before loading">
    </testcase>
  </testsuite>
  <testsuite name="getTemplatesConfigPath" timestamp="2020-03-31T18:26:43" tests="1" file="/codebuild/output/src956146630/src/dist/src/test/lambda/config/templates.test.js" time="0.0000" failures="0">
    <testcase name="getTemplatesConfigPath returns expected path" time="0.0000" classname="returns expected path">
    </testcase>
  </testsuite>
  <testsuite name="TemplatesConfigPopulator" timestamp="2020-03-31T18:26:43" tests="1" file="/codebuild/output/src956146630/src/dist/src/test/lambda/config/templates.test.js" time="0.0010" failures="0">
    <testcase name="TemplatesConfigPopulator handles ModificationOptions" time="0.0010" classname="handles ModificationOptions">
    </testcase>
  </testsuite>
  <testsuite name="ensureTemplateSectionExists" timestamp="2020-03-31T18:26:43" tests="4" file="/codebuild/output/src956146630/src/dist/src/test/lambda/config/templates.test.js" time="0.0010" failures="0">
    <testcase name="TemplatesConfigPopulator ensureTemplateSectionExists handles clean data" time="0.0010" classname="handles clean data">
    </testcase>
    <testcase name="TemplatesConfigPopulator ensureTemplateSectionExists handles missing templates section" time="0.0000" classname="handles missing templates section">
    </testcase>
    <testcase name="TemplatesConfigPopulator ensureTemplateSectionExists handles missing template section" time="0.0000" classname="handles missing template section">
    </testcase>
    <testcase name="TemplatesConfigPopulator ensureTemplateSectionExists errs with invalid templates type" time="0.0000" classname="errs with invalid templates type">
    </testcase>
  </testsuite>
  <testsuite name="ensureTemplateHandlerSectionExists" timestamp="2020-03-31T18:26:43" tests="6" file="/codebuild/output/src956146630/src/dist/src/test/lambda/config/templates.test.js" time="0.0060" failures="0">
    <testcase name="TemplatesConfigPopulator ensureTemplateHandlerSectionExists handles clean data" time="0.0010" classname="handles clean data">
    </testcase>
    <testcase name="TemplatesConfigPopulator ensureTemplateHandlerSectionExists errs with invalid template type" time="0.0010" classname="errs with invalid template type">
    </testcase>
    <testcase name="TemplatesConfigPopulator ensureTemplateHandlerSectionExists errs with invalid handlers type" time="0.0010" classname="errs with invalid handlers type">
    </testcase>
    <testcase name="TemplatesConfigPopulator ensureTemplateHandlerSectionExists errs with invalid handler type" time="0.0010" classname="errs with invalid handler type">
    </testcase>
    <testcase name="TemplatesConfigPopulator ensureTemplateHandlerSectionExists handles missing handlers section" time="0.0010" classname="handles missing handlers section">
    </testcase>
    <testcase name="TemplatesConfigPopulator ensureTemplateHandlerSectionExists handles missing handler section" time="0.0010" classname="handles missing handler section">
    </testcase>
  </testsuite>
  <testsuite name="ensureTemplateHandlerPropertiesExist" timestamp="2020-03-31T18:26:43" tests="6" file="/codebuild/output/src956146630/src/dist/src/test/lambda/config/templates.test.js" time="0.0010" failures="0">
    <testcase name="TemplatesConfigPopulator ensureTemplateHandlerPropertiesExist handles clean data" time="0.0000" classname="handles clean data">
    </testcase>
    <testcase name="TemplatesConfigPopulator ensureTemplateHandlerPropertiesExist errs with invalid handler type" time="0.0000" classname="errs with invalid handler type">
    </testcase>
    <testcase name="TemplatesConfigPopulator ensureTemplateHandlerPropertiesExist errs with invalid event type" time="0.0010" classname="errs with invalid event type">
    </testcase>
    <testcase name="TemplatesConfigPopulator ensureTemplateHandlerPropertiesExist handles missing everything" time="0.0000" classname="handles missing everything">
    </testcase>
    <testcase name="TemplatesConfigPopulator ensureTemplateHandlerPropertiesExist handles missing event" time="0.0000" classname="handles missing event">
    </testcase>
    <testcase name="TemplatesConfigPopulator ensureTemplateHandlerPropertiesExist handles missing envvars" time="0.0000" classname="handles missing envvars">
    </testcase>
  </testsuite>
  <testsuite name="ensureTemplateParameterOverrideExists" timestamp="2020-03-31T18:26:43" tests="5" file="/codebuild/output/src956146630/src/dist/src/test/lambda/config/templates.test.js" time="0.0020" failures="0">
    <testcase name="TemplatesConfigPopulator ensureTemplateParameterOverrideExists creates parameterOverrides section if it does not already exist" time="0.0010" classname="creates parameterOverrides section if it does not already exist">
    </testcase>
    <testcase name="TemplatesConfigPopulator ensureTemplateParameterOverrideExists adds new override if it does not already exist" time="0.0010" classname="adds new override if it does not already exist">
    </testcase>
    <testcase name="TemplatesConfigPopulator ensureTemplateParameterOverrideExists does not overwrite existing overrides" time="0.0000" classname="does not overwrite existing overrides">
    </testcase>
    <testcase name="TemplatesConfigPopulator ensureTemplateParameterOverrideExists throws if parameterOverrides exists, but is not an object or null" time="0.0000" classname="throws if parameterOverrides exists, but is not an object or null">
    </testcase>
    <testcase name="TemplatesConfigPopulator ensureTemplateParameterOverrideExists throws if override value exists, but is not a string or null" time="0.0000" classname="throws if override value exists, but is not a string or null">
    </testcase>
  </testsuite>
  <testsuite name="CloudFormationStackNode" timestamp="2020-03-31T18:26:43" tests="8" file="/codebuild/output/src956146630/src/dist/src/test/lambda/explorer/cloudFormationNodes.test.js" time="0.0040" failures="0">
    <testcase name="CloudFormationStackNode initializes name and tooltip" time="0.0000" classname="initializes name and tooltip">
    </testcase>
    <testcase name="CloudFormationStackNode initializes icon" time="0.0000" classname="initializes icon">
    </testcase>
    <testcase name="CloudFormationStackNode returns placeholder node if no children are present" time="0.0010" classname="returns placeholder node if no children are present">
    </testcase>
    <testcase name="CloudFormationStackNode has LambdaFunctionNode child nodes" time="0.0010" classname="has LambdaFunctionNode child nodes">
    </testcase>
    <testcase name="CloudFormationStackNode has child nodes with CloudFormation contextValue" time="0.0000" classname="has child nodes with CloudFormation contextValue">
    </testcase>
    <testcase name="CloudFormationStackNode only includes functions which are in a CloudFormation stack" time="0.0010" classname="only includes functions which are in a CloudFormation stack">
    </testcase>
    <testcase name="CloudFormationStackNode sorts child nodes" time="0.0010" classname="sorts child nodes">
    </testcase>
    <testcase name="CloudFormationStackNode has an error node for a child if an error happens during loading" time="0.0000" classname="has an error node for a child if an error happens during loading">
    </testcase>
  </testsuite>
  <testsuite name="CloudFormationNode" timestamp="2020-03-31T18:26:43" tests="4" file="/codebuild/output/src956146630/src/dist/src/test/lambda/explorer/cloudFormationNodes.test.js" time="0.0030" failures="0">
    <testcase name="CloudFormationNode has CloudFormationStackNode child nodes" time="0.0010" classname="has CloudFormationStackNode child nodes">
    </testcase>
    <testcase name="CloudFormationNode has sorted child nodes" time="0.0010" classname="has sorted child nodes">
    </testcase>
    <testcase name="CloudFormationNode returns placeholder node if no children are present" time="0.0010" classname="returns placeholder node if no children are present">
    </testcase>
    <testcase name="CloudFormationNode has an error node for a child if an error happens during loading" time="0.0000" classname="has an error node for a child if an error happens during loading">
    </testcase>
  </testsuite>
  <testsuite name="LambdaFunctionNode" timestamp="2020-03-31T18:26:43" tests="8" file="/codebuild/output/src956146630/src/dist/src/test/lambda/explorer/lambdaFunctionNode.test.js" time="0.0010" failures="0">
    <testcase name="LambdaFunctionNode instantiates without issue" time="0.0000" classname="instantiates without issue">
    </testcase>
    <testcase name="LambdaFunctionNode initializes the parent node" time="0.0000" classname="initializes the parent node">
    </testcase>
    <testcase name="LambdaFunctionNode initializes the region code" time="0.0000" classname="initializes the region code">
    </testcase>
    <testcase name="LambdaFunctionNode initializes the label" time="0.0010" classname="initializes the label">
    </testcase>
    <testcase name="LambdaFunctionNode initializes the functionName" time="0.0000" classname="initializes the functionName">
    </testcase>
    <testcase name="LambdaFunctionNode initializes the tooltip" time="0.0000" classname="initializes the tooltip">
    </testcase>
    <testcase name="LambdaFunctionNode initializes the icon" time="0.0000" classname="initializes the icon">
    </testcase>
    <testcase name="LambdaFunctionNode has no children" time="0.0000" classname="has no children">
    </testcase>
  </testsuite>
  <testsuite name="LambdaNode" timestamp="2020-03-31T18:26:43" tests="5" file="/codebuild/output/src956146630/src/dist/src/test/lambda/explorer/lambdaNodes.test.js" time="0.0030" failures="0">
    <testcase name="LambdaNode returns placeholder node if no children are present" time="0.0010" classname="returns placeholder node if no children are present">
    </testcase>
    <testcase name="LambdaNode has LambdaFunctionNode child nodes" time="0.0010" classname="has LambdaFunctionNode child nodes">
    </testcase>
    <testcase name="LambdaNode has child nodes with Lambda Function contextValue" time="0.0000" classname="has child nodes with Lambda Function contextValue">
    </testcase>
    <testcase name="LambdaNode sorts child nodes" time="0.0000" classname="sorts child nodes">
    </testcase>
    <testcase name="LambdaNode has an error node for a child if an error happens during loading" time="0.0010" classname="has an error node for a child if an error happens during loading">
    </testcase>
  </testsuite>
  <testsuite name="makeCoreCLRDebugConfiguration" timestamp="2020-03-31T18:26:43" tests="1" file="/codebuild/output/src956146630/src/dist/src/test/lambda/local/debugConfiguration.test.js" time="0.0010" failures="0">
    <testcase name="makeCoreCLRDebugConfiguration uses the specified codeUri" time="0.0010" classname="uses the specified codeUri">
    </testcase>
  </testsuite>
  <testsuite name="windows" timestamp="2020-03-31T18:26:43" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/lambda/local/debugConfiguration.test.js" time="0.0000" failures="0">
    <testcase name="makeCoreCLRDebugConfiguration windows uses powershell" time="0.0000" classname="uses powershell">
    </testcase>
    <testcase name="makeCoreCLRDebugConfiguration windows uses the specified port" time="0.0000" classname="uses the specified port">
    </testcase>
  </testsuite>
  <testsuite name="*nix" timestamp="2020-03-31T18:26:43" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/lambda/local/debugConfiguration.test.js" time="0.0000" failures="0">
    <testcase name="makeCoreCLRDebugConfiguration *nix uses the default shell" time="0.0000" classname="uses the default shell">
    </testcase>
    <testcase name="makeCoreCLRDebugConfiguration *nix uses the specified port" time="0.0000" classname="uses the specified port">
    </testcase>
  </testsuite>
  <testsuite name="detectLocalLambdas" timestamp="2020-03-31T18:26:43" tests="6" file="/codebuild/output/src956146630/src/dist/src/test/lambda/local/detectLocalLambdas.test.js" time="0.0120" failures="0">
    <testcase name="detectLocalLambdas detects no lambdas when workspaceFolders is empty" time="0.0010" classname="detects no lambdas when workspaceFolders is empty">
    </testcase>
    <testcase name="detectLocalLambdas detects no lambdas when template.y[a]ml does not exist" time="0.0010" classname="detects no lambdas when template.y[a]ml does not exist">
    </testcase>
    <testcase name="detectLocalLambdas detects no lambdas when template.y[a]ml is empty" time="0.0040" classname="detects no lambdas when template.y[a]ml is empty">
    </testcase>
    <testcase name="detectLocalLambdas detects lambdas when template.yml exists" time="0.0020" classname="detects lambdas when template.yml exists">
    </testcase>
    <testcase name="detectLocalLambdas detects lambdas when template.yaml exists" time="0.0020" classname="detects lambdas when template.yaml exists">
    </testcase>
    <testcase name="detectLocalLambdas detects lambdas in multi-folder workspace" time="0.0020" classname="detects lambdas in multi-folder workspace">
    </testcase>
  </testsuite>
  <testsuite name="detectLocalTemplates" timestamp="2020-03-31T18:26:43" tests="6" file="/codebuild/output/src956146630/src/dist/src/test/lambda/local/detectLocalTemplates.test.js" time="0.0060" failures="0">
    <testcase name="detectLocalTemplates Detects no templates when there are no workspace folders" time="0.0000" classname="Detects no templates when there are no workspace folders">
    </testcase>
    <testcase name="detectLocalTemplates Detects templates at the root of each workspace folder" time="0.0010" classname="Detects templates at the root of each workspace folder">
    </testcase>
    <testcase name="detectLocalTemplates Detects templates in child folders of each workspace folder" time="0.0010" classname="Detects templates in child folders of each workspace folder">
    </testcase>
    <testcase name="detectLocalTemplates does not detect templates deeper than the specified folder depth" time="0.0020" classname="does not detect templates deeper than the specified folder depth">
    </testcase>
    <testcase name="detectLocalTemplates Detects multiple templates when multiple folders contain templates" time="0.0010" classname="Detects multiple templates when multiple folders contain templates">
    </testcase>
    <testcase name="detectLocalTemplates Detects multiple templates when both template.yml and template.yaml exist in a folder" time="0.0010" classname="Detects multiple templates when both template.yml and template.yaml exist in a folder">
    </testcase>
  </testsuite>
  <testsuite name="compareSamLambdaRuntime" timestamp="2020-03-31T18:26:43" tests="6" file="/codebuild/output/src956146630/src/dist/src/test/lambda/models/samLambdaRuntime.test.js" time="0.0000" failures="0">
    <testcase name="compareSamLambdaRuntime nodejs8.10 &lt; nodejs10.x" time="0.0000" classname="nodejs8.10 &lt; nodejs10.x">
    </testcase>
    <testcase name="compareSamLambdaRuntime nodejs10.x &gt; nodejs8.10" time="0.0000" classname="nodejs10.x &gt; nodejs8.10">
    </testcase>
    <testcase name="compareSamLambdaRuntime nodejs8.10 &lt; nodejs12.x" time="0.0000" classname="nodejs8.10 &lt; nodejs12.x">
    </testcase>
    <testcase name="compareSamLambdaRuntime nodejs12.x &gt; nodejs8.10" time="0.0000" classname="nodejs12.x &gt; nodejs8.10">
    </testcase>
    <testcase name="compareSamLambdaRuntime nodejs10.x &lt; nodejs12.x" time="0.0000" classname="nodejs10.x &lt; nodejs12.x">
    </testcase>
    <testcase name="compareSamLambdaRuntime nodejs12.x &gt; nodejs10.x" time="0.0000" classname="nodejs12.x &gt; nodejs10.x">
    </testcase>
  </testsuite>
  <testsuite name="getDependencyManager" timestamp="2020-03-31T18:26:43" tests="1" file="/codebuild/output/src956146630/src/dist/src/test/lambda/models/samLambdaRuntime.test.js" time="0.0000" failures="0">
    <testcase name="getDependencyManager all runtimes are handled" time="0.0000" classname="all runtimes are handled">
    </testcase>
  </testsuite>
  <testsuite name="getFamily" timestamp="2020-03-31T18:26:43" tests="1" file="/codebuild/output/src956146630/src/dist/src/test/lambda/models/samLambdaRuntime.test.js" time="0.0000" failures="0">
    <testcase name="getFamily all runtimes are handled" time="0.0000" classname="all runtimes are handled">
    </testcase>
  </testsuite>
  <testsuite name="getSamTemplateWizardOption" timestamp="2020-03-31T18:26:43" tests="1" file="/codebuild/output/src956146630/src/dist/src/test/lambda/models/samTemplates.test.js" time="0.0000" failures="0">
    <testcase name="getSamTemplateWizardOption should successfully return available templates for specific runtime" time="0.0000" classname="should successfully return available templates for specific runtime">
    </testcase>
  </testsuite>
  <testsuite name="getSamCliTemplateParameter" timestamp="2020-03-31T18:26:43" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/lambda/models/samTemplates.test.js" time="0.0000" failures="0">
    <testcase name="getSamCliTemplateParameter should successfully return template values used by sam cli" time="0.0000" classname="should successfully return template values used by sam cli">
    </testcase>
    <testcase name="getSamCliTemplateParameter should return error if the template option is not valid" time="0.0000" classname="should return error if the template option is not valid">
    </testcase>
  </testsuite>
  <testsuite name="getTemplateDescription" timestamp="2020-03-31T18:26:43" tests="1" file="/codebuild/output/src956146630/src/dist/src/test/lambda/models/samTemplates.test.js" time="0.0000" failures="0">
    <testcase name="getTemplateDescription all templates are handled" time="0.0000" classname="all templates are handled">
    </testcase>
  </testsuite>
  <testsuite name="parameterUtils" timestamp="2020-03-31T18:26:43" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/lambda/utilities/parameterUtils.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="getParameters" timestamp="2020-03-31T18:26:43" tests="5" file="/codebuild/output/src956146630/src/dist/src/test/lambda/utilities/parameterUtils.test.js" time="0.0020" failures="0">
    <testcase name="parameterUtils getParameters returns an empty map if template has no parameters section" time="0.0000" classname="returns an empty map if template has no parameters section">
    </testcase>
    <testcase name="parameterUtils getParameters returns an empty map if parameters section is empty" time="0.0000" classname="returns an empty map if parameters section is empty">
    </testcase>
    <testcase name="parameterUtils getParameters sets `required` to true if default is undefined" time="0.0010" classname="sets `required` to true if default is undefined">
    </testcase>
    <testcase name="parameterUtils getParameters sets `required` to false if default is defined, but falsy" time="0.0010" classname="sets `required` to false if default is defined, but falsy">
    </testcase>
    <testcase name="parameterUtils getParameters sets `required` to false if default is defined and truthy" time="0.0000" classname="sets `required` to false if default is defined and truthy">
    </testcase>
  </testsuite>
  <testsuite name="getParameterNames" timestamp="2020-03-31T18:26:43" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/lambda/utilities/parameterUtils.test.js" time="0.0020" failures="0">
    <testcase name="parameterUtils getParameterNames returns an empty array if no parameters were found" time="0.0010" classname="returns an empty array if no parameters were found">
    </testcase>
    <testcase name="parameterUtils getParameterNames returns the names of each parameter" time="0.0010" classname="returns the names of each parameter">
    </testcase>
  </testsuite>
  <testsuite name="getOverriddenParameters" timestamp="2020-03-31T18:26:43" tests="5" file="/codebuild/output/src956146630/src/dist/src/test/lambda/utilities/parameterUtils.test.js" time="0.0020" failures="0">
    <testcase name="parameterUtils getOverriddenParameters throws if template is not in the workspace" time="0.0000" classname="throws if template is not in the workspace">
    </testcase>
    <testcase name="parameterUtils getOverriddenParameters returns undefined if no config is found for this template" time="0.0000" classname="returns undefined if no config is found for this template">
    </testcase>
    <testcase name="parameterUtils getOverriddenParameters returns undefined if config for this template does not contain `parameterOverrides`" time="0.0000" classname="returns undefined if config for this template does not contain `parameterOverrides`">
    </testcase>
    <testcase name="parameterUtils getOverriddenParameters returns an empty map if this template contains an empty `parameterOverrides`" time="0.0010" classname="returns an empty map if this template contains an empty `parameterOverrides`">
    </testcase>
    <testcase name="parameterUtils getOverriddenParameters returns a map of parameter names to their overridden values" time="0.0010" classname="returns a map of parameter names to their overridden values">
    </testcase>
  </testsuite>
  <testsuite name="SamDeployWizard" timestamp="2020-03-31T18:26:43" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/lambda/wizards/samDeployWizard.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="TEMPLATE" timestamp="2020-03-31T18:26:43" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/lambda/wizards/samDeployWizard.test.js" time="0.0010" failures="0">
    <testcase name="SamDeployWizard TEMPLATE fails gracefully when no templates are found" time="0.0000" classname="fails gracefully when no templates are found">
    </testcase>
    <testcase name="SamDeployWizard TEMPLATE exits wizard when cancelled" time="0.0000" classname="exits wizard when cancelled">
    </testcase>
    <testcase name="SamDeployWizard TEMPLATE uses user response as template" time="0.0010" classname="uses user response as template">
    </testcase>
  </testsuite>
  <testsuite name="PARAMETER_OVERRIDES" timestamp="2020-03-31T18:26:43" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/lambda/wizards/samDeployWizard.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="SAM template has no parameters" timestamp="2020-03-31T18:26:43" tests="1" file="/codebuild/output/src956146630/src/dist/src/test/lambda/wizards/samDeployWizard.test.js" time="0.0000" failures="0">
    <testcase name="SamDeployWizard PARAMETER_OVERRIDES SAM template has no parameters skips configuring overrides and continues wizard" time="0.0000" classname="skips configuring overrides and continues wizard">
    </testcase>
  </testsuite>
  <testsuite name="SAM template has only optional parameters" timestamp="2020-03-31T18:26:43" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/lambda/wizards/samDeployWizard.test.js" time="0.0010" failures="0">
    <testcase name="SamDeployWizard PARAMETER_OVERRIDES SAM template has only optional parameters skips configuring overrides and continues wizard if parameterOverrides is defined" time="0.0010" classname="skips configuring overrides and continues wizard if parameterOverrides is defined">
    </testcase>
    <testcase name="SamDeployWizard PARAMETER_OVERRIDES SAM template has only optional parameters skips configuring overrides and continues wizard if parameterOverrides is undefined and user declines prompt" time="0.0000" classname="skips configuring overrides and continues wizard if parameterOverrides is undefined and user declines prompt">
    </testcase>
    <testcase name="SamDeployWizard PARAMETER_OVERRIDES SAM template has only optional parameters configures overrides and cancels wizard if parameterOverrides is undefined and user accepts prompt" time="0.0000" classname="configures overrides and cancels wizard if parameterOverrides is undefined and user accepts prompt">
    </testcase>
  </testsuite>
  <testsuite name="SAM template has required parameters" timestamp="2020-03-31T18:26:43" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/lambda/wizards/samDeployWizard.test.js" time="0.0000" failures="0">
    <testcase name="SamDeployWizard PARAMETER_OVERRIDES SAM template has required parameters configures overrides and cancels wizard if overrides are not defined" time="0.0000" classname="configures overrides and cancels wizard if overrides are not defined">
    </testcase>
    <testcase name="SamDeployWizard PARAMETER_OVERRIDES SAM template has required parameters configures overrides and cancels wizard if there are missing overrides" time="0.0000" classname="configures overrides and cancels wizard if there are missing overrides">
    </testcase>
    <testcase name="SamDeployWizard PARAMETER_OVERRIDES SAM template has required parameters stores existing overrides and continues without configuring overrides if there are no missing overrides" time="0.0000" classname="stores existing overrides and continues without configuring overrides if there are no missing overrides">
    </testcase>
  </testsuite>
  <testsuite name="REGION" timestamp="2020-03-31T18:26:43" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/lambda/wizards/samDeployWizard.test.js" time="0.0020" failures="0">
    <testcase name="SamDeployWizard REGION uses user response for region" time="0.0010" classname="uses user response for region">
    </testcase>
    <testcase name="SamDeployWizard REGION goes back when cancelled" time="0.0010" classname="goes back when cancelled">
    </testcase>
  </testsuite>
  <testsuite name="S3_BUCKET" timestamp="2020-03-31T18:26:43" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/lambda/wizards/samDeployWizard.test.js" time="0.0000" failures="0">
    <testcase name="SamDeployWizard S3_BUCKET goes back when cancelled" time="0.0000" classname="goes back when cancelled">
    </testcase>
    <testcase name="SamDeployWizard S3_BUCKET uses user response as s3Bucket" time="0.0000" classname="uses user response as s3Bucket">
    </testcase>
  </testsuite>
  <testsuite name="STACK_NAME" timestamp="2020-03-31T18:26:43" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/lambda/wizards/samDeployWizard.test.js" time="0.0000" failures="0">
    <testcase name="SamDeployWizard STACK_NAME goes back when cancelled" time="0.0000" classname="goes back when cancelled">
    </testcase>
    <testcase name="SamDeployWizard STACK_NAME uses user response as stackName" time="0.0000" classname="uses user response as stackName">
    </testcase>
  </testsuite>
  <testsuite name="validation" timestamp="2020-03-31T18:26:43" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/lambda/wizards/samDeployWizard.test.js" time="0.0020" failures="0">
    <testcase name="SamDeployWizard STACK_NAME validation validates that stackName does not contain invalid charcters" time="0.0010" classname="validates that stackName does not contain invalid charcters">
    </testcase>
    <testcase name="SamDeployWizard STACK_NAME validation validates that stackName begins with an alphabetic character" time="0.0010" classname="validates that stackName begins with an alphabetic character">
    </testcase>
    <testcase name="SamDeployWizard STACK_NAME validation validates that stackName is not longer than 128 characters" time="0.0000" classname="validates that stackName is not longer than 128 characters">
    </testcase>
  </testsuite>
  <testsuite name="validateS3Bucket" timestamp="2020-03-31T18:26:43" tests="8" file="/codebuild/output/src956146630/src/dist/src/test/lambda/wizards/samDeployWizard.test.js" time="0.0000" failures="0">
    <testcase name="validateS3Bucket validates a valid bucket name" time="0.0000" classname="validates a valid bucket name">
    </testcase>
    <testcase name="validateS3Bucket validates that bucket name has a valid length" time="0.0000" classname="validates that bucket name has a valid length">
    </testcase>
    <testcase name="validateS3Bucket validates that bucket name does not contain invalid characters" time="0.0000" classname="validates that bucket name does not contain invalid characters">
    </testcase>
    <testcase name="validateS3Bucket validates that bucket name is not formatted as an ip address" time="0.0000" classname="validates that bucket name is not formatted as an ip address">
    </testcase>
    <testcase name="validateS3Bucket validates that bucket name does not end with a dash" time="0.0000" classname="validates that bucket name does not end with a dash">
    </testcase>
    <testcase name="validateS3Bucket validates that bucket name does not contain consecutive periods" time="0.0000" classname="validates that bucket name does not contain consecutive periods">
    </testcase>
    <testcase name="validateS3Bucket validates that bucket name does not contain a period adjacent to a dash" time="0.0000" classname="validates that bucket name does not contain a period adjacent to a dash">
    </testcase>
    <testcase name="validateS3Bucket validates that each label in bucket name begins with a number or a lower-case character" time="0.0000" classname="validates that each label in bucket name begins with a number or a lower-case character">
    </testcase>
  </testsuite>
  <testsuite name="CreateNewSamAppWizard" timestamp="2020-03-31T18:26:43" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/lambda/wizards/samInitWizard.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="runtime" timestamp="2020-03-31T18:26:43" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/lambda/wizards/samInitWizard.test.js" time="0.0020" failures="0">
    <testcase name="CreateNewSamAppWizard runtime uses user response as runtime" time="0.0010" classname="uses user response as runtime">
    </testcase>
    <testcase name="CreateNewSamAppWizard runtime exits when cancelled" time="0.0010" classname="exits when cancelled">
    </testcase>
  </testsuite>
  <testsuite name="template" timestamp="2020-03-31T18:26:43" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/lambda/wizards/samInitWizard.test.js" time="0.0020" failures="0">
    <testcase name="CreateNewSamAppWizard template uses user response as template" time="0.0010" classname="uses user response as template">
    </testcase>
    <testcase name="CreateNewSamAppWizard template backtracks when cancelled" time="0.0010" classname="backtracks when cancelled">
    </testcase>
  </testsuite>
  <testsuite name="location" timestamp="2020-03-31T18:26:43" tests="4" file="/codebuild/output/src956146630/src/dist/src/test/lambda/wizards/samInitWizard.test.js" time="0.0020" failures="0">
    <testcase name="CreateNewSamAppWizard location uses user response as location" time="0.0010" classname="uses user response as location">
    </testcase>
    <testcase name="CreateNewSamAppWizard location backtracks when cancelled" time="0.0010" classname="backtracks when cancelled">
    </testcase>
    <testcase name="CreateNewSamAppWizard location contains a &apos;browse&apos; option" time="0.0000" classname="contains a &apos;browse&apos; option">
    </testcase>
    <testcase name="CreateNewSamAppWizard location contains an option for each workspace folder" time="0.0000" classname="contains an option for each workspace folder">
    </testcase>
  </testsuite>
  <testsuite name="name" timestamp="2020-03-31T18:26:43" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/lambda/wizards/samInitWizard.test.js" time="0.0000" failures="0">
    <testcase name="CreateNewSamAppWizard name uses user response as name" time="0.0000" classname="uses user response as name">
    </testcase>
    <testcase name="CreateNewSamAppWizard name backtracks when cancelled" time="0.0000" classname="backtracks when cancelled">
    </testcase>
  </testsuite>
  <testsuite name="ActivationLaunchPath" timestamp="2020-03-31T18:26:43" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/activationLaunchPath.test.js" time="0.0010" failures="0">
    <testcase name="ActivationLaunchPath setLaunchPath" time="0.0000" classname="setLaunchPath">
    </testcase>
    <testcase name="ActivationLaunchPath getLaunchPath" time="0.0000" classname="getLaunchPath">
    </testcase>
    <testcase name="ActivationLaunchPath clearLaunchPath" time="0.0010" classname="clearLaunchPath">
    </testcase>
  </testsuite>
  <testsuite name="defaultEcsClient" timestamp="2020-03-31T18:26:43" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/shared/clients/defaultEcsClient.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="listClusters" timestamp="2020-03-31T18:26:43" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/clients/defaultEcsClient.test.js" time="0.0030" failures="0">
    <testcase name="defaultEcsClient listClusters lists clusters from a single page" time="0.0010" classname="lists clusters from a single page">
    </testcase>
    <testcase name="defaultEcsClient listClusters lists clusters from multiple pages" time="0.0010" classname="lists clusters from multiple pages">
    </testcase>
    <testcase name="defaultEcsClient listClusters handles errors" time="0.0010" classname="handles errors">
    </testcase>
  </testsuite>
  <testsuite name="listServices" timestamp="2020-03-31T18:26:43" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/clients/defaultEcsClient.test.js" time="0.0000" failures="0">
    <testcase name="defaultEcsClient listServices lists services from a single page" time="0.0000" classname="lists services from a single page">
    </testcase>
    <testcase name="defaultEcsClient listServices lists services from multiple pages" time="0.0000" classname="lists services from multiple pages">
    </testcase>
    <testcase name="defaultEcsClient listServices handles errors" time="0.0000" classname="handles errors">
    </testcase>
  </testsuite>
  <testsuite name="ListTaskDefinitionFamilies" timestamp="2020-03-31T18:26:43" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/clients/defaultEcsClient.test.js" time="0.0000" failures="0">
    <testcase name="defaultEcsClient ListTaskDefinitionFamilies lists task definition families from a single page" time="0.0000" classname="lists task definition families from a single page">
    </testcase>
    <testcase name="defaultEcsClient ListTaskDefinitionFamilies lists task definition families from multiple pages" time="0.0000" classname="lists task definition families from multiple pages">
    </testcase>
    <testcase name="defaultEcsClient ListTaskDefinitionFamilies handles errors" time="0.0000" classname="handles errors">
    </testcase>
  </testsuite>
  <testsuite name="DefaultDockerClient" timestamp="2020-03-31T18:26:43" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/shared/clients/dockerClient.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="invoke" timestamp="2020-03-31T18:26:43" tests="5" file="/codebuild/output/src956146630/src/dist/src/test/shared/clients/dockerClient.test.js" time="0.0020" failures="0">
    <testcase name="DefaultDockerClient invoke uses the specified command" time="0.0000" classname="uses the specified command">
    </testcase>
    <testcase name="DefaultDockerClient invoke uses the specified image" time="0.0000" classname="uses the specified image">
    </testcase>
    <testcase name="DefaultDockerClient invoke includes the --rm flag if specified" time="0.0000" classname="includes the --rm flag if specified">
    </testcase>
    <testcase name="DefaultDockerClient invoke includes the --mount flag if specified" time="0.0010" classname="includes the --mount flag if specified">
    </testcase>
    <testcase name="DefaultDockerClient invoke includes the --entryPoint flag if specified" time="0.0010" classname="includes the --entryPoint flag if specified">
    </testcase>
  </testsuite>
  <testsuite name="CloudFormation" timestamp="2020-03-31T18:26:43" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/shared/cloudformation/cloudformation.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="load" timestamp="2020-03-31T18:26:43" tests="6" file="/codebuild/output/src956146630/src/dist/src/test/shared/cloudformation/cloudformation.test.js" time="0.0040" failures="0">
    <testcase name="CloudFormation load can successfully load a file" time="0.0010" classname="can successfully load a file">
    </testcase>
    <testcase name="CloudFormation load can successfully load a file without globals" time="0.0010" classname="can successfully load a file without globals">
    </testcase>
    <testcase name="CloudFormation load can successfully load a file with parameters" time="0.0000" classname="can successfully load a file with parameters">
    </testcase>
    <testcase name="CloudFormation load Does not load YAML with missing fields" time="0.0010" classname="Does not load YAML with missing fields">
    </testcase>
    <testcase name="CloudFormation load only loads valid YAML" time="0.0000" classname="only loads valid YAML">
    </testcase>
    <testcase name="CloudFormation load Loads YAML with references" time="0.0010" classname="Loads YAML with references">
    </testcase>
  </testsuite>
  <testsuite name="save" timestamp="2020-03-31T18:26:43" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/shared/cloudformation/cloudformation.test.js" time="0.0020" failures="0">
    <testcase name="CloudFormation save can successfully save a file" time="0.0010" classname="can successfully save a file">
    </testcase>
    <testcase name="CloudFormation save can successfully save a file to YAML and load the file as a CloudFormation.Template" time="0.0010" classname="can successfully save a file to YAML and load the file as a CloudFormation.Template">
    </testcase>
  </testsuite>
  <testsuite name="validateTemplate" timestamp="2020-03-31T18:26:43" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/shared/cloudformation/cloudformation.test.js" time="0.0000" failures="0">
    <testcase name="CloudFormation validateTemplate can successfully validate a valid template" time="0.0000" classname="can successfully validate a valid template">
    </testcase>
    <testcase name="CloudFormation validateTemplate can detect an invalid template" time="0.0000" classname="can detect an invalid template">
    </testcase>
  </testsuite>
  <testsuite name="validateResource" timestamp="2020-03-31T18:26:43" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/shared/cloudformation/cloudformation.test.js" time="0.0010" failures="0">
    <testcase name="CloudFormation validateResource can successfully validate a valid resource" time="0.0010" classname="can successfully validate a valid resource">
    </testcase>
    <testcase name="CloudFormation validateResource can detect an invalid resource" time="0.0000" classname="can detect an invalid resource">
    </testcase>
  </testsuite>
  <testsuite name="getResourceFromTemplate" timestamp="2020-03-31T18:26:43" tests="5" file="/codebuild/output/src956146630/src/dist/src/test/shared/cloudformation/cloudformation.test.js" time="0.0070" failures="0">
    <testcase name="CloudFormation getResourceFromTemplate should retrieve resource for existing lambda, single runtime" time="0.0020" classname="should retrieve resource for existing lambda, single runtime">
    </testcase>
    <testcase name="CloudFormation getResourceFromTemplate should retrieve resource for 2nd existing lambda, multiple runtimes" time="0.0010" classname="should retrieve resource for 2nd existing lambda, multiple runtimes">
    </testcase>
    <testcase name="CloudFormation getResourceFromTemplate should retrieve resource for 1st existing lambda, multiple runtimes" time="0.0010" classname="should retrieve resource for 1st existing lambda, multiple runtimes">
    </testcase>
    <testcase name="CloudFormation getResourceFromTemplate should throw for non-existing lambda, single runtime" time="0.0010" classname="should throw for non-existing lambda, single runtime">
    </testcase>
    <testcase name="CloudFormation getResourceFromTemplate should throw for non-existing lambda, multiple runtimes" time="0.0020" classname="should throw for non-existing lambda, multiple runtimes">
    </testcase>
  </testsuite>
  <testsuite name="getResourceFromTemplateResources" timestamp="2020-03-31T18:26:43" tests="5" file="/codebuild/output/src956146630/src/dist/src/test/shared/cloudformation/cloudformation.test.js" time="0.0050" failures="0">
    <testcase name="CloudFormation getResourceFromTemplateResources should retrieve resource for existing lambda, single runtime" time="0.0020" classname="should retrieve resource for existing lambda, single runtime">
    </testcase>
    <testcase name="CloudFormation getResourceFromTemplateResources should retrieve resource for 2nd existing lambda, multiple runtimes" time="0.0010" classname="should retrieve resource for 2nd existing lambda, multiple runtimes">
    </testcase>
    <testcase name="CloudFormation getResourceFromTemplateResources should retrieve resource for 1st existing lambda, multiple runtimes" time="0.0000" classname="should retrieve resource for 1st existing lambda, multiple runtimes">
    </testcase>
    <testcase name="CloudFormation getResourceFromTemplateResources should throw for non-existing lambda, single runtime" time="0.0010" classname="should throw for non-existing lambda, single runtime">
    </testcase>
    <testcase name="CloudFormation getResourceFromTemplateResources should throw for non-existing lambda, multiple runtimes" time="0.0010" classname="should throw for non-existing lambda, multiple runtimes">
    </testcase>
  </testsuite>
  <testsuite name="getRuntime" timestamp="2020-03-31T18:26:43" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/cloudformation/cloudformation.test.js" time="0.0010" failures="0">
    <testcase name="CloudFormation getRuntime throws if resource does not specify properties" time="0.0000" classname="throws if resource does not specify properties">
    </testcase>
    <testcase name="CloudFormation getRuntime throws if resource does not specify a runtime" time="0.0010" classname="throws if resource does not specify a runtime">
    </testcase>
    <testcase name="CloudFormation getRuntime returns runtime if specified" time="0.0000" classname="returns runtime if specified">
    </testcase>
  </testsuite>
  <testsuite name="getCodeUri" timestamp="2020-03-31T18:26:43" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/cloudformation/cloudformation.test.js" time="0.0000" failures="0">
    <testcase name="CloudFormation getCodeUri throws if resource does not specify properties" time="0.0000" classname="throws if resource does not specify properties">
    </testcase>
    <testcase name="CloudFormation getCodeUri throws if resource does not specify a code uri" time="0.0000" classname="throws if resource does not specify a code uri">
    </testcase>
    <testcase name="CloudFormation getCodeUri returns code uri if specified" time="0.0000" classname="returns code uri if specified">
    </testcase>
  </testsuite>
  <testsuite name="CloudFormation Template Registry" timestamp="2020-03-31T18:26:43" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/shared/cloudformation/templateRegistry.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="CloudFormationTemplateRegistry" timestamp="2020-03-31T18:26:43" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/shared/cloudformation/templateRegistry.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="addTemplateToRegistry" timestamp="2020-03-31T18:26:43" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/shared/cloudformation/templateRegistry.test.js" time="0.0020" failures="0">
    <testcase name="CloudFormation Template Registry CloudFormationTemplateRegistry addTemplateToRegistry adds data from a template to the registry and can receive the template&apos;s data" time="0.0010" classname="adds data from a template to the registry and can receive the template&apos;s data">
    </testcase>
    <testcase name="CloudFormation Template Registry CloudFormationTemplateRegistry addTemplateToRegistry throws an error if the file to add is not a CF template" time="0.0010" classname="throws an error if the file to add is not a CF template">
    </testcase>
  </testsuite>
  <testsuite name="addTemplatesToRegistry" timestamp="2020-03-31T18:26:43" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/shared/cloudformation/templateRegistry.test.js" time="0.0010" failures="0">
    <testcase name="CloudFormation Template Registry CloudFormationTemplateRegistry addTemplatesToRegistry adds data from multiple templates to the registry and can receive the templates&apos; data" time="0.0010" classname="adds data from multiple templates to the registry and can receive the templates&apos; data">
    </testcase>
    <testcase name="CloudFormation Template Registry CloudFormationTemplateRegistry addTemplatesToRegistry swallows errors if a template is not parseable while still parsing valid YAML" time="0.0000" classname="swallows errors if a template is not parseable while still parsing valid YAML">
    </testcase>
  </testsuite>
  <testsuite name="registeredTemplates" timestamp="2020-03-31T18:26:43" tests="1" file="/codebuild/output/src956146630/src/dist/src/test/shared/cloudformation/templateRegistry.test.js" time="0.0000" failures="0">
    <testcase name="CloudFormation Template Registry CloudFormationTemplateRegistry registeredTemplates returns an empty array if the registry has no registered templates" time="0.0000" classname="returns an empty array if the registry has no registered templates">
    </testcase>
  </testsuite>
  <testsuite name="getRegisteredTemplate" timestamp="2020-03-31T18:26:43" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/shared/cloudformation/templateRegistry.test.js" time="0.0000" failures="0">
    <testcase name="CloudFormation Template Registry CloudFormationTemplateRegistry getRegisteredTemplate returns undefined if the registry has no registered templates" time="0.0000" classname="returns undefined if the registry has no registered templates">
    </testcase>
    <testcase name="CloudFormation Template Registry CloudFormationTemplateRegistry getRegisteredTemplate returns undefined if the registry does not contain the template in question" time="0.0000" classname="returns undefined if the registry does not contain the template in question">
    </testcase>
  </testsuite>
  <testsuite name="removeTemplateFromRegistry" timestamp="2020-03-31T18:26:43" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/shared/cloudformation/templateRegistry.test.js" time="0.0020" failures="0">
    <testcase name="CloudFormation Template Registry CloudFormationTemplateRegistry removeTemplateFromRegistry removes an added template" time="0.0010" classname="removes an added template">
    </testcase>
    <testcase name="CloudFormation Template Registry CloudFormationTemplateRegistry removeTemplateFromRegistry does not affect the registry if a nonexistant template is removed" time="0.0010" classname="does not affect the registry if a nonexistant template is removed">
    </testcase>
  </testsuite>
  <testsuite name="findParentProjectFile" timestamp="2020-03-31T18:26:43" tests="6" file="/codebuild/output/src956146630/src/dist/src/test/shared/codelens/csharpCodeLensProvider.test.js" time="0.0010" failures="0">
    <testcase name="findParentProjectFile locates project in same folder" time="0.0010" classname="locates project in same folder">
    </testcase>
    <testcase name="findParentProjectFile locates project in parent folder" time="0.0000" classname="locates project in parent folder">
    </testcase>
    <testcase name="findParentProjectFile locates project two parent folders up" time="0.0000" classname="locates project two parent folders up">
    </testcase>
    <testcase name="findParentProjectFile selects project in same folder over parent folder" time="0.0000" classname="selects project in same folder over parent folder">
    </testcase>
    <testcase name="findParentProjectFile returns undefined when no project files are located" time="0.0000" classname="returns undefined when no project files are located">
    </testcase>
    <testcase name="findParentProjectFile returns undefined when no project files are located in parent chain" time="0.0000" classname="returns undefined when no project files are located in parent chain">
    </testcase>
  </testsuite>
  <testsuite name="getLambdaHandlerComponents" timestamp="2020-03-31T18:26:43" tests="1" file="/codebuild/output/src956146630/src/dist/src/test/shared/codelens/csharpCodeLensProvider.test.js" time="0.0080" failures="0">
    <testcase name="getLambdaHandlerComponents Detects a public function symbol" time="0.0080" classname="Detects a public function symbol">
    </testcase>
  </testsuite>
  <testsuite name="isPublicClassSymbol" timestamp="2020-03-31T18:26:43" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/codelens/csharpCodeLensProvider.test.js" time="0.0000" failures="0">
    <testcase name="isPublicClassSymbol returns true for a public class" time="0.0000" classname="returns true for a public class">
    </testcase>
    <testcase name="isPublicClassSymbol returns false when symbol is not of type Class" time="0.0000" classname="returns false when symbol is not of type Class">
    </testcase>
    <testcase name="isPublicClassSymbol returns false when class is not public" time="0.0000" classname="returns false when class is not public">
    </testcase>
  </testsuite>
  <testsuite name="isPublicMethodSymbol" timestamp="2020-03-31T18:26:43" tests="7" file="/codebuild/output/src956146630/src/dist/src/test/shared/codelens/csharpCodeLensProvider.test.js" time="0.0000" failures="0">
    <testcase name="isPublicMethodSymbol returns true for a public method symbol when signature all on one line" time="0.0000" classname="returns true for a public method symbol when signature all on one line">
    </testcase>
    <testcase name="isPublicMethodSymbol returns true for a public method symbol when signature across many lines" time="0.0000" classname="returns true for a public method symbol when signature across many lines">
    </testcase>
    <testcase name="isPublicMethodSymbol returns true for a public method symbol when method name on another line" time="0.0000" classname="returns true for a public method symbol when method name on another line">
    </testcase>
    <testcase name="isPublicMethodSymbol returns true for a public method symbol when args on many lines" time="0.0000" classname="returns true for a public method symbol when args on many lines">
    </testcase>
    <testcase name="isPublicMethodSymbol returns false for a symbol that is not a method" time="0.0000" classname="returns false for a symbol that is not a method">
    </testcase>
    <testcase name="isPublicMethodSymbol returns false when the method is not public" time="0.0000" classname="returns false when the method is not public">
    </testcase>
    <testcase name="isPublicMethodSymbol returns false when a private method name contains the word public in it" time="0.0000" classname="returns false when a private method name contains the word public in it">
    </testcase>
  </testsuite>
  <testsuite name="generateDotNetLambdaHandler" timestamp="2020-03-31T18:26:43" tests="1" file="/codebuild/output/src956146630/src/dist/src/test/shared/codelens/csharpCodeLensProvider.test.js" time="0.0000" failures="0">
    <testcase name="generateDotNetLambdaHandler produces a handler name" time="0.0000" classname="produces a handler name">
    </testcase>
  </testsuite>
  <testsuite name="localLambdaRunner" timestamp="2020-03-31T18:26:43" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/shared/codelens/localLambdaRunner.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="attachDebugger" timestamp="2020-03-31T18:26:43" tests="14" file="/codebuild/output/src956146630/src/dist/src/test/shared/codelens/localLambdaRunner.test.js" time="0.0020" failures="0">
    <testcase name="localLambdaRunner attachDebugger Successful attach has no retries" time="0.0010" classname="Successful attach has no retries">
    </testcase>
    <testcase name="localLambdaRunner attachDebugger Successful attach logs that the debugger attached" time="0.0000" classname="Successful attach logs that the debugger attached">
    </testcase>
    <testcase name="localLambdaRunner attachDebugger Successful attach records a success metric" time="0.0000" classname="Successful attach records a success metric">
    </testcase>
    <testcase name="localLambdaRunner attachDebugger Successful attach returns success" time="0.0000" classname="Successful attach returns success">
    </testcase>
    <testcase name="localLambdaRunner attachDebugger Failure to attach has no retries" time="0.0000" classname="Failure to attach has no retries">
    </testcase>
    <testcase name="localLambdaRunner attachDebugger Failure to attach logs that the debugger did not attach" time="0.0000" classname="Failure to attach logs that the debugger did not attach">
    </testcase>
    <testcase name="localLambdaRunner attachDebugger Failure to attach records a fail metric" time="0.0010" classname="Failure to attach records a fail metric">
    </testcase>
    <testcase name="localLambdaRunner attachDebugger Failure to attach returns failure" time="0.0000" classname="Failure to attach returns failure">
    </testcase>
    <testcase name="localLambdaRunner attachDebugger Attempts to retry when startDebugging returns undefined" time="0.0000" classname="Attempts to retry when startDebugging returns undefined">
    </testcase>
    <testcase name="localLambdaRunner attachDebugger Logs about exceeding the retry limit" time="0.0000" classname="Logs about exceeding the retry limit">
    </testcase>
    <testcase name="localLambdaRunner attachDebugger Does not log metrics when startDebugging returns undefined" time="0.0000" classname="Does not log metrics when startDebugging returns undefined">
    </testcase>
    <testcase name="localLambdaRunner attachDebugger Returns true if attach succeeds during retries" time="0.0000" classname="Returns true if attach succeeds during retries">
    </testcase>
    <testcase name="localLambdaRunner attachDebugger Returns false if attach fails during retries" time="0.0000" classname="Returns false if attach fails during retries">
    </testcase>
    <testcase name="localLambdaRunner attachDebugger Returns false if retry count exceeded" time="0.0000" classname="Returns false if retry count exceeded">
    </testcase>
  </testsuite>
  <testsuite name="makeBuildDir" timestamp="2020-03-31T18:26:43" tests="1" file="/codebuild/output/src956146630/src/dist/src/test/shared/codelens/localLambdaRunner.test.js" time="0.0000" failures="0">
    <testcase name="localLambdaRunner makeBuildDir creates a temp directory" time="0.0000" classname="creates a temp directory">
    </testcase>
  </testsuite>
  <testsuite name="executeSamBuild" timestamp="2020-03-31T18:26:43" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/shared/codelens/localLambdaRunner.test.js" time="0.0180" failures="0">
    <testcase name="localLambdaRunner executeSamBuild fails when the child process returns a nonzero exit code" time="0.0090" classname="fails when the child process returns a nonzero exit code">
    </testcase>
    <testcase name="localLambdaRunner executeSamBuild succeeds when the child process returns with an exit code of 0" time="0.0090" classname="succeeds when the child process returns with an exit code of 0">
    </testcase>
  </testsuite>
  <testsuite name="getLocalRootVariants" timestamp="2020-03-31T18:26:43" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/codelens/pythonCodeLensProvider.test.js" time="0.0000" failures="0">
    <testcase name="getLocalRootVariants Returns the same string for non-windows platforms: Looks like a windows path - lower case drive" time="0.0000" classname="Returns the same string for non-windows platforms: Looks like a windows path - lower case drive">
    </testcase>
    <testcase name="getLocalRootVariants Returns the same string for non-windows platforms: Looks like a windows path - upper case drive" time="0.0000" classname="Returns the same string for non-windows platforms: Looks like a windows path - upper case drive">
    </testcase>
    <testcase name="getLocalRootVariants Returns the same string for non-windows platforms: non-windows path" time="0.0000" classname="Returns the same string for non-windows platforms: non-windows path">
    </testcase>
  </testsuite>
  <testsuite name="getAccountId" timestamp="2020-03-31T18:26:43" tests="4" file="/codebuild/output/src956146630/src/dist/src/test/shared/credentials/accountId.test.js" time="0.0010" failures="0">
    <testcase name="getAccountId returns an account id (happy path)" time="0.0010" classname="returns an account id (happy path)">
    </testcase>
    <testcase name="getAccountId returns undefined if getCallerIdentity returns an undefined account" time="0.0000" classname="returns undefined if getCallerIdentity returns an undefined account">
    </testcase>
    <testcase name="getAccountId returns undefined if getCallerIdentity throws" time="0.0000" classname="returns undefined if getCallerIdentity throws">
    </testcase>
    <testcase name="getAccountId returns undefined if STS is not defined and toolkitClientBuilder cannot create an STS client" time="0.0000" classname="returns undefined if STS is not defined and toolkitClientBuilder cannot create an STS client">
    </testcase>
  </testsuite>
  <testsuite name="CredentialsProfileMru" timestamp="2020-03-31T18:26:43" tests="5" file="/codebuild/output/src956146630/src/dist/src/test/shared/credentials/credentialsProfileMru.test.js" time="0.0000" failures="0">
    <testcase name="CredentialsProfileMru lists no profile when none exist" time="0.0000" classname="lists no profile when none exist">
    </testcase>
    <testcase name="CredentialsProfileMru lists single profile when only one exists" time="0.0000" classname="lists single profile when only one exists">
    </testcase>
    <testcase name="CredentialsProfileMru lists multiple profiles when multiple exist" time="0.0000" classname="lists multiple profiles when multiple exist">
    </testcase>
    <testcase name="CredentialsProfileMru does not list duplicate profiles" time="0.0000" classname="does not list duplicate profiles">
    </testcase>
    <testcase name="CredentialsProfileMru does not list more than MAX_CRENDTIAL_MRU_SIZE profiles" time="0.0000" classname="does not list more than MAX_CRENDTIAL_MRU_SIZE profiles">
    </testcase>
  </testsuite>
  <testsuite name="CredentialsStore" timestamp="2020-03-31T18:26:43" tests="5" file="/codebuild/output/src956146630/src/dist/src/test/shared/credentials/credentialsStore.test.js" time="0.0010" failures="0">
    <testcase name="CredentialsStore getCredentials returns undefined when credentials are not loaded" time="0.0010" classname="getCredentials returns undefined when credentials are not loaded">
    </testcase>
    <testcase name="CredentialsStore getOrCreateCredentials creates when credentials are not loaded" time="0.0000" classname="getOrCreateCredentials creates when credentials are not loaded">
    </testcase>
    <testcase name="CredentialsStore getOrCreateCredentials does not call create method once credentials are loaded" time="0.0000" classname="getOrCreateCredentials does not call create method once credentials are loaded">
    </testcase>
    <testcase name="CredentialsStore getCredentials returns stored credentials" time="0.0000" classname="getCredentials returns stored credentials">
    </testcase>
    <testcase name="CredentialsStore invalidate removes the credentials from storage" time="0.0000" classname="invalidate removes the credentials from storage">
    </testcase>
  </testsuite>
  <testsuite name="defaultCredentialSelectionDataProvider" timestamp="2020-03-31T18:26:43" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/shared/credentials/defaultCredentialSelectionDataProvider.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="credentialProfileSelector" timestamp="2020-03-31T18:26:43" tests="1" file="/codebuild/output/src956146630/src/dist/src/test/shared/credentials/defaultCredentialSelectionDataProvider.test.js" time="0.0010" failures="0">
    <testcase name="defaultCredentialSelectionDataProvider credentialProfileSelector stops on selection of existing profile name" time="0.0010" classname="stops on selection of existing profile name">
    </testcase>
  </testsuite>
  <testsuite name="promptToDefineCredentialsProfile" timestamp="2020-03-31T18:26:43" tests="1" file="/codebuild/output/src956146630/src/dist/src/test/shared/credentials/defaultCredentialSelectionDataProvider.test.js" time="0.0010" failures="0">
    <testcase name="defaultCredentialSelectionDataProvider promptToDefineCredentialsProfile populates prompt with profiles from from data provider" time="0.0010" classname="populates prompt with profiles from from data provider">
    </testcase>
  </testsuite>
  <testsuite name="LoginManager" timestamp="2020-03-31T18:26:43" tests="5" file="/codebuild/output/src956146630/src/dist/src/test/shared/credentials/loginManager.test.js" time="0.0050" failures="0">
    <testcase name="LoginManager logs in with credentials (happy path)" time="0.0010" classname="logs in with credentials (happy path)">
    </testcase>
    <testcase name="LoginManager logs out (happy path)" time="0.0010" classname="logs out (happy path)">
    </testcase>
    <testcase name="LoginManager logs out if credentials could not be retrieved" time="0.0010" classname="logs out if credentials could not be retrieved">
    </testcase>
    <testcase name="LoginManager logs out if an account Id could not be determined" time="0.0010" classname="logs out if an account Id could not be determined">
    </testcase>
    <testcase name="LoginManager logs out if getting an account Id throws an Error" time="0.0010" classname="logs out if getting an account Id throws an Error">
    </testcase>
  </testsuite>
  <testsuite name="UserCredentialsUtils" timestamp="2020-03-31T18:26:43" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/shared/credentials/userCredentialsUtils.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="findExistingCredentialsFilenames" timestamp="2020-03-31T18:26:43" tests="4" file="/codebuild/output/src956146630/src/dist/src/test/shared/credentials/userCredentialsUtils.test.js" time="0.0010" failures="0">
    <testcase name="UserCredentialsUtils findExistingCredentialsFilenames returns both filenames if both files exist" time="0.0000" classname="returns both filenames if both files exist">
    </testcase>
    <testcase name="UserCredentialsUtils findExistingCredentialsFilenames returns credentials file if it exists and config file does not exist" time="0.0000" classname="returns credentials file if it exists and config file does not exist">
    </testcase>
    <testcase name="UserCredentialsUtils findExistingCredentialsFilenames returns config file if it exists and credentials file does not exist" time="0.0000" classname="returns config file if it exists and credentials file does not exist">
    </testcase>
    <testcase name="UserCredentialsUtils findExistingCredentialsFilenames returns empty result if neither file exists" time="0.0010" classname="returns empty result if neither file exists">
    </testcase>
  </testsuite>
  <testsuite name="generateCredentialsFile" timestamp="2020-03-31T18:26:43" tests="1" file="/codebuild/output/src956146630/src/dist/src/test/shared/credentials/userCredentialsUtils.test.js" time="0.0070" failures="0">
    <testcase name="UserCredentialsUtils generateCredentialsFile generates a valid credentials file" time="0.0070" classname="generates a valid credentials file">
    </testcase>
  </testsuite>
  <testsuite name="DefaultAwsClientBuilder" timestamp="2020-03-31T18:26:43" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/shared/defaultAwsClientBuilder.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="createAndConfigureSdkClient" timestamp="2020-03-31T18:26:43" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/defaultAwsClientBuilder.test.js" time="0.0020" failures="0">
    <testcase name="DefaultAwsClientBuilder createAndConfigureSdkClient includes custom user-agent if no options are specified" time="0.0010" classname="includes custom user-agent if no options are specified">
    </testcase>
    <testcase name="DefaultAwsClientBuilder createAndConfigureSdkClient includes custom user-agent if not specified in options" time="0.0000" classname="includes custom user-agent if not specified in options">
    </testcase>
    <testcase name="DefaultAwsClientBuilder createAndConfigureSdkClient does not override custom user-agent if specified in options" time="0.0010" classname="does not override custom user-agent if specified in options">
    </testcase>
  </testsuite>
  <testsuite name="DefaultAwsContext" timestamp="2020-03-31T18:26:43" tests="13" file="/codebuild/output/src956146630/src/dist/src/test/shared/defaultAwsContext.test.js" time="0.0030" failures="0">
    <testcase name="DefaultAwsContext instantiates with no credentials" time="0.0000" classname="instantiates with no credentials">
    </testcase>
    <testcase name="DefaultAwsContext sets credentials and gets credentialsId" time="0.0010" classname="sets credentials and gets credentialsId">
    </testcase>
    <testcase name="DefaultAwsContext sets undefined credentials and gets credentialsId" time="0.0000" classname="sets undefined credentials and gets credentialsId">
    </testcase>
    <testcase name="DefaultAwsContext sets credentials and gets accountId" time="0.0010" classname="sets credentials and gets accountId">
    </testcase>
    <testcase name="DefaultAwsContext sets undefined credentials and gets accountId" time="0.0000" classname="sets undefined credentials and gets accountId">
    </testcase>
    <testcase name="DefaultAwsContext sets credentials and gets credentials" time="0.0000" classname="sets credentials and gets credentials">
    </testcase>
    <testcase name="DefaultAwsContext sets undefined credentials and gets credentials" time="0.0000" classname="sets undefined credentials and gets credentials">
    </testcase>
    <testcase name="DefaultAwsContext gets single region from config on startup" time="0.0000" classname="gets single region from config on startup">
    </testcase>
    <testcase name="DefaultAwsContext gets multiple regions from config on startup" time="0.0000" classname="gets multiple regions from config on startup">
    </testcase>
    <testcase name="DefaultAwsContext updates globalState on single region change" time="0.0000" classname="updates globalState on single region change">
    </testcase>
    <testcase name="DefaultAwsContext updates globalState on multiple region change" time="0.0010" classname="updates globalState on multiple region change">
    </testcase>
    <testcase name="DefaultAwsContext updates globalState on region removal" time="0.0000" classname="updates globalState on region removal">
    </testcase>
    <testcase name="DefaultAwsContext fires event on credentials change" time="0.0000" classname="fires event on credentials change">
    </testcase>
  </testsuite>
  <testsuite name="extensionUtilities" timestamp="2020-03-31T18:26:43" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/shared/extensionUtilities.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="safeGet" timestamp="2020-03-31T18:26:43" tests="1" file="/codebuild/output/src956146630/src/dist/src/test/shared/extensionUtilities.test.js" time="0.0000" failures="0">
    <testcase name="extensionUtilities safeGet can access sub-property" time="0.0000" classname="can access sub-property">
    </testcase>
  </testsuite>
  <testsuite name="createQuickStartWebview" timestamp="2020-03-31T18:26:43" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/extensionUtilities.test.js" time="0.0020" failures="0">
    <testcase name="extensionUtilities createQuickStartWebview throws error if a quick start page doesn&apos; exist" time="0.0000" classname="throws error if a quick start page doesn&apos; exist">
    </testcase>
    <testcase name="extensionUtilities createQuickStartWebview returns a webview with unaltered text if a valid file is passed without tokens" time="0.0010" classname="returns a webview with unaltered text if a valid file is passed without tokens">
    </testcase>
    <testcase name="extensionUtilities createQuickStartWebview returns a webview with tokens replaced" time="0.0010" classname="returns a webview with tokens replaced">
    </testcase>
  </testsuite>
  <testsuite name="isDifferentVersion" timestamp="2020-03-31T18:26:43" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/extensionUtilities.test.js" time="0.0000" failures="0">
    <testcase name="extensionUtilities isDifferentVersion returns false if the version exists and matches the existing version exactly" time="0.0000" classname="returns false if the version exists and matches the existing version exactly">
    </testcase>
    <testcase name="extensionUtilities isDifferentVersion returns true if a most recent version isn&apos;t set" time="0.0000" classname="returns true if a most recent version isn&apos;t set">
    </testcase>
    <testcase name="extensionUtilities isDifferentVersion returns true if a most recent version doesn&apos;t match the current version" time="0.0000" classname="returns true if a most recent version doesn&apos;t match the current version">
    </testcase>
  </testsuite>
  <testsuite name="setMostRecentVersion" timestamp="2020-03-31T18:26:43" tests="1" file="/codebuild/output/src956146630/src/dist/src/test/shared/extensionUtilities.test.js" time="0.0000" failures="0">
    <testcase name="extensionUtilities setMostRecentVersion sets the most recent version" time="0.0000" classname="sets the most recent version">
    </testcase>
  </testsuite>
  <testsuite name="FeatureToggle" timestamp="2020-03-31T18:26:43" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/shared/featureToggle.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="isFeatureActive" timestamp="2020-03-31T18:26:43" tests="4" file="/codebuild/output/src956146630/src/dist/src/test/shared/featureToggle.test.js" time="0.0000" failures="0">
    <testcase name="FeatureToggle isFeatureActive returns true if feature is declared active and is present in settings.json" time="0.0000" classname="returns true if feature is declared active and is present in settings.json">
    </testcase>
    <testcase name="FeatureToggle isFeatureActive returns false for features that are not declared as active feature keys but are present in settings.json" time="0.0000" classname="returns false for features that are not declared as active feature keys but are present in settings.json">
    </testcase>
    <testcase name="FeatureToggle isFeatureActive returns false for features that are declared as active feature keys but are not active in settings.json" time="0.0000" classname="returns false for features that are declared as active feature keys but are not active in settings.json">
    </testcase>
    <testcase name="FeatureToggle isFeatureActive throws an error if too many features are registered" time="0.0000" classname="throws an error if too many features are registered">
    </testcase>
  </testsuite>
  <testsuite name="filesystem" timestamp="2020-03-31T18:26:43" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/shared/filesystem.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="mkdir" timestamp="2020-03-31T18:26:43" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/filesystem.test.js" time="0.0010" failures="0">
    <testcase name="filesystem mkdir makes subfolder to existing folder" time="0.0000" classname="makes subfolder to existing folder">
    </testcase>
    <testcase name="filesystem mkdir makes two levels of subfolders" time="0.0000" classname="makes two levels of subfolders">
    </testcase>
    <testcase name="filesystem mkdir makes many levels of subfolders" time="0.0010" classname="makes many levels of subfolders">
    </testcase>
  </testsuite>
  <testsuite name="rmrf" timestamp="2020-03-31T18:26:43" tests="1" file="/codebuild/output/src956146630/src/dist/src/test/shared/filesystem.test.js" time="0.0010" failures="0">
    <testcase name="filesystem rmrf deletes files and folders recursively" time="0.0010" classname="deletes files and folders recursively">
    </testcase>
  </testsuite>
  <testsuite name="filesystemUtilities" timestamp="2020-03-31T18:26:43" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/shared/filesystemUtilities.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="makeTemporaryToolkitFolder" timestamp="2020-03-31T18:26:43" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/filesystemUtilities.test.js" time="0.0000" failures="0">
    <testcase name="filesystemUtilities makeTemporaryToolkitFolder makes temp dirs as children to filesystemUtilities.tempDirPath (&apos;/tmp/aws-toolkit-vscode&apos;)" time="0.0000" classname="makes temp dirs as children to filesystemUtilities.tempDirPath (&apos;/tmp/aws-toolkit-vscode&apos;)">
    </testcase>
    <testcase name="filesystemUtilities makeTemporaryToolkitFolder creates a folder" time="0.0000" classname="creates a folder">
    </testcase>
    <testcase name="filesystemUtilities makeTemporaryToolkitFolder makes nested temp dirs" time="0.0000" classname="makes nested temp dirs">
    </testcase>
  </testsuite>
  <testsuite name="findFileInParentPaths" timestamp="2020-03-31T18:26:43" tests="5" file="/codebuild/output/src956146630/src/dist/src/test/shared/filesystemUtilities.test.js" time="0.0000" failures="0">
    <testcase name="filesystemUtilities findFileInParentPaths returns undefined when file not found" time="0.0000" classname="returns undefined when file not found">
    </testcase>
    <testcase name="filesystemUtilities findFileInParentPaths finds the file in the same folder" time="0.0000" classname="finds the file in the same folder">
    </testcase>
    <testcase name="filesystemUtilities findFileInParentPaths finds the file next to another file" time="0.0000" classname="finds the file next to another file">
    </testcase>
    <testcase name="filesystemUtilities findFileInParentPaths finds the file in the parent folder" time="0.0000" classname="finds the file in the parent folder">
    </testcase>
    <testcase name="filesystemUtilities findFileInParentPaths finds the file 3 parent folders up" time="0.0000" classname="finds the file 3 parent folders up">
    </testcase>
  </testsuite>
  <testsuite name="isContainedWithinDirectory" timestamp="2020-03-31T18:26:43" tests="6" file="/codebuild/output/src956146630/src/dist/src/test/shared/filesystemUtilities.test.js" time="0.0000" failures="0">
    <testcase name="filesystemUtilities isContainedWithinDirectory returns true for the same dir" time="0.0000" classname="returns true for the same dir">
    </testcase>
    <testcase name="filesystemUtilities isContainedWithinDirectory returns true for a subdir" time="0.0000" classname="returns true for a subdir">
    </testcase>
    <testcase name="filesystemUtilities isContainedWithinDirectory returns true for a file in the same dir" time="0.0000" classname="returns true for a file in the same dir">
    </testcase>
    <testcase name="filesystemUtilities isContainedWithinDirectory returns true for a file in a subdir" time="0.0000" classname="returns true for a file in a subdir">
    </testcase>
    <testcase name="filesystemUtilities isContainedWithinDirectory returns false for a completely different dir" time="0.0000" classname="returns false for a completely different dir">
    </testcase>
    <testcase name="filesystemUtilities isContainedWithinDirectory returns false for a similarly named dir" time="0.0000" classname="returns false for a similarly named dir">
    </testcase>
  </testsuite>
  <testsuite name="makeLogger" timestamp="2020-03-31T18:26:43" tests="1" file="/codebuild/output/src956146630/src/dist/src/test/shared/logger/activation.test.js" time="0.0000" failures="0">
    <testcase name="makeLogger creates a logger object" time="0.0000" classname="creates a logger object">
    </testcase>
  </testsuite>
  <testsuite name="OutputChannelTransport" timestamp="2020-03-31T18:26:43" tests="1" file="/codebuild/output/src956146630/src/dist/src/test/shared/logger/outputChannelLogger.test.js" time="0.0010" failures="0">
    <testcase name="OutputChannelTransport logs content" time="0.0010" classname="logs content">
    </testcase>
  </testsuite>
  <testsuite name="WinstonToolkitLogger" timestamp="2020-03-31T18:26:43" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/shared/logger/winstonToolkitLogger.test.js" time="0.0000" failures="0">
    <testcase name="WinstonToolkitLogger creates an object" time="0.0000" classname="creates an object">
    </testcase>
    <testcase name="WinstonToolkitLogger throws when logging to a disposed object" time="0.0000" classname="throws when logging to a disposed object">
    </testcase>
  </testsuite>
  <testsuite name="logs to a file" timestamp="2020-03-31T18:26:43" tests="8" file="/codebuild/output/src956146630/src/dist/src/test/shared/logger/winstonToolkitLogger.test.js" time="0.0270" failures="0">
    <testcase name="WinstonToolkitLogger logs to a file does not log a lower level" time="0.0060" classname="does not log a lower level">
    </testcase>
    <testcase name="WinstonToolkitLogger logs to a file logs multiple inputs" time="0.0010" classname="logs multiple inputs">
    </testcase>
    <testcase name="WinstonToolkitLogger logs to a file supports updating the log type" time="0.0030" classname="supports updating the log type">
    </testcase>
    <testcase name="WinstonToolkitLogger logs to a file logs debug" time="0.0020" classname="logs debug">
    </testcase>
    <testcase name="WinstonToolkitLogger logs to a file logs verbose" time="0.0020" classname="logs verbose">
    </testcase>
    <testcase name="WinstonToolkitLogger logs to a file logs info" time="0.0040" classname="logs info">
    </testcase>
    <testcase name="WinstonToolkitLogger logs to a file logs warn" time="0.0070" classname="logs warn">
    </testcase>
    <testcase name="WinstonToolkitLogger logs to a file logs error" time="0.0020" classname="logs error">
    </testcase>
  </testsuite>
  <testsuite name="logs to an OutputChannel" timestamp="2020-03-31T18:26:43" tests="8" file="/codebuild/output/src956146630/src/dist/src/test/shared/logger/winstonToolkitLogger.test.js" time="0.0050" failures="0">
    <testcase name="WinstonToolkitLogger logs to an OutputChannel does not log a lower level" time="0.0010" classname="does not log a lower level">
    </testcase>
    <testcase name="WinstonToolkitLogger logs to an OutputChannel logs multiple inputs" time="0.0010" classname="logs multiple inputs">
    </testcase>
    <testcase name="WinstonToolkitLogger logs to an OutputChannel supports updating the log type" time="0.0010" classname="supports updating the log type">
    </testcase>
    <testcase name="WinstonToolkitLogger logs to an OutputChannel logs debug" time="0.0010" classname="logs debug">
    </testcase>
    <testcase name="WinstonToolkitLogger logs to an OutputChannel logs verbose" time="0.0000" classname="logs verbose">
    </testcase>
    <testcase name="WinstonToolkitLogger logs to an OutputChannel logs info" time="0.0000" classname="logs info">
    </testcase>
    <testcase name="WinstonToolkitLogger logs to an OutputChannel logs warn" time="0.0000" classname="logs warn">
    </testcase>
    <testcase name="WinstonToolkitLogger logs to an OutputChannel logs error" time="0.0010" classname="logs error">
    </testcase>
  </testsuite>
  <testsuite name="DefaultRegionProvider" timestamp="2020-03-31T18:26:43" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/shared/regions/defaultRegionProvider.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="isServiceInRegion" timestamp="2020-03-31T18:26:43" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/shared/regions/defaultRegionProvider.test.js" time="0.0010" failures="0">
    <testcase name="DefaultRegionProvider isServiceInRegion indicates when a service is in a region" time="0.0010" classname="indicates when a service is in a region">
    </testcase>
    <testcase name="DefaultRegionProvider isServiceInRegion indicates when a service is not in a region" time="0.0000" classname="indicates when a service is not in a region">
    </testcase>
  </testsuite>
  <testsuite name="getPartitionId" timestamp="2020-03-31T18:26:43" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/shared/regions/defaultRegionProvider.test.js" time="0.0000" failures="0">
    <testcase name="DefaultRegionProvider getPartitionId gets partition for a known region" time="0.0000" classname="gets partition for a known region">
    </testcase>
    <testcase name="DefaultRegionProvider getPartitionId returns undefined for an unknown region" time="0.0000" classname="returns undefined for an unknown region">
    </testcase>
  </testsuite>
  <testsuite name="getRegions" timestamp="2020-03-31T18:26:43" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/shared/regions/defaultRegionProvider.test.js" time="0.0000" failures="0">
    <testcase name="DefaultRegionProvider getRegions gets regions for a known partition" time="0.0000" classname="gets regions for a known partition">
    </testcase>
    <testcase name="DefaultRegionProvider getRegions returns empty array for an unknown partition" time="0.0000" classname="returns empty array for an unknown partition">
    </testcase>
  </testsuite>
  <testsuite name="loadEndpoints" timestamp="2020-03-31T18:26:43" tests="5" file="/codebuild/output/src956146630/src/dist/src/test/shared/regions/endpoints.test.js" time="0.0000" failures="0">
    <testcase name="loadEndpoints returns undefined for malformed json" time="0.0000" classname="returns undefined for malformed json">
    </testcase>
    <testcase name="loadEndpoints returns an object for well-formed json" time="0.0000" classname="returns an object for well-formed json">
    </testcase>
    <testcase name="loadEndpoints loads partitions" time="0.0000" classname="loads partitions">
    </testcase>
    <testcase name="loadEndpoints loads regions" time="0.0000" classname="loads regions">
    </testcase>
    <testcase name="loadEndpoints loads services" time="0.0000" classname="loads services">
    </testcase>
  </testsuite>
  <testsuite name="EndpointsProvider" timestamp="2020-03-31T18:26:44" tests="5" file="/codebuild/output/src956146630/src/dist/src/test/shared/regions/endpointsProvider.test.js" time="0.0010" failures="0">
    <testcase name="EndpointsProvider loads from local fetcher" time="0.0000" classname="loads from local fetcher">
    </testcase>
    <testcase name="EndpointsProvider loads from remote fetcher" time="0.0010" classname="loads from remote fetcher">
    </testcase>
    <testcase name="EndpointsProvider raises events after each fetcher" time="0.0000" classname="raises events after each fetcher">
    </testcase>
    <testcase name="EndpointsProvider does not raise an event if local fetcher returns nothing" time="0.0000" classname="does not raise an event if local fetcher returns nothing">
    </testcase>
    <testcase name="EndpointsProvider does not raise an event if remote fetcher returns nothing" time="0.0000" classname="does not raise an event if remote fetcher returns nothing">
    </testcase>
  </testsuite>
  <testsuite name="getRegionsForActiveCredentials" timestamp="2020-03-31T18:26:44" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/regions/regionUtilities.test.js" time="0.0000" failures="0">
    <testcase name="getRegionsForActiveCredentials returns regions in the same partition" time="0.0000" classname="returns regions in the same partition">
    </testcase>
    <testcase name="getRegionsForActiveCredentials defaults to the standard partition if no default region is found" time="0.0000" classname="defaults to the standard partition if no default region is found">
    </testcase>
    <testcase name="getRegionsForActiveCredentials defaults to the standard partition if default region is not recognized" time="0.0000" classname="defaults to the standard partition if default region is not recognized">
    </testcase>
  </testsuite>
  <testsuite name="CompositeResourceFetcher" timestamp="2020-03-31T18:26:44" tests="4" file="/codebuild/output/src956146630/src/dist/src/test/shared/resourceFetcher/compositeResourceFetcher.test.js" time="0.0040" failures="0">
    <testcase name="CompositeResourceFetcher loads from a resource fetcher" time="0.0020" classname="loads from a resource fetcher">
    </testcase>
    <testcase name="CompositeResourceFetcher loads from the first resource fetcher to return contents" time="0.0000" classname="loads from the first resource fetcher to return contents">
    </testcase>
    <testcase name="CompositeResourceFetcher tries to load from the next resource fetcher when one raises an error" time="0.0020" classname="tries to load from the next resource fetcher when one raises an error">
    </testcase>
    <testcase name="CompositeResourceFetcher returns undefined if no resource fetcher returns contents" time="0.0000" classname="returns undefined if no resource fetcher returns contents">
    </testcase>
  </testsuite>
  <testsuite name="FileResourceFetcher" timestamp="2020-03-31T18:26:44" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/shared/resourceFetcher/fileResourceFetcher.test.js" time="0.0030" failures="0">
    <testcase name="FileResourceFetcher loads the contents of a file" time="0.0020" classname="loads the contents of a file">
    </testcase>
    <testcase name="FileResourceFetcher returns undefined if the file does not exist" time="0.0010" classname="returns undefined if the file does not exist">
    </testcase>
  </testsuite>
  <testsuite name="DefaultValidatingSamCliProcessInvoker" timestamp="2020-03-31T18:26:44" tests="6" file="/codebuild/output/src956146630/src/dist/src/test/shared/sam/cli/defaultValidatingSamCliProcessInvoker.test.js" time="0.0050" failures="0">
    <testcase name="DefaultValidatingSamCliProcessInvoker throws InvalidSamCliVersionError when validation reports SAM CLI Version is too low" time="0.0010" classname="throws InvalidSamCliVersionError when validation reports SAM CLI Version is too low">
    </testcase>
    <testcase name="DefaultValidatingSamCliProcessInvoker throws InvalidSamCliVersionError when validation reports SAM CLI Version is too high" time="0.0010" classname="throws InvalidSamCliVersionError when validation reports SAM CLI Version is too high">
    </testcase>
    <testcase name="DefaultValidatingSamCliProcessInvoker throws InvalidSamCliVersionError when validation reports SAM CLI Version is unparsable" time="0.0010" classname="throws InvalidSamCliVersionError when validation reports SAM CLI Version is unparsable">
    </testcase>
    <testcase name="DefaultValidatingSamCliProcessInvoker throws SamCliNotFoundError when sam cli cannot be found" time="0.0010" classname="throws SamCliNotFoundError when sam cli cannot be found">
    </testcase>
    <testcase name="DefaultValidatingSamCliProcessInvoker throws Error when given invalid validation state" time="0.0000" classname="throws Error when given invalid validation state">
    </testcase>
    <testcase name="DefaultValidatingSamCliProcessInvoker invokes when there are no validation issues" time="0.0010" classname="invokes when there are no validation issues">
    </testcase>
  </testsuite>
  <testsuite name="SamCliBuildInvocation" timestamp="2020-03-31T18:26:44" tests="16" file="/codebuild/output/src956146630/src/dist/src/test/shared/sam/cli/samCliBuild.test.js" time="0.1520" failures="0">
    <testcase name="SamCliBuildInvocation Passes build command to sam cli" time="0.0090" classname="Passes build command to sam cli">
    </testcase>
    <testcase name="SamCliBuildInvocation Passes Build Dir to sam cli" time="0.0100" classname="Passes Build Dir to sam cli">
    </testcase>
    <testcase name="SamCliBuildInvocation Passes Base Dir to sam cli" time="0.0100" classname="Passes Base Dir to sam cli">
    </testcase>
    <testcase name="SamCliBuildInvocation Does not pass Base Dir to sam cli" time="0.0110" classname="Does not pass Base Dir to sam cli">
    </testcase>
    <testcase name="SamCliBuildInvocation Passes Template to sam cli" time="0.0090" classname="Passes Template to sam cli">
    </testcase>
    <testcase name="SamCliBuildInvocation passes --use-container to sam cli if useContainer is true" time="0.0110" classname="passes --use-container to sam cli if useContainer is true">
    </testcase>
    <testcase name="SamCliBuildInvocation does not pass --use-container to sam cli if useContainer is false" time="0.0090" classname="does not pass --use-container to sam cli if useContainer is false">
    </testcase>
    <testcase name="SamCliBuildInvocation does not pass --use-container to sam cli if useContainer is undefined" time="0.0090" classname="does not pass --use-container to sam cli if useContainer is undefined">
    </testcase>
    <testcase name="SamCliBuildInvocation passes --manifest to sam cli if manifestPath is set" time="0.0090" classname="passes --manifest to sam cli if manifestPath is set">
    </testcase>
    <testcase name="SamCliBuildInvocation does not pass --manifest to sam cli if manifestPath is not set" time="0.0100" classname="does not pass --manifest to sam cli if manifestPath is not set">
    </testcase>
    <testcase name="SamCliBuildInvocation Passes docker network to sam cli" time="0.0100" classname="Passes docker network to sam cli">
    </testcase>
    <testcase name="SamCliBuildInvocation Does not pass docker network to sam cli if undefined" time="0.0090" classname="Does not pass docker network to sam cli if undefined">
    </testcase>
    <testcase name="SamCliBuildInvocation passes --skip-pull-image to sam cli if skipPullImage is true" time="0.0090" classname="passes --skip-pull-image to sam cli if skipPullImage is true">
    </testcase>
    <testcase name="SamCliBuildInvocation does not pass --skip-pull-image to sam cli if skipPullImageis false" time="0.0090" classname="does not pass --skip-pull-image to sam cli if skipPullImageis false">
    </testcase>
    <testcase name="SamCliBuildInvocation does not pass --skip-pull-image to sam cli if skipPullImage is undefined" time="0.0090" classname="does not pass --skip-pull-image to sam cli if skipPullImage is undefined">
    </testcase>
    <testcase name="SamCliBuildInvocation throws on unexpected exit code" time="0.0090" classname="throws on unexpected exit code">
    </testcase>
  </testsuite>
  <testsuite name="SamCliConfiguration" timestamp="2020-03-31T18:26:44" tests="5" file="/codebuild/output/src956146630/src/dist/src/test/shared/sam/cli/samCliConfiguration.test.js" time="0.0010" failures="0">
    <testcase name="SamCliConfiguration uses config value when referencing file that exists" time="0.0010" classname="uses config value when referencing file that exists">
    </testcase>
    <testcase name="SamCliConfiguration calls location provider when config references file that does not exist" time="0.0000" classname="calls location provider when config references file that does not exist">
    </testcase>
    <testcase name="SamCliConfiguration calls location provider when config not set" time="0.0000" classname="calls location provider when config not set">
    </testcase>
    <testcase name="SamCliConfiguration location provider detects a file" time="0.0000" classname="location provider detects a file">
    </testcase>
    <testcase name="SamCliConfiguration location provider does not detect a file" time="0.0000" classname="location provider does not detect a file">
    </testcase>
  </testsuite>
  <testsuite name="runSamCliDeploy" timestamp="2020-03-31T18:26:44" tests="4" file="/codebuild/output/src956146630/src/dist/src/test/shared/sam/cli/samCliDeploy.test.js" time="0.0000" failures="0">
    <testcase name="runSamCliDeploy does not include --parameter-overrides if there are no overrides" time="0.0000" classname="does not include --parameter-overrides if there are no overrides">
    </testcase>
    <testcase name="runSamCliDeploy includes overrides as a string of key=value pairs" time="0.0000" classname="includes overrides as a string of key=value pairs">
    </testcase>
    <testcase name="runSamCliDeploy includes a template, stack name, and region" time="0.0000" classname="includes a template, stack name, and region">
    </testcase>
    <testcase name="runSamCliDeploy throws on unexpected exit code" time="0.0000" classname="throws on unexpected exit code">
    </testcase>
  </testsuite>
  <testsuite name="SamCliInfoInvocation" timestamp="2020-03-31T18:26:44" tests="7" file="/codebuild/output/src956146630/src/dist/src/test/shared/sam/cli/samCliInfo.test.js" time="0.0030" failures="0">
    <testcase name="SamCliInfoInvocation converts sam info response to SamCliInfoResponse" time="0.0000" classname="converts sam info response to SamCliInfoResponse">
    </testcase>
    <testcase name="SamCliInfoInvocation converts sam info response containing unexpected fields to SamCliInfoResponse" time="0.0010" classname="converts sam info response containing unexpected fields to SamCliInfoResponse">
    </testcase>
    <testcase name="SamCliInfoInvocation converts sam info response without version to SamCliInfoResponse" time="0.0000" classname="converts sam info response without version to SamCliInfoResponse">
    </testcase>
    <testcase name="SamCliInfoInvocation converts non-response to undefined" time="0.0000" classname="converts non-response to undefined">
    </testcase>
    <testcase name="SamCliInfoInvocation handles successful errorcode and output" time="0.0010" classname="handles successful errorcode and output">
    </testcase>
    <testcase name="SamCliInfoInvocation handles successful errorcode with strange output" time="0.0010" classname="handles successful errorcode with strange output">
    </testcase>
    <testcase name="SamCliInfoInvocation throws on unexpected exit code" time="0.0000" classname="throws on unexpected exit code">
    </testcase>
  </testsuite>
  <testsuite name="runSamCliInit" timestamp="2020-03-31T18:26:44" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/shared/sam/cli/samCliInit.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="runSamCliInit with HelloWorld template" timestamp="2020-03-31T18:26:44" tests="8" file="/codebuild/output/src956146630/src/dist/src/test/shared/sam/cli/samCliInit.test.js" time="0.0000" failures="0">
    <testcase name="runSamCliInit runSamCliInit with HelloWorld template Passes init command to sam cli" time="0.0000" classname="Passes init command to sam cli">
    </testcase>
    <testcase name="runSamCliInit runSamCliInit with HelloWorld template Passes name to sam cli" time="0.0000" classname="Passes name to sam cli">
    </testcase>
    <testcase name="runSamCliInit runSamCliInit with HelloWorld template Passes location to sam cli" time="0.0000" classname="Passes location to sam cli">
    </testcase>
    <testcase name="runSamCliInit runSamCliInit with HelloWorld template Passes runtime to sam cli" time="0.0000" classname="Passes runtime to sam cli">
    </testcase>
    <testcase name="runSamCliInit runSamCliInit with HelloWorld template throws on unexpected exit code" time="0.0000" classname="throws on unexpected exit code">
    </testcase>
    <testcase name="runSamCliInit runSamCliInit with HelloWorld template Passes --no-interactive" time="0.0000" classname="Passes --no-interactive">
    </testcase>
    <testcase name="runSamCliInit runSamCliInit with HelloWorld template Passes --app-template" time="0.0000" classname="Passes --app-template">
    </testcase>
    <testcase name="runSamCliInit runSamCliInit with HelloWorld template Passes --dependency-manager" time="0.0000" classname="Passes --dependency-manager">
    </testcase>
  </testsuite>
  <testsuite name="runSamCliInit With EventBridgeStartAppTemplate" timestamp="2020-03-31T18:26:44" tests="1" file="/codebuild/output/src956146630/src/dist/src/test/shared/sam/cli/samCliInit.test.js" time="0.0000" failures="0">
    <testcase name="runSamCliInit runSamCliInit With EventBridgeStartAppTemplate Passes --extra-context for eventBridgeStarterAppTemplate" time="0.0000" classname="Passes --extra-context for eventBridgeStarterAppTemplate">
    </testcase>
  </testsuite>
  <testsuite name="DefaultSamCliProcessInvoker" timestamp="2020-03-31T18:26:44" tests="1" file="/codebuild/output/src956146630/src/dist/src/test/shared/sam/cli/samCliInvoker.test.js" time="0.0010" failures="0">
    <testcase name="DefaultSamCliProcessInvoker throws if sam cli location is not known" time="0.0010" classname="throws if sam cli location is not known">
    </testcase>
  </testsuite>
  <testsuite name="logAndThrowIfUnexpectedExitCode" timestamp="2020-03-31T18:26:44" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/shared/sam/cli/samCliInvokerUtils.test.js" time="0.0000" failures="0">
    <testcase name="logAndThrowIfUnexpectedExitCode does not throw on expected exit code" time="0.0000" classname="does not throw on expected exit code">
    </testcase>
    <testcase name="logAndThrowIfUnexpectedExitCode throws on unexpected exit code" time="0.0000" classname="throws on unexpected exit code">
    </testcase>
  </testsuite>
  <testsuite name="SamCliLocalInvokeInvocation" timestamp="2020-03-31T18:26:44" tests="14" file="/codebuild/output/src956146630/src/dist/src/test/shared/sam/cli/samCliLocalInvoke.test.js" time="0.0100" failures="0">
    <testcase name="SamCliLocalInvokeInvocation Passes local invoke command to sam cli" time="0.0010" classname="Passes local invoke command to sam cli">
    </testcase>
    <testcase name="SamCliLocalInvokeInvocation Passes template resource name to sam cli" time="0.0010" classname="Passes template resource name to sam cli">
    </testcase>
    <testcase name="SamCliLocalInvokeInvocation Passes template path to sam cli" time="0.0010" classname="Passes template path to sam cli">
    </testcase>
    <testcase name="SamCliLocalInvokeInvocation Passes event path to sam cli" time="0.0010" classname="Passes event path to sam cli">
    </testcase>
    <testcase name="SamCliLocalInvokeInvocation Passes env-vars path to sam cli" time="0.0000" classname="Passes env-vars path to sam cli">
    </testcase>
    <testcase name="SamCliLocalInvokeInvocation Passes debug port to sam cli" time="0.0010" classname="Passes debug port to sam cli">
    </testcase>
    <testcase name="SamCliLocalInvokeInvocation undefined debug port does not pass to sam cli" time="0.0010" classname="undefined debug port does not pass to sam cli">
    </testcase>
    <testcase name="SamCliLocalInvokeInvocation Passes docker network to sam cli" time="0.0000" classname="Passes docker network to sam cli">
    </testcase>
    <testcase name="SamCliLocalInvokeInvocation Does not pass docker network to sam cli when undefined" time="0.0010" classname="Does not pass docker network to sam cli when undefined">
    </testcase>
    <testcase name="SamCliLocalInvokeInvocation passes --skip-pull-image to sam cli if skipPullImage is true" time="0.0000" classname="passes --skip-pull-image to sam cli if skipPullImage is true">
    </testcase>
    <testcase name="SamCliLocalInvokeInvocation does not pass --skip-pull-image to sam cli if skipPullImage is false" time="0.0000" classname="does not pass --skip-pull-image to sam cli if skipPullImage is false">
    </testcase>
    <testcase name="SamCliLocalInvokeInvocation does not pass --skip-pull-image to sam cli if skipPullImage is undefined" time="0.0010" classname="does not pass --skip-pull-image to sam cli if skipPullImage is undefined">
    </testcase>
    <testcase name="SamCliLocalInvokeInvocation Passes debuggerPath to sam cli" time="0.0010" classname="Passes debuggerPath to sam cli">
    </testcase>
    <testcase name="SamCliLocalInvokeInvocation Does not pass debuggerPath to sam cli when undefined" time="0.0010" classname="Does not pass debuggerPath to sam cli when undefined">
    </testcase>
  </testsuite>
  <testsuite name="SamCliPackageInvocation" timestamp="2020-03-31T18:26:44" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/shared/sam/cli/samCliPackage.test.js" time="0.0000" failures="0">
    <testcase name="SamCliPackageInvocation includes a template, s3 bucket, output template file, and region" time="0.0000" classname="includes a template, s3 bucket, output template file, and region">
    </testcase>
    <testcase name="SamCliPackageInvocation throws on unexpected exit code" time="0.0000" classname="throws on unexpected exit code">
    </testcase>
  </testsuite>
  <testsuite name="makeSamCliValidationNotification" timestamp="2020-03-31T18:26:44" tests="5" file="/codebuild/output/src956146630/src/dist/src/test/shared/sam/cli/samCliValidationNotification.test.js" time="0.0000" failures="0">
    <testcase name="makeSamCliValidationNotification handles SamCliNotFoundError" time="0.0000" classname="handles SamCliNotFoundError">
    </testcase>
    <testcase name="makeSamCliValidationNotification handles InvalidSamCliVersionError - SAM CLI Version is too low" time="0.0000" classname="handles InvalidSamCliVersionError - SAM CLI Version is too low">
    </testcase>
    <testcase name="makeSamCliValidationNotification handles InvalidSamCliVersionError - SAM CLI Version is too high" time="0.0000" classname="handles InvalidSamCliVersionError - SAM CLI Version is too high">
    </testcase>
    <testcase name="makeSamCliValidationNotification handles InvalidSamCliVersionError - SAM CLI Version is unparsable" time="0.0000" classname="handles InvalidSamCliVersionError - SAM CLI Version is unparsable">
    </testcase>
    <testcase name="makeSamCliValidationNotification handles Unexpected input" time="0.0000" classname="handles Unexpected input">
    </testcase>
  </testsuite>
  <testsuite name="DefaultSamCliValidator" timestamp="2020-03-31T18:26:44" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/shared/sam/cli/samCliValidator.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="detectValidSamCli" timestamp="2020-03-31T18:26:44" tests="6" file="/codebuild/output/src956146630/src/dist/src/test/shared/sam/cli/samCliValidator.test.js" time="0.0010" failures="0">
    <testcase name="DefaultSamCliValidator detectValidSamCli handles case where SAM CLI exists and SAM CLI Version is valid" time="0.0010" classname="handles case where SAM CLI exists and SAM CLI Version is valid">
    </testcase>
    <testcase name="DefaultSamCliValidator detectValidSamCli handles case where SAM CLI exists and SAM CLI Version is too low" time="0.0000" classname="handles case where SAM CLI exists and SAM CLI Version is too low">
    </testcase>
    <testcase name="DefaultSamCliValidator detectValidSamCli handles case where SAM CLI exists and SAM CLI Version is too high" time="0.0000" classname="handles case where SAM CLI exists and SAM CLI Version is too high">
    </testcase>
    <testcase name="DefaultSamCliValidator detectValidSamCli handles case where SAM CLI exists and SAM CLI Version is unparsable - empty string" time="0.0000" classname="handles case where SAM CLI exists and SAM CLI Version is unparsable - empty string">
    </testcase>
    <testcase name="DefaultSamCliValidator detectValidSamCli handles case where SAM CLI exists and SAM CLI Version is unparsable - random text" time="0.0000" classname="handles case where SAM CLI exists and SAM CLI Version is unparsable - random text">
    </testcase>
    <testcase name="DefaultSamCliValidator detectValidSamCli handles case where SAM CLI is not found" time="0.0000" classname="handles case where SAM CLI is not found">
    </testcase>
  </testsuite>
  <testsuite name="getVersionValidatorResult" timestamp="2020-03-31T18:26:44" tests="7" file="/codebuild/output/src956146630/src/dist/src/test/shared/sam/cli/samCliValidator.test.js" time="0.0010" failures="0">
    <testcase name="DefaultSamCliValidator getVersionValidatorResult Validates SAM CLI binary for the case: SAM CLI Version is valid" time="0.0000" classname="Validates SAM CLI binary for the case: SAM CLI Version is valid">
    </testcase>
    <testcase name="DefaultSamCliValidator getVersionValidatorResult Validates SAM CLI binary for the case: SAM CLI Version is too low" time="0.0000" classname="Validates SAM CLI binary for the case: SAM CLI Version is too low">
    </testcase>
    <testcase name="DefaultSamCliValidator getVersionValidatorResult Validates SAM CLI binary for the case: SAM CLI Version is too high" time="0.0000" classname="Validates SAM CLI binary for the case: SAM CLI Version is too high">
    </testcase>
    <testcase name="DefaultSamCliValidator getVersionValidatorResult Validates SAM CLI binary for the case: SAM CLI Version is unparsable - empty string" time="0.0000" classname="Validates SAM CLI binary for the case: SAM CLI Version is unparsable - empty string">
    </testcase>
    <testcase name="DefaultSamCliValidator getVersionValidatorResult Validates SAM CLI binary for the case: SAM CLI Version is unparsable - random text" time="0.0000" classname="Validates SAM CLI binary for the case: SAM CLI Version is unparsable - random text">
    </testcase>
    <testcase name="DefaultSamCliValidator getVersionValidatorResult Uses the cached validation result" time="0.0010" classname="Uses the cached validation result">
    </testcase>
    <testcase name="DefaultSamCliValidator getVersionValidatorResult Does not use the cached validation result if the SAM CLI timestamp changed" time="0.0000" classname="Does not use the cached validation result if the SAM CLI timestamp changed">
    </testcase>
  </testsuite>
  <testsuite name="validateSamCliVersion" timestamp="2020-03-31T18:26:44" tests="5" file="/codebuild/output/src956146630/src/dist/src/test/shared/sam/cli/samCliValidator.test.js" time="0.0000" failures="0">
    <testcase name="DefaultSamCliValidator validateSamCliVersion validates when SAM CLI Version is valid" time="0.0000" classname="validates when SAM CLI Version is valid">
    </testcase>
    <testcase name="DefaultSamCliValidator validateSamCliVersion validates when SAM CLI Version is too low" time="0.0000" classname="validates when SAM CLI Version is too low">
    </testcase>
    <testcase name="DefaultSamCliValidator validateSamCliVersion validates when SAM CLI Version is too high" time="0.0000" classname="validates when SAM CLI Version is too high">
    </testcase>
    <testcase name="DefaultSamCliValidator validateSamCliVersion validates when SAM CLI Version is unparsable - empty string" time="0.0000" classname="validates when SAM CLI Version is unparsable - empty string">
    </testcase>
    <testcase name="DefaultSamCliValidator validateSamCliVersion validates when SAM CLI Version is unparsable - random text" time="0.0000" classname="validates when SAM CLI Version is unparsable - random text">
    </testcase>
  </testsuite>
  <testsuite name="AwsSamDebugConfigurationProvider" timestamp="2020-03-31T18:26:44" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/shared/sam/debugger/awsSamDebugConfigurationProvider.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="provideDebugConfig" timestamp="2020-03-31T18:26:44" tests="5" file="/codebuild/output/src956146630/src/dist/src/test/shared/sam/debugger/awsSamDebugConfigurationProvider.test.js" time="0.0140" failures="0">
    <testcase name="AwsSamDebugConfigurationProvider provideDebugConfig returns undefined if no workspace folder is provided" time="0.0010" classname="returns undefined if no workspace folder is provided">
    </testcase>
    <testcase name="AwsSamDebugConfigurationProvider provideDebugConfig returns a blank array if no templates are in the workspace" time="0.0000" classname="returns a blank array if no templates are in the workspace">
    </testcase>
    <testcase name="AwsSamDebugConfigurationProvider provideDebugConfig returns an array with a single item if a template with one resource is in the workspace" time="0.0030" classname="returns an array with a single item if a template with one resource is in the workspace">
    </testcase>
    <testcase name="AwsSamDebugConfigurationProvider provideDebugConfig returns an array with multiple items if a template with more than one resource is in the workspace" time="0.0030" classname="returns an array with multiple items if a template with more than one resource is in the workspace">
    </testcase>
    <testcase name="AwsSamDebugConfigurationProvider provideDebugConfig only detects the specifically targeted workspace folder (and its subfolders)" time="0.0070" classname="only detects the specifically targeted workspace folder (and its subfolders)">
    </testcase>
  </testsuite>
  <testsuite name="resolveDebugConfiguration" timestamp="2020-03-31T18:26:44" tests="9" file="/codebuild/output/src956146630/src/dist/src/test/shared/sam/debugger/awsSamDebugConfigurationProvider.test.js" time="0.0140" failures="0">
    <testcase name="AwsSamDebugConfigurationProvider resolveDebugConfiguration returns undefined when resolving debug configurations with an invalid request type" time="0.0010" classname="returns undefined when resolving debug configurations with an invalid request type">
    </testcase>
    <testcase name="AwsSamDebugConfigurationProvider resolveDebugConfiguration returns undefined when resolving debug configurations with an invalid target type" time="0.0010" classname="returns undefined when resolving debug configurations with an invalid target type">
    </testcase>
    <testcase name="AwsSamDebugConfigurationProvider resolveDebugConfiguration returns undefined when resolving template debug configurations with a template that isn&apos;t in the registry" time="0.0010" classname="returns undefined when resolving template debug configurations with a template that isn&apos;t in the registry">
    </testcase>
    <testcase name="AwsSamDebugConfigurationProvider resolveDebugConfiguration returns undefined when resolving template debug configurations with a template that doesn&apos;t have the set resource" time="0.0020" classname="returns undefined when resolving template debug configurations with a template that doesn&apos;t have the set resource">
    </testcase>
    <testcase name="AwsSamDebugConfigurationProvider resolveDebugConfiguration returns undefined when resolving template debug configurations with a resource that has an invalid runtime in template" time="0.0030" classname="returns undefined when resolving template debug configurations with a resource that has an invalid runtime in template">
    </testcase>
    <testcase name="AwsSamDebugConfigurationProvider resolveDebugConfiguration returns undefined when resolving code debug configurations with invalid runtimes" time="0.0010" classname="returns undefined when resolving code debug configurations with invalid runtimes">
    </testcase>
    <testcase name="AwsSamDebugConfigurationProvider resolveDebugConfiguration TEMP!!! - returns undefined when resolving a valid code debug configuration" time="0.0000" classname="TEMP!!! - returns undefined when resolving a valid code debug configuration">
    </testcase>
    <testcase name="AwsSamDebugConfigurationProvider resolveDebugConfiguration TEMP!!! - returns undefined when resolving a valid template debug configuration" time="0.0020" classname="TEMP!!! - returns undefined when resolving a valid template debug configuration">
    </testcase>
    <testcase name="AwsSamDebugConfigurationProvider resolveDebugConfiguration TEMP!!! - returns undefined when resolving a valid template debug configuration that specifies extraneous environment variables" time="0.0030" classname="TEMP!!! - returns undefined when resolving a valid template debug configuration that specifies extraneous environment variables">
    </testcase>
  </testsuite>
  <testsuite name="SystemUtilities" timestamp="2020-03-31T18:26:44" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/shared/systemUtilities.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="getHomeDirectory" timestamp="2020-03-31T18:26:44" tests="5" file="/codebuild/output/src956146630/src/dist/src/test/shared/systemUtilities.test.js" time="0.0020" failures="0">
    <testcase name="SystemUtilities getHomeDirectory gets HOME if set" time="0.0000" classname="gets HOME if set">
    </testcase>
    <testcase name="SystemUtilities getHomeDirectory gets USERPROFILE if set and HOME is not set" time="0.0000" classname="gets USERPROFILE if set and HOME is not set">
    </testcase>
    <testcase name="SystemUtilities getHomeDirectory gets HOMEPATH if set and HOME and USERPROFILE are not set" time="0.0010" classname="gets HOMEPATH if set and HOME and USERPROFILE are not set">
    </testcase>
    <testcase name="SystemUtilities getHomeDirectory prefixes result with HOMEDRIVE if set" time="0.0000" classname="prefixes result with HOMEDRIVE if set">
    </testcase>
    <testcase name="SystemUtilities getHomeDirectory falls back on os.homedir if no environment variables are set" time="0.0010" classname="falls back on os.homedir if no environment variables are set">
    </testcase>
  </testsuite>
  <testsuite name="fileExists" timestamp="2020-03-31T18:26:44" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/shared/systemUtilities.test.js" time="0.0000" failures="0">
    <testcase name="SystemUtilities fileExists returns true if file exists" time="0.0000" classname="returns true if file exists">
    </testcase>
    <testcase name="SystemUtilities fileExists returns false if file does not exist" time="0.0000" classname="returns false if file does not exist">
    </testcase>
  </testsuite>
  <testsuite name="AwsTelemetryOptOut" timestamp="2020-03-31T18:26:44" tests="4" file="/codebuild/output/src956146630/src/dist/src/test/shared/telemetry/awsTelemetryOptOut.test.js" time="0.0000" failures="0">
    <testcase name="AwsTelemetryOptOut updateTelemetryConfiguration saves settings" time="0.0000" classname="updateTelemetryConfiguration saves settings">
    </testcase>
    <testcase name="AwsTelemetryOptOut updateTelemetryConfiguration(TelemetryOptOutOptions.Enable) enables telemetry" time="0.0000" classname="updateTelemetryConfiguration(TelemetryOptOutOptions.Enable) enables telemetry">
    </testcase>
    <testcase name="AwsTelemetryOptOut updateTelemetryConfiguration(TelemetryOptOutOptions.Disable) disables telemetry" time="0.0000" classname="updateTelemetryConfiguration(TelemetryOptOutOptions.Disable) disables telemetry">
    </testcase>
    <testcase name="AwsTelemetryOptOut updateTelemetryConfiguration(TelemetryOptOutOptions.SameAsVsCode) matches user setting" time="0.0000" classname="updateTelemetryConfiguration(TelemetryOptOutOptions.SameAsVsCode) matches user setting">
    </testcase>
  </testsuite>
  <testsuite name="DefaultTelemetryPublisher" timestamp="2020-03-31T18:26:44" tests="4" file="/codebuild/output/src956146630/src/dist/src/test/shared/telemetry/defaultTelemetryPublisher.test.js" time="0.0010" failures="0">
    <testcase name="DefaultTelemetryPublisher posts feedback" time="0.0000" classname="posts feedback">
    </testcase>
    <testcase name="DefaultTelemetryPublisher enqueues events" time="0.0000" classname="enqueues events">
    </testcase>
    <testcase name="DefaultTelemetryPublisher can flush single event" time="0.0010" classname="can flush single event">
    </testcase>
    <testcase name="DefaultTelemetryPublisher retains queue on flush failure" time="0.0000" classname="retains queue on flush failure">
    </testcase>
  </testsuite>
  <testsuite name="DefaultTelemetryService" timestamp="2020-03-31T18:26:44" tests="10" file="/codebuild/output/src956146630/src/dist/src/test/shared/telemetry/defaultTelemetryService.test.js" time="0.0050" failures="0">
    <testcase name="DefaultTelemetryService posts feedback" time="0.0000" classname="posts feedback">
    </testcase>
    <testcase name="DefaultTelemetryService publishes periodically if user has said ok" time="0.0020" classname="publishes periodically if user has said ok">
    </testcase>
    <testcase name="DefaultTelemetryService events are kept in memory if user has not made a decision" time="0.0000" classname="events are kept in memory if user has not made a decision">
    </testcase>
    <testcase name="DefaultTelemetryService events automatically inject the active account id into the metadata" time="0.0000" classname="events automatically inject the active account id into the metadata">
    </testcase>
    <testcase name="DefaultTelemetryService events with `session` namespace do not have an account tied to them" time="0.0000" classname="events with `session` namespace do not have an account tied to them">
    </testcase>
    <testcase name="DefaultTelemetryService events created with a bad active account produce metadata mentioning the bad account" time="0.0010" classname="events created with a bad active account produce metadata mentioning the bad account">
    </testcase>
    <testcase name="DefaultTelemetryService events created prior to signing in do not have an account attached" time="0.0000" classname="events created prior to signing in do not have an account attached">
    </testcase>
    <testcase name="DefaultTelemetryService events are never recorded if telemetry has been disabled" time="0.0000" classname="events are never recorded if telemetry has been disabled">
    </testcase>
    <testcase name="DefaultTelemetryService events are cleared after user disables telemetry via prompt" time="0.0010" classname="events are cleared after user disables telemetry via prompt">
    </testcase>
    <testcase name="DefaultTelemetryService events are kept after user enables telemetry via prompt" time="0.0010" classname="events are kept after user enables telemetry via prompt">
    </testcase>
  </testsuite>
  <testsuite name="Telemetry cache" timestamp="2020-03-31T18:26:44" tests="4" file="/codebuild/output/src956146630/src/dist/src/test/shared/telemetry/telemetryCache.test.js" time="0.0010" failures="0">
    <testcase name="Telemetry cache Rejects bad data" time="0.0010" classname="Rejects bad data">
    </testcase>
    <testcase name="Telemetry cache Filters out old data" time="0.0000" classname="Filters out old data">
    </testcase>
    <testcase name="Telemetry cache Extracts good data when there is bad data present" time="0.0000" classname="Extracts good data when there is bad data present">
    </testcase>
    <testcase name="Telemetry cache Happy path" time="0.0000" classname="Happy path">
    </testcase>
  </testsuite>
  <testsuite name="TelemetryEventArray" timestamp="2020-03-31T18:26:44" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/shared/telemetry/telemetryEvent.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="toMetricData" timestamp="2020-03-31T18:26:44" tests="5" file="/codebuild/output/src956146630/src/dist/src/test/shared/telemetry/telemetryEvent.test.js" time="0.0000" failures="0">
    <testcase name="TelemetryEventArray toMetricData strips names of invalid characters" time="0.0000" classname="strips names of invalid characters">
    </testcase>
    <testcase name="TelemetryEventArray toMetricData maps TelemetryEvent with no data to a single MetricDatum" time="0.0000" classname="maps TelemetryEvent with no data to a single MetricDatum">
    </testcase>
    <testcase name="TelemetryEventArray toMetricData Rejects entries that have null Value" time="0.0000" classname="Rejects entries that have null Value">
    </testcase>
    <testcase name="TelemetryEventArray toMetricData Rejects entries that have null MetricName" time="0.0000" classname="Rejects entries that have null MetricName">
    </testcase>
    <testcase name="TelemetryEventArray toMetricData maps TelemetryEvent with data to a multiple MetricDatum" time="0.0000" classname="maps TelemetryEvent with data to a multiple MetricDatum">
    </testcase>
  </testsuite>
  <testsuite name="ErrorNode" timestamp="2020-03-31T18:26:44" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/shared/treeview/nodes/errorNode.test.js" time="0.0010" failures="0">
    <testcase name="ErrorNode initializes label and tooltip" time="0.0010" classname="initializes label and tooltip">
    </testcase>
    <testcase name="ErrorNode has no children" time="0.0000" classname="has no children">
    </testcase>
  </testsuite>
  <testsuite name="makeChildrenNodes" timestamp="2020-03-31T18:26:44" tests="6" file="/codebuild/output/src956146630/src/dist/src/test/shared/treeview/treeNodeUtilities.test.js" time="0.0020" failures="0">
    <testcase name="makeChildrenNodes returns child nodes" time="0.0000" classname="returns child nodes">
    </testcase>
    <testcase name="makeChildrenNodes returns an error node if an error is encountered" time="0.0000" classname="returns an error node if an error is encountered">
    </testcase>
    <testcase name="makeChildrenNodes returns a placeholder node if there are no child nodes" time="0.0010" classname="returns a placeholder node if there are no child nodes">
    </testcase>
    <testcase name="makeChildrenNodes returns an empty list if there are no child nodes and no placeholder" time="0.0000" classname="returns an empty list if there are no child nodes and no placeholder">
    </testcase>
    <testcase name="makeChildrenNodes sorts the child nodes" time="0.0010" classname="sorts the child nodes">
    </testcase>
    <testcase name="makeChildrenNodes does not sort the child nodes if a sort method is not provided" time="0.0000" classname="does not sort the child nodes if a sort method is not provided">
    </testcase>
  </testsuite>
  <testsuite name="UI buttons" timestamp="2020-03-31T18:26:44" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/shared/ui/buttons.test.js" time="0.0000" failures="0">
    <testcase name="UI buttons creates a help button without a tooltip" time="0.0000" classname="creates a help button without a tooltip">
    </testcase>
    <testcase name="UI buttons creates a help button with a tooltip" time="0.0000" classname="creates a help button with a tooltip">
    </testcase>
  </testsuite>
  <testsuite name="createInputBox" timestamp="2020-03-31T18:26:44" tests="5" file="/codebuild/output/src956146630/src/dist/src/test/shared/ui/input.test.js" time="0.0010" failures="0">
    <testcase name="createInputBox Sets buttons" time="0.0000" classname="Sets buttons">
    </testcase>
    <testcase name="createInputBox Sets Options" time="0.0010" classname="Sets Options">
    </testcase>
    <testcase name="createInputBox Sets boolean Options to false values" time="0.0000" classname="Sets boolean Options to false values">
    </testcase>
    <testcase name="createInputBox Sets Options to undefined values" time="0.0000" classname="Sets Options to undefined values">
    </testcase>
    <testcase name="createInputBox Does not set Options" time="0.0000" classname="Does not set Options">
    </testcase>
  </testsuite>
  <testsuite name="promptUser" timestamp="2020-03-31T18:26:44" tests="5" file="/codebuild/output/src956146630/src/dist/src/test/shared/ui/input.test.js" time="0.0010" failures="0">
    <testcase name="promptUser Accepted value is returned" time="0.0000" classname="Accepted value is returned">
    </testcase>
    <testcase name="promptUser Hide returns undefined" time="0.0000" classname="Hide returns undefined">
    </testcase>
    <testcase name="promptUser Button can cancel and return undefined" time="0.0010" classname="Button can cancel and return undefined">
    </testcase>
    <testcase name="promptUser Button can return a value" time="0.0000" classname="Button can return a value">
    </testcase>
    <testcase name="promptUser Button can do something and leave input box open" time="0.0000" classname="Button can do something and leave input box open">
    </testcase>
  </testsuite>
  <testsuite name="createQuickPick" timestamp="2020-03-31T18:26:44" tests="7" file="/codebuild/output/src956146630/src/dist/src/test/shared/ui/picker.test.js" time="0.0000" failures="0">
    <testcase name="createQuickPick Sets items" time="0.0000" classname="Sets items">
    </testcase>
    <testcase name="createQuickPick Sets item options" time="0.0000" classname="Sets item options">
    </testcase>
    <testcase name="createQuickPick Sets buttons" time="0.0000" classname="Sets buttons">
    </testcase>
    <testcase name="createQuickPick Sets Options" time="0.0000" classname="Sets Options">
    </testcase>
    <testcase name="createQuickPick Sets boolean Options to false values" time="0.0000" classname="Sets boolean Options to false values">
    </testcase>
    <testcase name="createQuickPick Sets Options to undefined values" time="0.0000" classname="Sets Options to undefined values">
    </testcase>
    <testcase name="createQuickPick Does not set Options" time="0.0000" classname="Does not set Options">
    </testcase>
  </testsuite>
  <testsuite name="promptUser" timestamp="2020-03-31T18:26:44" tests="5" file="/codebuild/output/src956146630/src/dist/src/test/shared/ui/picker.test.js" time="0.0000" failures="0">
    <testcase name="promptUser Accepted value is returned" time="0.0000" classname="Accepted value is returned">
    </testcase>
    <testcase name="promptUser Hide returns undefined" time="0.0000" classname="Hide returns undefined">
    </testcase>
    <testcase name="promptUser Button can cancel and return undefined" time="0.0000" classname="Button can cancel and return undefined">
    </testcase>
    <testcase name="promptUser Button can return a value" time="0.0000" classname="Button can return a value">
    </testcase>
    <testcase name="promptUser Button can do something and leave picker open" time="0.0000" classname="Button can do something and leave picker open">
    </testcase>
  </testsuite>
  <testsuite name="ChildProcess" timestamp="2020-03-31T18:26:44" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/childProcess.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="run" timestamp="2020-03-31T18:26:44" tests="4" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/childProcess.test.js" time="0.0610" failures="0">
    <testcase name="ChildProcess run runs and captures stdout - unix" time="0.0150" classname="runs and captures stdout - unix">
    </testcase>
    <testcase name="ChildProcess run errs when starting twice - unix" time="0.0160" classname="errs when starting twice - unix">
    </testcase>
    <testcase name="ChildProcess run runs scripts containing a space in the filename and folder" time="0.0160" classname="runs scripts containing a space in the filename and folder">
    </testcase>
    <testcase name="ChildProcess run reports error for missing executable" time="0.0140" classname="reports error for missing executable">
    </testcase>
  </testsuite>
  <testsuite name="start" timestamp="2020-03-31T18:26:44" tests="4" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/childProcess.test.js" time="0.0630" failures="0">
    <testcase name="ChildProcess start runs and captures stdout - unix" time="0.0180" classname="runs and captures stdout - unix">
    </testcase>
    <testcase name="ChildProcess start errs when starting twice - unix" time="0.0140" classname="errs when starting twice - unix">
    </testcase>
    <testcase name="ChildProcess start runs scripts containing a space in the filename and folder" time="0.0150" classname="runs scripts containing a space in the filename and folder">
    </testcase>
    <testcase name="ChildProcess start reports error for missing executable" time="0.0160" classname="reports error for missing executable">
    </testcase>
  </testsuite>
  <testsuite name="kill &amp; killed" timestamp="2020-03-31T18:26:44" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/childProcess.test.js" time="0.4340" failures="0">
    <testcase name="ChildProcess kill &amp; killed detects running processes and successfully sends a kill signal to a running process - Unix" time="0.1140" classname="detects running processes and successfully sends a kill signal to a running process - Unix">
    </testcase>
    <testcase name="ChildProcess kill &amp; killed can not kill previously killed processes - Unix" time="0.3200" classname="can not kill previously killed processes - Unix">
    </testcase>
  </testsuite>
  <testsuite name="CollectionUtils" timestamp="2020-03-31T18:26:45" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/collectionUtils.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="union" timestamp="2020-03-31T18:26:45" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/collectionUtils.test.js" time="0.0000" failures="0">
    <testcase name="CollectionUtils union returns an empty set if both inputs are empty" time="0.0000" classname="returns an empty set if both inputs are empty">
    </testcase>
    <testcase name="CollectionUtils union includes all elements from both inputs" time="0.0000" classname="includes all elements from both inputs">
    </testcase>
  </testsuite>
  <testsuite name="intersection" timestamp="2020-03-31T18:26:45" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/collectionUtils.test.js" time="0.0000" failures="0">
    <testcase name="CollectionUtils intersection returns an empty set if both insputs are empty" time="0.0000" classname="returns an empty set if both insputs are empty">
    </testcase>
    <testcase name="CollectionUtils intersection returns an empty set if inputs have no elements in common" time="0.0000" classname="returns an empty set if inputs have no elements in common">
    </testcase>
    <testcase name="CollectionUtils intersection returns only elements that are present in both inputs" time="0.0000" classname="returns only elements that are present in both inputs">
    </testcase>
  </testsuite>
  <testsuite name="difference" timestamp="2020-03-31T18:26:45" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/collectionUtils.test.js" time="0.0000" failures="0">
    <testcase name="CollectionUtils difference returns an empty set if the first input is empty" time="0.0000" classname="returns an empty set if the first input is empty">
    </testcase>
    <testcase name="CollectionUtils difference returns the elements in the first input if the second input is empty" time="0.0000" classname="returns the elements in the first input if the second input is empty">
    </testcase>
    <testcase name="CollectionUtils difference does not return elements that are present in the second input" time="0.0000" classname="does not return elements that are present in the second input">
    </testcase>
  </testsuite>
  <testsuite name="complement" timestamp="2020-03-31T18:26:45" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/collectionUtils.test.js" time="0.0000" failures="0">
    <testcase name="CollectionUtils complement returns an empty set if the second input is empty" time="0.0000" classname="returns an empty set if the second input is empty">
    </testcase>
    <testcase name="CollectionUtils complement returns the elements in the second input if the first input is empty" time="0.0000" classname="returns the elements in the second input if the first input is empty">
    </testcase>
    <testcase name="CollectionUtils complement does not return elements that are present in the first input" time="0.0000" classname="does not return elements that are present in the first input">
    </testcase>
  </testsuite>
  <testsuite name="toArrayAsync" timestamp="2020-03-31T18:26:45" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/collectionUtils.test.js" time="0.0010" failures="0">
    <testcase name="CollectionUtils toArrayAsync returns an empty array if input is empty" time="0.0000" classname="returns an empty array if input is empty">
    </testcase>
    <testcase name="CollectionUtils toArrayAsync returns each item in input" time="0.0010" classname="returns each item in input">
    </testcase>
  </testsuite>
  <testsuite name="toMap" timestamp="2020-03-31T18:26:45" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/collectionUtils.test.js" time="0.0000" failures="0">
    <testcase name="CollectionUtils toMap returns an empty map if the input is empty" time="0.0000" classname="returns an empty map if the input is empty">
    </testcase>
    <testcase name="CollectionUtils toMap uses selector to choose keys" time="0.0000" classname="uses selector to choose keys">
    </testcase>
    <testcase name="CollectionUtils toMap throws an error on duplicate keys" time="0.0000" classname="throws an error on duplicate keys">
    </testcase>
  </testsuite>
  <testsuite name="toMapAsync" timestamp="2020-03-31T18:26:45" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/collectionUtils.test.js" time="0.0000" failures="0">
    <testcase name="CollectionUtils toMapAsync returns an empty map if the input is empty" time="0.0000" classname="returns an empty map if the input is empty">
    </testcase>
    <testcase name="CollectionUtils toMapAsync uses selector to choose keys" time="0.0000" classname="uses selector to choose keys">
    </testcase>
    <testcase name="CollectionUtils toMapAsync throws an error on duplicate keys" time="0.0000" classname="throws an error on duplicate keys">
    </testcase>
  </testsuite>
  <testsuite name="updateInPlace" timestamp="2020-03-31T18:26:45" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/collectionUtils.test.js" time="0.0000" failures="0">
    <testcase name="CollectionUtils updateInPlace removes items that are present in the original map, but not the input" time="0.0000" classname="removes items that are present in the original map, but not the input">
    </testcase>
    <testcase name="CollectionUtils updateInPlace updates items that are present in both the original map and the input" time="0.0000" classname="updates items that are present in both the original map and the input">
    </testcase>
    <testcase name="CollectionUtils updateInPlace adds items that are present in the input, but not the original map" time="0.0000" classname="adds items that are present in the input, but not the original map">
    </testcase>
  </testsuite>
  <testsuite name="first" timestamp="2020-03-31T18:26:45" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/collectionUtils.test.js" time="0.0000" failures="0">
    <testcase name="CollectionUtils first returns the first item the sequence is not empty" time="0.0000" classname="returns the first item the sequence is not empty">
    </testcase>
    <testcase name="CollectionUtils first returns undefined if the sequence is empty" time="0.0000" classname="returns undefined if the sequence is empty">
    </testcase>
    <testcase name="CollectionUtils first lazily iterates the sequence" time="0.0000" classname="lazily iterates the sequence">
    </testcase>
  </testsuite>
  <testsuite name="take" timestamp="2020-03-31T18:26:45" tests="5" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/collectionUtils.test.js" time="0.0010" failures="0">
    <testcase name="CollectionUtils take returns the first &lt;count&gt; items if sequence contains at least that many items" time="0.0000" classname="returns the first &lt;count&gt; items if sequence contains at least that many items">
    </testcase>
    <testcase name="CollectionUtils take returns the first &lt;sequence.length&gt; items if sequence contains fewer than &lt;count&gt; items" time="0.0000" classname="returns the first &lt;sequence.length&gt; items if sequence contains fewer than &lt;count&gt; items">
    </testcase>
    <testcase name="CollectionUtils take returns an empty array if sequence is empty" time="0.0010" classname="returns an empty array if sequence is empty">
    </testcase>
    <testcase name="CollectionUtils take returns an empty array if count is 0" time="0.0000" classname="returns an empty array if count is 0">
    </testcase>
    <testcase name="CollectionUtils take lazily iterates the sequence" time="0.0000" classname="lazily iterates the sequence">
    </testcase>
  </testsuite>
  <testsuite name="filter" timestamp="2020-03-31T18:26:45" tests="1" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/collectionUtils.test.js" time="0.0000" failures="0">
    <testcase name="CollectionUtils filter returns the original sequence filtered by the predicate" time="0.0000" classname="returns the original sequence filtered by the predicate">
    </testcase>
  </testsuite>
  <testsuite name="filterAsync" timestamp="2020-03-31T18:26:45" tests="1" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/collectionUtils.test.js" time="0.0000" failures="0">
    <testcase name="CollectionUtils filterAsync returns the original sequence filtered by the predicate" time="0.0000" classname="returns the original sequence filtered by the predicate">
    </testcase>
  </testsuite>
  <testsuite name="DisposableFiles" timestamp="2020-03-31T18:26:45" tests="4" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/disposableFiles.test.js" time="0.0090" failures="0">
    <testcase name="DisposableFiles deletes file on dispose" time="0.0020" classname="deletes file on dispose">
    </testcase>
    <testcase name="DisposableFiles deletes folder on dispose" time="0.0010" classname="deletes folder on dispose">
    </testcase>
    <testcase name="DisposableFiles deletes folder containing contents on dispose" time="0.0040" classname="deletes folder containing contents on dispose">
    </testcase>
    <testcase name="DisposableFiles is okay deleting a parent folder before a child folder" time="0.0020" classname="is okay deleting a parent folder before a child folder">
    </testcase>
  </testsuite>
  <testsuite name="ExtensionDisposableFiles" timestamp="2020-03-31T18:26:45" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/disposableFiles.test.js" time="0.0040" failures="0">
    <testcase name="ExtensionDisposableFiles getInstance throws error if not initialized" time="0.0020" classname="getInstance throws error if not initialized">
    </testcase>
    <testcase name="ExtensionDisposableFiles cannot be initialized twice" time="0.0010" classname="cannot be initialized twice">
    </testcase>
    <testcase name="ExtensionDisposableFiles creates temp folder on initialization" time="0.0010" classname="creates temp folder on initialization">
    </testcase>
  </testsuite>
  <testsuite name="getNormalizedRelativePath" timestamp="2020-03-31T18:26:45" tests="1" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/pathUtils.test.js" time="0.0000" failures="0">
    <testcase name="getNormalizedRelativePath returns expected path" time="0.0000" classname="returns expected path">
    </testcase>
  </testsuite>
  <testsuite name="normalizeSeparator" timestamp="2020-03-31T18:26:45" tests="1" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/pathUtils.test.js" time="0.0000" failures="0">
    <testcase name="normalizeSeparator normalizes separators" time="0.0000" classname="normalizes separators">
    </testcase>
  </testsuite>
  <testsuite name="dirnameWithTrailingSlash" timestamp="2020-03-31T18:26:45" tests="1" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/pathUtils.test.js" time="0.0000" failures="0">
    <testcase name="dirnameWithTrailingSlash Adds a trailing slash to a parent folder" time="0.0000" classname="Adds a trailing slash to a parent folder">
    </testcase>
  </testsuite>
  <testsuite name="PromiseSharer" timestamp="2020-03-31T18:26:45" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/promiseutilities.test.js" time="0.0000" failures="0">
    <testcase name="PromiseSharer joins promises" time="0.0000" classname="joins promises">
    </testcase>
    <testcase name="PromiseSharer does not join different promises" time="0.0000" classname="does not join different promises">
    </testcase>
    <testcase name="PromiseSharer starts a new promise if previous one completed" time="0.0000" classname="starts a new promise if previous one completed">
    </testcase>
  </testsuite>
  <testsuite name="symbolUtilities" timestamp="2020-03-31T18:26:45" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/symbolUtilities.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="loadSymbols" timestamp="2020-03-31T18:26:45" tests="4" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/symbolUtilities.test.js" time="1.4940" failures="0">
    <testcase name="symbolUtilities loadSymbols returns symbols if available" time="0.0000" classname="returns symbols if available">
    </testcase>
    <testcase name="symbolUtilities loadSymbols does not retry if maxRetries is 0" time="0.0000" classname="does not retry if maxRetries is 0">
    </testcase>
    <testcase name="symbolUtilities loadSymbols retries if maxRetries is non-zero" time="0.4960" classname="retries if maxRetries is non-zero">
    </testcase>
    <testcase name="symbolUtilities loadSymbols returns undefined if all retries fail" time="0.9980" classname="returns undefined if all retries fail">
    </testcase>
  </testsuite>
  <testsuite name="getChildrenRange" timestamp="2020-03-31T18:26:47" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/symbolUtilities.test.js" time="0.0000" failures="0">
    <testcase name="symbolUtilities getChildrenRange returns the range for the child if exactly one child is found" time="0.0000" classname="returns the range for the child if exactly one child is found">
    </testcase>
    <testcase name="symbolUtilities getChildrenRange returns the range for all children if multiple children are found" time="0.0000" classname="returns the range for all children if multiple children are found">
    </testcase>
    <testcase name="symbolUtilities getChildrenRange returns the range for the entire symbol if no children are found" time="0.0000" classname="returns the range for the entire symbol if no children are found">
    </testcase>
  </testsuite>
  <testsuite name="removeAnsi" timestamp="2020-03-31T18:26:47" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/textUtilities.test.js" time="0.0000" failures="0">
    <testcase name="removeAnsi removes ansi code from text" time="0.0000" classname="removes ansi code from text">
    </testcase>
    <testcase name="removeAnsi text without ansi code remains as-is" time="0.0000" classname="text without ansi code remains as-is">
    </testcase>
  </testsuite>
  <testsuite name="getStringHash" timestamp="2020-03-31T18:26:47" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/textUtilities.test.js" time="0.0000" failures="0">
    <testcase name="getStringHash produces a hash" time="0.0000" classname="produces a hash">
    </testcase>
    <testcase name="getStringHash produces a different hash for different strings" time="0.0000" classname="produces a different hash for different strings">
    </testcase>
  </testsuite>
  <testsuite name="timeoutUtils" timestamp="2020-03-31T18:26:47" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/timeoutUtils.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Timeout" timestamp="1970-01-01T00:00:00" tests="6" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/timeoutUtils.test.js" time="0.0000" failures="0">
    <testcase name="timeoutUtils Timeout returns &gt; 0 if the timer is still active" time="0.0000" classname="returns &gt; 0 if the timer is still active">
    </testcase>
    <testcase name="timeoutUtils Timeout returns 0 if timer is expired" time="0.0000" classname="returns 0 if timer is expired">
    </testcase>
    <testcase name="timeoutUtils Timeout returns a Promise if a timer is active" time="0.0000" classname="returns a Promise if a timer is active">
    </testcase>
    <testcase name="timeoutUtils Timeout timer object rejects if a timer is expired" time="0.0000" classname="timer object rejects if a timer is expired">
    </testcase>
    <testcase name="timeoutUtils Timeout successfully kills active timers" time="0.0000" classname="successfully kills active timers">
    </testcase>
    <testcase name="timeoutUtils Timeout correctly reports an elapsed time" time="0.0000" classname="correctly reports an elapsed time">
    </testcase>
  </testsuite>
  <testsuite name="getChannelLogger" timestamp="2020-03-31T18:26:47" tests="1" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/vsCodeUtils.test.js" time="0.0000" failures="0">
    <testcase name="getChannelLogger should expose output channel" time="0.0000" classname="should expose output channel">
    </testcase>
  </testsuite>
  <testsuite name="log level verbose" timestamp="2020-03-31T18:26:47" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/vsCodeUtils.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="logs w/o template params" timestamp="2020-03-31T18:26:47" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/vsCodeUtils.test.js" time="0.0000" failures="0">
    <testcase name="getChannelLogger log level verbose logs w/o template params writes to the logger" time="0.0000" classname="writes to the logger">
    </testcase>
    <testcase name="getChannelLogger log level verbose logs w/o template params writes to the output channel" time="0.0000" classname="writes to the output channel">
    </testcase>
    <testcase name="getChannelLogger log level verbose logs w/o template params processTemplate handles this scenario" time="0.0000" classname="processTemplate handles this scenario">
    </testcase>
  </testsuite>
  <testsuite name="logs with 1 string template param" timestamp="2020-03-31T18:26:47" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/vsCodeUtils.test.js" time="0.0000" failures="0">
    <testcase name="getChannelLogger log level verbose logs with 1 string template param writes to the logger" time="0.0000" classname="writes to the logger">
    </testcase>
    <testcase name="getChannelLogger log level verbose logs with 1 string template param writes to the output channel" time="0.0000" classname="writes to the output channel">
    </testcase>
    <testcase name="getChannelLogger log level verbose logs with 1 string template param processTemplate handles this scenario" time="0.0000" classname="processTemplate handles this scenario">
    </testcase>
  </testsuite>
  <testsuite name="logs with 2 string template params" timestamp="2020-03-31T18:26:47" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/vsCodeUtils.test.js" time="0.0000" failures="0">
    <testcase name="getChannelLogger log level verbose logs with 2 string template params writes to the logger" time="0.0000" classname="writes to the logger">
    </testcase>
    <testcase name="getChannelLogger log level verbose logs with 2 string template params writes to the output channel" time="0.0000" classname="writes to the output channel">
    </testcase>
    <testcase name="getChannelLogger log level verbose logs with 2 string template params processTemplate handles this scenario" time="0.0000" classname="processTemplate handles this scenario">
    </testcase>
  </testsuite>
  <testsuite name="logs with 3 string template params" timestamp="2020-03-31T18:26:47" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/vsCodeUtils.test.js" time="0.0000" failures="0">
    <testcase name="getChannelLogger log level verbose logs with 3 string template params writes to the logger" time="0.0000" classname="writes to the logger">
    </testcase>
    <testcase name="getChannelLogger log level verbose logs with 3 string template params writes to the output channel" time="0.0000" classname="writes to the output channel">
    </testcase>
    <testcase name="getChannelLogger log level verbose logs with 3 string template params processTemplate handles this scenario" time="0.0000" classname="processTemplate handles this scenario">
    </testcase>
  </testsuite>
  <testsuite name="logs with 2 template params: errro, string" timestamp="2020-03-31T18:26:47" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/vsCodeUtils.test.js" time="0.0010" failures="0">
    <testcase name="getChannelLogger log level verbose logs with 2 template params: errro, string writes to the logger" time="0.0000" classname="writes to the logger">
    </testcase>
    <testcase name="getChannelLogger log level verbose logs with 2 template params: errro, string writes to the output channel" time="0.0010" classname="writes to the output channel">
    </testcase>
    <testcase name="getChannelLogger log level verbose logs with 2 template params: errro, string processTemplate handles this scenario" time="0.0000" classname="processTemplate handles this scenario">
    </testcase>
  </testsuite>
  <testsuite name="logs with 2 template params: error, error" timestamp="2020-03-31T18:26:47" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/vsCodeUtils.test.js" time="0.0000" failures="0">
    <testcase name="getChannelLogger log level verbose logs with 2 template params: error, error writes to the logger" time="0.0000" classname="writes to the logger">
    </testcase>
    <testcase name="getChannelLogger log level verbose logs with 2 template params: error, error writes to the output channel" time="0.0000" classname="writes to the output channel">
    </testcase>
    <testcase name="getChannelLogger log level verbose logs with 2 template params: error, error processTemplate handles this scenario" time="0.0000" classname="processTemplate handles this scenario">
    </testcase>
  </testsuite>
  <testsuite name="logs with 3 template params: string, error, error" timestamp="2020-03-31T18:26:47" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/vsCodeUtils.test.js" time="0.0000" failures="0">
    <testcase name="getChannelLogger log level verbose logs with 3 template params: string, error, error writes to the logger" time="0.0000" classname="writes to the logger">
    </testcase>
    <testcase name="getChannelLogger log level verbose logs with 3 template params: string, error, error writes to the output channel" time="0.0000" classname="writes to the output channel">
    </testcase>
    <testcase name="getChannelLogger log level verbose logs with 3 template params: string, error, error processTemplate handles this scenario" time="0.0000" classname="processTemplate handles this scenario">
    </testcase>
  </testsuite>
  <testsuite name="log level debug" timestamp="2020-03-31T18:26:47" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/vsCodeUtils.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="logs w/o template params" timestamp="2020-03-31T18:26:47" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/vsCodeUtils.test.js" time="0.0000" failures="0">
    <testcase name="getChannelLogger log level debug logs w/o template params writes to the logger" time="0.0000" classname="writes to the logger">
    </testcase>
    <testcase name="getChannelLogger log level debug logs w/o template params writes to the output channel" time="0.0000" classname="writes to the output channel">
    </testcase>
    <testcase name="getChannelLogger log level debug logs w/o template params processTemplate handles this scenario" time="0.0000" classname="processTemplate handles this scenario">
    </testcase>
  </testsuite>
  <testsuite name="logs with 1 string template param" timestamp="2020-03-31T18:26:47" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/vsCodeUtils.test.js" time="0.0000" failures="0">
    <testcase name="getChannelLogger log level debug logs with 1 string template param writes to the logger" time="0.0000" classname="writes to the logger">
    </testcase>
    <testcase name="getChannelLogger log level debug logs with 1 string template param writes to the output channel" time="0.0000" classname="writes to the output channel">
    </testcase>
    <testcase name="getChannelLogger log level debug logs with 1 string template param processTemplate handles this scenario" time="0.0000" classname="processTemplate handles this scenario">
    </testcase>
  </testsuite>
  <testsuite name="logs with 2 string template params" timestamp="2020-03-31T18:26:47" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/vsCodeUtils.test.js" time="0.0000" failures="0">
    <testcase name="getChannelLogger log level debug logs with 2 string template params writes to the logger" time="0.0000" classname="writes to the logger">
    </testcase>
    <testcase name="getChannelLogger log level debug logs with 2 string template params writes to the output channel" time="0.0000" classname="writes to the output channel">
    </testcase>
    <testcase name="getChannelLogger log level debug logs with 2 string template params processTemplate handles this scenario" time="0.0000" classname="processTemplate handles this scenario">
    </testcase>
  </testsuite>
  <testsuite name="logs with 3 string template params" timestamp="2020-03-31T18:26:47" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/vsCodeUtils.test.js" time="0.0000" failures="0">
    <testcase name="getChannelLogger log level debug logs with 3 string template params writes to the logger" time="0.0000" classname="writes to the logger">
    </testcase>
    <testcase name="getChannelLogger log level debug logs with 3 string template params writes to the output channel" time="0.0000" classname="writes to the output channel">
    </testcase>
    <testcase name="getChannelLogger log level debug logs with 3 string template params processTemplate handles this scenario" time="0.0000" classname="processTemplate handles this scenario">
    </testcase>
  </testsuite>
  <testsuite name="logs with 2 template params: errro, string" timestamp="2020-03-31T18:26:47" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/vsCodeUtils.test.js" time="0.0000" failures="0">
    <testcase name="getChannelLogger log level debug logs with 2 template params: errro, string writes to the logger" time="0.0000" classname="writes to the logger">
    </testcase>
    <testcase name="getChannelLogger log level debug logs with 2 template params: errro, string writes to the output channel" time="0.0000" classname="writes to the output channel">
    </testcase>
    <testcase name="getChannelLogger log level debug logs with 2 template params: errro, string processTemplate handles this scenario" time="0.0000" classname="processTemplate handles this scenario">
    </testcase>
  </testsuite>
  <testsuite name="logs with 2 template params: error, error" timestamp="2020-03-31T18:26:47" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/vsCodeUtils.test.js" time="0.0000" failures="0">
    <testcase name="getChannelLogger log level debug logs with 2 template params: error, error writes to the logger" time="0.0000" classname="writes to the logger">
    </testcase>
    <testcase name="getChannelLogger log level debug logs with 2 template params: error, error writes to the output channel" time="0.0000" classname="writes to the output channel">
    </testcase>
    <testcase name="getChannelLogger log level debug logs with 2 template params: error, error processTemplate handles this scenario" time="0.0000" classname="processTemplate handles this scenario">
    </testcase>
  </testsuite>
  <testsuite name="logs with 3 template params: string, error, error" timestamp="2020-03-31T18:26:47" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/vsCodeUtils.test.js" time="0.0000" failures="0">
    <testcase name="getChannelLogger log level debug logs with 3 template params: string, error, error writes to the logger" time="0.0000" classname="writes to the logger">
    </testcase>
    <testcase name="getChannelLogger log level debug logs with 3 template params: string, error, error writes to the output channel" time="0.0000" classname="writes to the output channel">
    </testcase>
    <testcase name="getChannelLogger log level debug logs with 3 template params: string, error, error processTemplate handles this scenario" time="0.0000" classname="processTemplate handles this scenario">
    </testcase>
  </testsuite>
  <testsuite name="log level info" timestamp="2020-03-31T18:26:47" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/vsCodeUtils.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="logs w/o template params" timestamp="2020-03-31T18:26:47" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/vsCodeUtils.test.js" time="0.0000" failures="0">
    <testcase name="getChannelLogger log level info logs w/o template params writes to the logger" time="0.0000" classname="writes to the logger">
    </testcase>
    <testcase name="getChannelLogger log level info logs w/o template params writes to the output channel" time="0.0000" classname="writes to the output channel">
    </testcase>
    <testcase name="getChannelLogger log level info logs w/o template params processTemplate handles this scenario" time="0.0000" classname="processTemplate handles this scenario">
    </testcase>
  </testsuite>
  <testsuite name="logs with 1 string template param" timestamp="2020-03-31T18:26:47" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/vsCodeUtils.test.js" time="0.0000" failures="0">
    <testcase name="getChannelLogger log level info logs with 1 string template param writes to the logger" time="0.0000" classname="writes to the logger">
    </testcase>
    <testcase name="getChannelLogger log level info logs with 1 string template param writes to the output channel" time="0.0000" classname="writes to the output channel">
    </testcase>
    <testcase name="getChannelLogger log level info logs with 1 string template param processTemplate handles this scenario" time="0.0000" classname="processTemplate handles this scenario">
    </testcase>
  </testsuite>
  <testsuite name="logs with 2 string template params" timestamp="2020-03-31T18:26:47" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/vsCodeUtils.test.js" time="0.0000" failures="0">
    <testcase name="getChannelLogger log level info logs with 2 string template params writes to the logger" time="0.0000" classname="writes to the logger">
    </testcase>
    <testcase name="getChannelLogger log level info logs with 2 string template params writes to the output channel" time="0.0000" classname="writes to the output channel">
    </testcase>
    <testcase name="getChannelLogger log level info logs with 2 string template params processTemplate handles this scenario" time="0.0000" classname="processTemplate handles this scenario">
    </testcase>
  </testsuite>
  <testsuite name="logs with 3 string template params" timestamp="2020-03-31T18:26:47" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/vsCodeUtils.test.js" time="0.0000" failures="0">
    <testcase name="getChannelLogger log level info logs with 3 string template params writes to the logger" time="0.0000" classname="writes to the logger">
    </testcase>
    <testcase name="getChannelLogger log level info logs with 3 string template params writes to the output channel" time="0.0000" classname="writes to the output channel">
    </testcase>
    <testcase name="getChannelLogger log level info logs with 3 string template params processTemplate handles this scenario" time="0.0000" classname="processTemplate handles this scenario">
    </testcase>
  </testsuite>
  <testsuite name="logs with 2 template params: errro, string" timestamp="2020-03-31T18:26:47" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/vsCodeUtils.test.js" time="0.0000" failures="0">
    <testcase name="getChannelLogger log level info logs with 2 template params: errro, string writes to the logger" time="0.0000" classname="writes to the logger">
    </testcase>
    <testcase name="getChannelLogger log level info logs with 2 template params: errro, string writes to the output channel" time="0.0000" classname="writes to the output channel">
    </testcase>
    <testcase name="getChannelLogger log level info logs with 2 template params: errro, string processTemplate handles this scenario" time="0.0000" classname="processTemplate handles this scenario">
    </testcase>
  </testsuite>
  <testsuite name="logs with 2 template params: error, error" timestamp="2020-03-31T18:26:47" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/vsCodeUtils.test.js" time="0.0000" failures="0">
    <testcase name="getChannelLogger log level info logs with 2 template params: error, error writes to the logger" time="0.0000" classname="writes to the logger">
    </testcase>
    <testcase name="getChannelLogger log level info logs with 2 template params: error, error writes to the output channel" time="0.0000" classname="writes to the output channel">
    </testcase>
    <testcase name="getChannelLogger log level info logs with 2 template params: error, error processTemplate handles this scenario" time="0.0000" classname="processTemplate handles this scenario">
    </testcase>
  </testsuite>
  <testsuite name="logs with 3 template params: string, error, error" timestamp="2020-03-31T18:26:47" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/vsCodeUtils.test.js" time="0.0000" failures="0">
    <testcase name="getChannelLogger log level info logs with 3 template params: string, error, error writes to the logger" time="0.0000" classname="writes to the logger">
    </testcase>
    <testcase name="getChannelLogger log level info logs with 3 template params: string, error, error writes to the output channel" time="0.0000" classname="writes to the output channel">
    </testcase>
    <testcase name="getChannelLogger log level info logs with 3 template params: string, error, error processTemplate handles this scenario" time="0.0000" classname="processTemplate handles this scenario">
    </testcase>
  </testsuite>
  <testsuite name="log level warn" timestamp="2020-03-31T18:26:47" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/vsCodeUtils.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="logs w/o template params" timestamp="2020-03-31T18:26:47" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/vsCodeUtils.test.js" time="0.0000" failures="0">
    <testcase name="getChannelLogger log level warn logs w/o template params writes to the logger" time="0.0000" classname="writes to the logger">
    </testcase>
    <testcase name="getChannelLogger log level warn logs w/o template params writes to the output channel" time="0.0000" classname="writes to the output channel">
    </testcase>
    <testcase name="getChannelLogger log level warn logs w/o template params processTemplate handles this scenario" time="0.0000" classname="processTemplate handles this scenario">
    </testcase>
  </testsuite>
  <testsuite name="logs with 1 string template param" timestamp="2020-03-31T18:26:47" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/vsCodeUtils.test.js" time="0.0000" failures="0">
    <testcase name="getChannelLogger log level warn logs with 1 string template param writes to the logger" time="0.0000" classname="writes to the logger">
    </testcase>
    <testcase name="getChannelLogger log level warn logs with 1 string template param writes to the output channel" time="0.0000" classname="writes to the output channel">
    </testcase>
    <testcase name="getChannelLogger log level warn logs with 1 string template param processTemplate handles this scenario" time="0.0000" classname="processTemplate handles this scenario">
    </testcase>
  </testsuite>
  <testsuite name="logs with 2 string template params" timestamp="2020-03-31T18:26:47" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/vsCodeUtils.test.js" time="0.0000" failures="0">
    <testcase name="getChannelLogger log level warn logs with 2 string template params writes to the logger" time="0.0000" classname="writes to the logger">
    </testcase>
    <testcase name="getChannelLogger log level warn logs with 2 string template params writes to the output channel" time="0.0000" classname="writes to the output channel">
    </testcase>
    <testcase name="getChannelLogger log level warn logs with 2 string template params processTemplate handles this scenario" time="0.0000" classname="processTemplate handles this scenario">
    </testcase>
  </testsuite>
  <testsuite name="logs with 3 string template params" timestamp="2020-03-31T18:26:47" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/vsCodeUtils.test.js" time="0.0000" failures="0">
    <testcase name="getChannelLogger log level warn logs with 3 string template params writes to the logger" time="0.0000" classname="writes to the logger">
    </testcase>
    <testcase name="getChannelLogger log level warn logs with 3 string template params writes to the output channel" time="0.0000" classname="writes to the output channel">
    </testcase>
    <testcase name="getChannelLogger log level warn logs with 3 string template params processTemplate handles this scenario" time="0.0000" classname="processTemplate handles this scenario">
    </testcase>
  </testsuite>
  <testsuite name="logs with 2 template params: errro, string" timestamp="2020-03-31T18:26:47" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/vsCodeUtils.test.js" time="0.0000" failures="0">
    <testcase name="getChannelLogger log level warn logs with 2 template params: errro, string writes to the logger" time="0.0000" classname="writes to the logger">
    </testcase>
    <testcase name="getChannelLogger log level warn logs with 2 template params: errro, string writes to the output channel" time="0.0000" classname="writes to the output channel">
    </testcase>
    <testcase name="getChannelLogger log level warn logs with 2 template params: errro, string processTemplate handles this scenario" time="0.0000" classname="processTemplate handles this scenario">
    </testcase>
  </testsuite>
  <testsuite name="logs with 2 template params: error, error" timestamp="2020-03-31T18:26:47" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/vsCodeUtils.test.js" time="0.0000" failures="0">
    <testcase name="getChannelLogger log level warn logs with 2 template params: error, error writes to the logger" time="0.0000" classname="writes to the logger">
    </testcase>
    <testcase name="getChannelLogger log level warn logs with 2 template params: error, error writes to the output channel" time="0.0000" classname="writes to the output channel">
    </testcase>
    <testcase name="getChannelLogger log level warn logs with 2 template params: error, error processTemplate handles this scenario" time="0.0000" classname="processTemplate handles this scenario">
    </testcase>
  </testsuite>
  <testsuite name="logs with 3 template params: string, error, error" timestamp="2020-03-31T18:26:47" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/vsCodeUtils.test.js" time="0.0000" failures="0">
    <testcase name="getChannelLogger log level warn logs with 3 template params: string, error, error writes to the logger" time="0.0000" classname="writes to the logger">
    </testcase>
    <testcase name="getChannelLogger log level warn logs with 3 template params: string, error, error writes to the output channel" time="0.0000" classname="writes to the output channel">
    </testcase>
    <testcase name="getChannelLogger log level warn logs with 3 template params: string, error, error processTemplate handles this scenario" time="0.0000" classname="processTemplate handles this scenario">
    </testcase>
  </testsuite>
  <testsuite name="log level error" timestamp="2020-03-31T18:26:47" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/vsCodeUtils.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="logs w/o template params" timestamp="2020-03-31T18:26:47" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/vsCodeUtils.test.js" time="0.0000" failures="0">
    <testcase name="getChannelLogger log level error logs w/o template params writes to the logger" time="0.0000" classname="writes to the logger">
    </testcase>
    <testcase name="getChannelLogger log level error logs w/o template params writes to the output channel" time="0.0000" classname="writes to the output channel">
    </testcase>
    <testcase name="getChannelLogger log level error logs w/o template params processTemplate handles this scenario" time="0.0000" classname="processTemplate handles this scenario">
    </testcase>
  </testsuite>
  <testsuite name="logs with 1 string template param" timestamp="2020-03-31T18:26:47" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/vsCodeUtils.test.js" time="0.0000" failures="0">
    <testcase name="getChannelLogger log level error logs with 1 string template param writes to the logger" time="0.0000" classname="writes to the logger">
    </testcase>
    <testcase name="getChannelLogger log level error logs with 1 string template param writes to the output channel" time="0.0000" classname="writes to the output channel">
    </testcase>
    <testcase name="getChannelLogger log level error logs with 1 string template param processTemplate handles this scenario" time="0.0000" classname="processTemplate handles this scenario">
    </testcase>
  </testsuite>
  <testsuite name="logs with 2 string template params" timestamp="2020-03-31T18:26:47" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/vsCodeUtils.test.js" time="0.0000" failures="0">
    <testcase name="getChannelLogger log level error logs with 2 string template params writes to the logger" time="0.0000" classname="writes to the logger">
    </testcase>
    <testcase name="getChannelLogger log level error logs with 2 string template params writes to the output channel" time="0.0000" classname="writes to the output channel">
    </testcase>
    <testcase name="getChannelLogger log level error logs with 2 string template params processTemplate handles this scenario" time="0.0000" classname="processTemplate handles this scenario">
    </testcase>
  </testsuite>
  <testsuite name="logs with 3 string template params" timestamp="2020-03-31T18:26:47" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/vsCodeUtils.test.js" time="0.0000" failures="0">
    <testcase name="getChannelLogger log level error logs with 3 string template params writes to the logger" time="0.0000" classname="writes to the logger">
    </testcase>
    <testcase name="getChannelLogger log level error logs with 3 string template params writes to the output channel" time="0.0000" classname="writes to the output channel">
    </testcase>
    <testcase name="getChannelLogger log level error logs with 3 string template params processTemplate handles this scenario" time="0.0000" classname="processTemplate handles this scenario">
    </testcase>
  </testsuite>
  <testsuite name="logs with 2 template params: errro, string" timestamp="2020-03-31T18:26:47" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/vsCodeUtils.test.js" time="0.0000" failures="0">
    <testcase name="getChannelLogger log level error logs with 2 template params: errro, string writes to the logger" time="0.0000" classname="writes to the logger">
    </testcase>
    <testcase name="getChannelLogger log level error logs with 2 template params: errro, string writes to the output channel" time="0.0000" classname="writes to the output channel">
    </testcase>
    <testcase name="getChannelLogger log level error logs with 2 template params: errro, string processTemplate handles this scenario" time="0.0000" classname="processTemplate handles this scenario">
    </testcase>
  </testsuite>
  <testsuite name="logs with 2 template params: error, error" timestamp="2020-03-31T18:26:47" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/vsCodeUtils.test.js" time="0.0000" failures="0">
    <testcase name="getChannelLogger log level error logs with 2 template params: error, error writes to the logger" time="0.0000" classname="writes to the logger">
    </testcase>
    <testcase name="getChannelLogger log level error logs with 2 template params: error, error writes to the output channel" time="0.0000" classname="writes to the output channel">
    </testcase>
    <testcase name="getChannelLogger log level error logs with 2 template params: error, error processTemplate handles this scenario" time="0.0000" classname="processTemplate handles this scenario">
    </testcase>
  </testsuite>
  <testsuite name="logs with 3 template params: string, error, error" timestamp="2020-03-31T18:26:47" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/shared/utilities/vsCodeUtils.test.js" time="0.0000" failures="0">
    <testcase name="getChannelLogger log level error logs with 3 template params: string, error, error writes to the logger" time="0.0000" classname="writes to the logger">
    </testcase>
    <testcase name="getChannelLogger log level error logs with 3 template params: string, error, error writes to the output channel" time="0.0000" classname="writes to the output channel">
    </testcase>
    <testcase name="getChannelLogger log level error logs with 3 template params: string, error, error processTemplate handles this scenario" time="0.0000" classname="processTemplate handles this scenario">
    </testcase>
  </testsuite>
  <testsuite name="StepFunctionsNode" timestamp="2020-03-31T18:26:47" tests="5" file="/codebuild/output/src956146630/src/dist/src/test/stepFunctions/explorer/stepFunctionNodes.test.js" time="0.0050" failures="0">
    <testcase name="StepFunctionsNode returns placeholder node if no children are present" time="0.0020" classname="returns placeholder node if no children are present">
    </testcase>
    <testcase name="StepFunctionsNode has StateMachineNode child nodes" time="0.0010" classname="has StateMachineNode child nodes">
    </testcase>
    <testcase name="StepFunctionsNode has child nodes with State Machine contextValue" time="0.0000" classname="has child nodes with State Machine contextValue">
    </testcase>
    <testcase name="StepFunctionsNode sorts child nodes" time="0.0010" classname="sorts child nodes">
    </testcase>
    <testcase name="StepFunctionsNode has an error node for a child if an error happens during loading" time="0.0010" classname="has an error node for a child if an error happens during loading">
    </testcase>
  </testsuite>
  <testsuite name="StateMachineGraphCache" timestamp="2020-03-31T18:26:47" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/stepFunctions/utils.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="updateCachedFile" timestamp="2020-03-31T18:26:47" tests="4" file="/codebuild/output/src956146630/src/dist/src/test/stepFunctions/utils.test.js" time="0.0020" failures="0">
    <testcase name="StateMachineGraphCache updateCachedFile downloads a file when it is not in cache and stores it" time="0.0010" classname="downloads a file when it is not in cache and stores it">
    </testcase>
    <testcase name="StateMachineGraphCache updateCachedFile downloads and stores a file when cached file exists but url has been updated" time="0.0000" classname="downloads and stores a file when cached file exists but url has been updated">
    </testcase>
    <testcase name="StateMachineGraphCache updateCachedFile it does not store data when file exists and url for it is same" time="0.0010" classname="it does not store data when file exists and url for it is same">
    </testcase>
    <testcase name="StateMachineGraphCache updateCachedFile creates assets directory when it does not exist" time="0.0000" classname="creates assets directory when it does not exist">
    </testcase>
  </testsuite>
  <testsuite name="isStepFunctionsRole" timestamp="2020-03-31T18:26:47" tests="3" file="/codebuild/output/src956146630/src/dist/src/test/stepFunctions/utils.test.js" time="0.0010" failures="0">
    <testcase name="isStepFunctionsRole return true if the Step Functions service principal is in the AssumeRolePolicyDocument" time="0.0010" classname="return true if the Step Functions service principal is in the AssumeRolePolicyDocument">
    </testcase>
    <testcase name="isStepFunctionsRole returns false if the role does not have an AssumeRolePolicyDocument" time="0.0000" classname="returns false if the role does not have an AssumeRolePolicyDocument">
    </testcase>
    <testcase name="isStepFunctionsRole returns false if the AssumeRolePolicyDocument does not contain Step Functions&apos; service principal" time="0.0000" classname="returns false if the AssumeRolePolicyDocument does not contain Step Functions&apos; service principal">
    </testcase>
  </testsuite>
  <testsuite name="PublishStateMachineWizard" timestamp="2020-03-31T18:26:47" tests="0" file="/codebuild/output/src956146630/src/dist/src/test/stepFunctions/wizards/publishStateMachineWizard.test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="PUBLISH_ACTION" timestamp="2020-03-31T18:26:47" tests="1" file="/codebuild/output/src956146630/src/dist/src/test/stepFunctions/wizards/publishStateMachineWizard.test.js" time="0.0010" failures="0">
    <testcase name="PublishStateMachineWizard PUBLISH_ACTION exits when cancelled" time="0.0010" classname="exits when cancelled">
    </testcase>
  </testsuite>
  <testsuite name="Quick create" timestamp="2020-03-31T18:26:47" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/stepFunctions/wizards/publishStateMachineWizard.test.js" time="0.0010" failures="0">
    <testcase name="PublishStateMachineWizard Quick create exits gracefully if cancelled" time="0.0010" classname="exits gracefully if cancelled">
    </testcase>
    <testcase name="PublishStateMachineWizard Quick create returns create response when completed" time="0.0000" classname="returns create response when completed">
    </testcase>
  </testsuite>
  <testsuite name="Quick update" timestamp="2020-03-31T18:26:47" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/stepFunctions/wizards/publishStateMachineWizard.test.js" time="0.0000" failures="0">
    <testcase name="PublishStateMachineWizard Quick update exits gracefully if cancelled" time="0.0000" classname="exits gracefully if cancelled">
    </testcase>
    <testcase name="PublishStateMachineWizard Quick update returns update response when completed" time="0.0000" classname="returns update response when completed">
    </testcase>
  </testsuite>
  <testsuite name="SamTemplateGenerator" timestamp="2020-03-31T18:26:47" tests="9" file="/codebuild/output/src956146630/src/dist/src/test/templates/sam/samTemplateGenerator.test.js" time="0.0180" failures="0">
    <testcase name="SamTemplateGenerator Produces a minimal template" time="0.0040" classname="Produces a minimal template">
    </testcase>
    <testcase name="SamTemplateGenerator Produces a template containing MemorySize" time="0.0020" classname="Produces a template containing MemorySize">
    </testcase>
    <testcase name="SamTemplateGenerator Produces a template containing Timeout" time="0.0040" classname="Produces a template containing Timeout">
    </testcase>
    <testcase name="SamTemplateGenerator Produces a template containing Environment" time="0.0030" classname="Produces a template containing Environment">
    </testcase>
    <testcase name="SamTemplateGenerator Produces a template with a Globals section" time="0.0030" classname="Produces a template with a Globals section">
    </testcase>
    <testcase name="SamTemplateGenerator errs if resource name is missing" time="0.0000" classname="errs if resource name is missing">
    </testcase>
    <testcase name="SamTemplateGenerator errs if function handler is missing" time="0.0000" classname="errs if function handler is missing">
    </testcase>
    <testcase name="SamTemplateGenerator errs if code uri is missing" time="0.0010" classname="errs if code uri is missing">
    </testcase>
    <testcase name="SamTemplateGenerator errs if runtime is missing" time="0.0010" classname="errs if runtime is missing">
    </testcase>
  </testsuite>
  <testsuite name="TypescriptLambdaHandlerSearch" timestamp="2020-03-31T18:26:47" tests="5" file="/codebuild/output/src956146630/src/dist/src/test/typescriptLambdaHandlerSearch.test.js" time="0.0150" failures="0">
    <testcase name="TypescriptLambdaHandlerSearch finds export declared functions in Typescript code" time="0.0090" classname="finds export declared functions in Typescript code">
    </testcase>
    <testcase name="TypescriptLambdaHandlerSearch ignores class declarations in Typescript code" time="0.0010" classname="ignores class declarations in Typescript code">
    </testcase>
    <testcase name="TypescriptLambdaHandlerSearch ignores interface declarations in Typescript code" time="0.0010" classname="ignores interface declarations in Typescript code">
    </testcase>
    <testcase name="TypescriptLambdaHandlerSearch finds module.exports declared functions in javascript code" time="0.0030" classname="finds module.exports declared functions in javascript code">
    </testcase>
    <testcase name="TypescriptLambdaHandlerSearch ignores class declarations in javascript code" time="0.0010" classname="ignores class declarations in javascript code">
    </testcase>
  </testsuite>
  <testsuite name="region" timestamp="2020-03-31T18:26:47" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/typescriptLambdaHandlerSearch.test.js" time="0.0010" failures="0">
    <testcase name="region uses user response as region" time="0.0000" classname="uses user response as region">
    </testcase>
    <testcase name="region backtracks when cancelled" time="0.0010" classname="backtracks when cancelled">
    </testcase>
  </testsuite>
  <testsuite name="registry" timestamp="2020-03-31T18:26:47" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/typescriptLambdaHandlerSearch.test.js" time="0.0010" failures="0">
    <testcase name="registry uses user response as registry" time="0.0000" classname="uses user response as registry">
    </testcase>
    <testcase name="registry backtracks when cancelled" time="0.0010" classname="backtracks when cancelled">
    </testcase>
  </testsuite>
  <testsuite name="schema" timestamp="2020-03-31T18:26:47" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/typescriptLambdaHandlerSearch.test.js" time="0.0010" failures="0">
    <testcase name="schema uses user response as schema" time="0.0000" classname="uses user response as schema">
    </testcase>
    <testcase name="schema backtracks when cancelled" time="0.0010" classname="backtracks when cancelled">
    </testcase>
  </testsuite>
  <testsuite name="location" timestamp="2020-03-31T18:26:47" tests="2" file="/codebuild/output/src956146630/src/dist/src/test/typescriptLambdaHandlerSearch.test.js" time="0.0010" failures="0">
    <testcase name="location uses user response as schema" time="0.0000" classname="uses user response as schema">
    </testcase>
    <testcase name="location backtracks when cancelled" time="0.0010" classname="backtracks when cancelled">
    </testcase>
  </testsuite>
</testsuites>